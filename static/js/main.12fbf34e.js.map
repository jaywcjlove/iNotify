{"version":3,"file":"static/js/main.12fbf34e.js","mappings":"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AAT1B,EACF,OAAOotC,EAAYppC,IAAIrH,EAAMF,KAAK2G,eAGpC,QAAS,UAAWzG,EACtB,CA5DcixC,CAAa/pC,EAAY3F,EAAKiF,SAAU,CAE1C,IAAIxH,EAEJ,IAAKA,KAAOkI,EACNvD,EAAIxE,KAAK+H,EAAYlI,IAEvBkyC,EAAYnrC,EAAQxE,EAAK2F,WAAYlI,EAAKkI,EAAWlI,GAG3D,MACE+F,EAASgG,QAAQ7D,GAKrB,OAASpF,EAAQiD,EAASjG,QACxBqyC,EAAS5vC,EAAKwD,SAAUA,EAASjD,IAQnC,MALkB,YAAdP,EAAKzB,MAAuC,aAAjByB,EAAKiF,UAClCjF,EAAKkO,QAAU,CAAC3P,KAAM,OAAQiF,SAAUxD,EAAKwD,UAC7CxD,EAAKwD,SAAW,IAGXxD,CACT,CAIN,CCtGiB27F,CAAKh3F,EAAAA,GAAM,qDCZrB,MAAMi3F,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,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","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/lib/index.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/handle/break.js","../node_modules/mdast-util-to-markdown/lib/handle/code.js","../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../node_modules/mdast-util-to-markdown/lib/handle/html.js","../node_modules/mdast-util-to-markdown/lib/handle/image.js","../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../node_modules/mdast-util-to-markdown/lib/handle/link.js","../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../node_modules/mdast-util-phrasing/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../node_modules/mdast-util-to-markdown/lib/handle/index.js","../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../node_modules/longest-streak/index.js","../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../node_modules/mdast-util-to-markdown/lib/handle/list.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../node_modules/mdast-util-to-markdown/lib/handle/root.js","../node_modules/mdast-util-to-markdown/lib/handle/text.js","../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/edit-map.js","../node_modules/micromark-extension-gfm-table/lib/infer.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/remark-gfm/lib/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/hast-util-raw/node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hast-util-raw/node_modules/hastscript/lib/create-h.js","../node_modules/hast-util-raw/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hast-util-raw/node_modules/hastscript/lib/index.js","../node_modules/hast-util-raw/node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-raw/node_modules/hast-util-from-parse5/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/unicode.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/error-codes.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../node_modules/hast-util-raw/node_modules/parse5/dist/common/html.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tree-adapters/default.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/doctype.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/foreign-content.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/hast-util-raw/node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/lib/index.js","../node_modules/@uiw/react-markdown-preview/esm/plugins/useCopied.js","../node_modules/@uiw/react-markdown-preview/esm/preview.js","../node_modules/rehype-prism-plus/node_modules/unist-util-is/lib/index.js","../node_modules/rehype-prism-plus/node_modules/unist-util-visit-parents/lib/index.js","../node_modules/rehype-prism-plus/node_modules/hast-util-to-string/index.js","../node_modules/unist-util-filter/node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../node_modules/rehype-prism-plus/node_modules/unist-util-visit/lib/index.js","../../src/all.js","../../src/common.js","../node_modules/css-selector-parser/dist/mjs/indexes.js","../node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js","../node_modules/css-selector-parser/dist/mjs/syntax-definitions.js","../node_modules/css-selector-parser/dist/mjs/utils.js","../node_modules/css-selector-parser/dist/mjs/parser.js","../node_modules/css-selector-parser/dist/mjs/ast.js","../node_modules/hast-util-select/lib/parse.js","../node_modules/direction/index.js","../node_modules/hast-util-to-string/lib/index.js","../node_modules/hast-util-select/lib/enter-state.js","../node_modules/hast-util-select/lib/attribute.js","../node_modules/hast-util-select/lib/class-name.js","../node_modules/hast-util-select/lib/id.js","../node_modules/hast-util-select/lib/name.js","../node_modules/bcp-47-match/index.js","../node_modules/hast-util-has-property/lib/index.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../node_modules/hast-util-select/lib/pseudo.js","../node_modules/hast-util-select/lib/test.js","../node_modules/hast-util-select/lib/walk.js","../node_modules/hast-util-select/lib/index.js","../node_modules/rehype-rewrite/src/index.ts","../node_modules/rehype-attr/src/utils.ts","../node_modules/rehype-attr/src/index.ts","../node_modules/@uiw/react-markdown-preview/esm/plugins/reservedMeta.js","../node_modules/@uiw/react-markdown-preview/esm/plugins/retrieveMeta.js","../node_modules/github-slugger/regex.js","../node_modules/github-slugger/index.js","../node_modules/hast-util-heading-rank/lib/index.js","../node_modules/rehype-slug/lib/index.js","../node_modules/hast-util-is-element/lib/index.js","../node_modules/rehype-autolink-headings/lib/index.js","../node_modules/rehype-ignore/src/index.ts","../node_modules/@uiw/react-markdown-preview/esm/nodes/octiconLink.js","../node_modules/@uiw/react-markdown-preview/esm/rehypePlugins.js","../node_modules/@uiw/react-markdown-preview/esm/index.js","../node_modules/@uiw/react-markdown-preview/esm/nodes/copy.js","../node_modules/@uiw/github-corners/src/index.ts","../node_modules/@uiw/react-github-corners/esm/index.js","../README.md","webpack://@wcjiang/notify/./website/components/GithubShields.module.less?45a4","components/GithubShields.js","webpack://@wcjiang/notify/./website/components/Button/index.module.less?6f17","components/Button/index.js","webpack://@wcjiang/notify/./website/components/Footer.module.less?cff4","components/Footer.js","webpack://@wcjiang/notify/./website/styles/index.module.less?2aeb","../src/main.js","App.js","index.js","../../src/main.js","../node_modules/@wcj/dark-mode/dist/dark-mode.min.js","../node_modules/boolbase/index.js","../node_modules/classnames/index.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/parse-numeric-range/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/comma-separated-tokens/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/core.js","../node_modules/hastscript/lib/html.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-reference-invalid/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/space-separated-tokens/index.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   An element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   An element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | undefined, [prop: string]: Array<Child> | Child | Element | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element' || node.type === 'root') {\n    const parentSchema = state.schema\n    let schema = parentSchema\n\n    if (\n      node.type === 'element' &&\n      node.tagName.toLowerCase() === 'svg' &&\n      parentSchema.space === 'html'\n    ) {\n      schema = svg\n      state.schema = schema\n    }\n\n    state.ancestors.push(node)\n\n    let children = createChildren(state, node)\n    const props = createProperties(state, state.ancestors)\n    let type = state.Fragment\n\n    state.ancestors.pop()\n\n    if (node.type === 'element') {\n      if (children && tableElements.has(node.tagName)) {\n        children = children.filter(function (child) {\n          return typeof child === 'string' ? !whitespace(child) : true\n        })\n      }\n\n      if (own.call(state.components, node.tagName)) {\n        const key = /** @type {keyof JSX.IntrinsicElements} */ (node.tagName)\n        type = state.components[key]\n\n        // If this is swapped out for a component:\n        if (\n          typeof type !== 'string' &&\n          type !== state.Fragment &&\n          state.passNode\n        ) {\n          props.node = node\n        }\n      } else {\n        type = node.tagName\n      }\n    }\n\n    if (children.length > 0) {\n      const value = children.length > 1 ? children : children[0]\n\n      if (value) {\n        props.children = value\n      }\n    }\n\n    // Restore parent schema.\n    state.schema = parentSchema\n\n    return state.create(node, type, props, key)\n  }\n\n  if (node.type === 'text') {\n    return node.value\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByTagName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys && child.type === 'element') {\n      const count = countsByTagName.get(child.tagName) || 0\n      key = child.tagName + '-' + count\n      countsByTagName.set(child.tagName, count + 1)\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle properties.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Parents>} ancestors\n *   Stack of parents.\n * @returns {Props}\n *   Props for runtime.\n */\nfunction createProperties(state, ancestors) {\n  const node = ancestors[ancestors.length - 1]\n  /** @type {Props} */\n  const props = {}\n  /** @type {string} */\n  let prop\n\n  if ('properties' in node && node.properties) {\n    /** @type {string | undefined} */\n    let alignValue\n\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          state,\n          ancestors,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          const [key, value] = result\n\n          if (\n            state.tableCellAlignToStyle &&\n            key === 'align' &&\n            typeof value === 'string' &&\n            tableCellElement.has(node.tagName)\n          ) {\n            alignValue = value\n          } else {\n            props[key] = value\n          }\n        }\n      }\n    }\n\n    if (alignValue) {\n      // Assume style is an object.\n      const style = /** @type {Style} */ (props.style || (props.style = {}))\n      style[\n        state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'\n      ] = alignValue\n    }\n  }\n\n  return props\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Parents>} ancestors\n *   Stack of parents.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, ancestors, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object'\n        ? value\n        : parseStyle(state, ancestors, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Nodes>} ancestors\n *   Stack of nodes.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, ancestors, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors,\n        cause,\n        source: 'hast-util-to-jsx-runtime',\n        ruleId: 'style'\n      })\n      message.file = state.filePath || undefined\n      message.url =\n        'https://github.com/syntax-tree/hast-util-to-jsx-runtime#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (toHast(tree, options))\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (toHast(tree, options || destination))\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is PhrasingContent} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      'link',\n      'linkReference',\n      'strong',\n      'text'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  }\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (default: `true`).\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","import copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { useEffect } from 'react';\nfunction getParentElement(target) {\n  if (!target) return null;\n  var dom = target;\n  if (dom.dataset.code && dom.classList.contains('copied')) {\n    return dom;\n  }\n  if (dom.parentElement) {\n    return getParentElement(dom.parentElement);\n  }\n  return null;\n}\nexport function useCopied(container) {\n  var handle = event => {\n    var target = getParentElement(event.target);\n    if (!target) return;\n    target.classList.add('active');\n    copyTextToClipboard(target.dataset.code, function () {\n      setTimeout(() => {\n        target.classList.remove('active');\n      }, 2000);\n    });\n  };\n  useEffect(() => {\n    var _container$current, _container$current2;\n    (_container$current = container.current) == null || _container$current.removeEventListener('click', handle, false);\n    (_container$current2 = container.current) == null || _container$current2.addEventListener('click', handle, false);\n    return () => {\n      var _container$current3;\n      (_container$current3 = container.current) == null || _container$current3.removeEventListener('click', handle, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container]);\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"source\", \"style\", \"disableCopy\", \"skipHtml\", \"onScroll\", \"onMouseOver\", \"pluginsFilter\", \"rehypeRewrite\", \"wrapperElement\", \"warpperElement\"];\nimport React, { useImperativeHandle } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport raw from 'rehype-raw';\nimport { useCopied } from './plugins/useCopied';\nimport \"./styles/markdown.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from './preview';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      prefixCls = 'wmde-markdown wmde-markdown-color',\n      className,\n      source,\n      style,\n      disableCopy = false,\n      skipHtml = true,\n      onScroll,\n      onMouseOver,\n      pluginsFilter,\n      wrapperElement = {},\n      warpperElement = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var mdp = React.useRef(null);\n  useImperativeHandle(ref, () => _extends({}, props, {\n    mdp\n  }), [mdp, props]);\n  var cls = (prefixCls || '') + \" \" + (className || '');\n  useCopied(mdp);\n  var rehypePlugins = [...(other.rehypePlugins || [])];\n  var customProps = {\n    allowElement: (element, index, parent) => {\n      if (other.allowElement) {\n        return other.allowElement(element, index, parent);\n      }\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\n    }\n  };\n  if (skipHtml) {\n    rehypePlugins.push(raw);\n  }\n  var remarkPlugins = [...(other.remarkPlugins || []), gfm];\n  var wrapperProps = _extends({}, warpperElement, wrapperElement);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: mdp,\n    onScroll: onScroll,\n    onMouseOver: onMouseOver\n  }, wrapperProps, {\n    className: cls,\n    style: style,\n    children: /*#__PURE__*/_jsx(ReactMarkdown, _extends({}, customProps, other, {\n      skipHtml: skipHtml,\n      rehypePlugins: pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins,\n      remarkPlugins: pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins,\n      children: source || ''\n    }))\n  }));\n});","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @param tree\n *   Tree to filter.\n * @param options\n *   Configuration (optional).\n * @param test\n *   `unist-util-is` compatible test.\n * @returns\n *   New filtered tree.\n *\n *   `null` is returned if `tree` itself didn’t pass the test, or is cascaded\n *   away.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: Options | null | undefined, test: Check | null | undefined) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: Options | null | undefined) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Options | Test | null | undefined} [options]\n     * @param {Test | null | undefined} [test]\n     * @returns {Node | null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      /** @type {boolean | null | undefined} */\n      const cascadeRaw =\n        options && typeof options === 'object' && 'cascade' in options\n          ? /** @type {boolean | null | undefined} */ (options.cascade)\n          : undefined\n      const cascade =\n        cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       *   Current node.\n       * @param {number | undefined} [index]\n       *   Index of `node` in `parent`.\n       * @param {Parent | undefined} [parent]\n       *   Parent node.\n       * @returns {Node | null}\n       *   Shallow copy of `node`.\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array<Node>} */\n        const children = []\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          let childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            const result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n        /** @type {string} */\n        let key\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n * @property {string} [defaultLanguage]\n *   Uses the specified language as the default if none is specified. Takes precedence over `ignoreMissing`.\n *   Note: The language must be registered with refractor.\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * @param {import('refractor/lib/core').Refractor} refractor\n * @param {string} defaultLanguage\n * @return {void}\n */\nconst checkIfLanguageIsRegistered = (refractor, defaultLanguage) => {\n  if (defaultLanguage && !refractor.registered(defaultLanguage)) {\n    throw new Error(`The default language \"${defaultLanguage}\" is not registered with refractor.`)\n  }\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    checkIfLanguageIsRegistered(refractor, options.defaultLanguage)\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n\n      let lang = getLanguage(node)\n      // If no language is set on the code block, use defaultLanguage if specified\n      if (!lang && options.defaultLanguage) {\n        lang = options.defaultLanguage\n        node.properties.className.push(`language-${lang}`)\n      }\n      node.properties.className.push('code-highlight')\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')) {\n            rootLang = lang.split('-')[1]\n          } else {\n            rootLang = lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '-'\n        ) {\n          line.properties.className.push('deleted')\n        } else if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '+'\n        ) {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","export var emptyMulticharIndex = {};\nexport var emptyRegularIndex = {};\nfunction extendIndex(item, index) {\n    var currentIndex = index;\n    for (var pos = 0; pos < item.length; pos++) {\n        var isLast = pos === item.length - 1;\n        var char = item.charAt(pos);\n        var charIndex = currentIndex[char] || (currentIndex[char] = { chars: {} });\n        if (isLast) {\n            charIndex.self = item;\n        }\n        currentIndex = charIndex.chars;\n    }\n}\nexport function createMulticharIndex(items) {\n    if (items.length === 0) {\n        return emptyMulticharIndex;\n    }\n    var index = {};\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        extendIndex(item, index);\n    }\n    return index;\n}\nexport function createRegularIndex(items) {\n    if (items.length === 0) {\n        return emptyRegularIndex;\n    }\n    var result = {};\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n        var item = items_2[_i];\n        result[item] = true;\n    }\n    return result;\n}\n","export var emptyPseudoSignatures = {};\nexport var defaultPseudoSignature = {\n    type: 'String',\n    optional: true\n};\nfunction calculatePseudoSignature(types) {\n    var result = {\n        type: 'NoArgument',\n        optional: false\n    };\n    function setResultType(type) {\n        if (result.type && result.type !== type && result.type !== 'NoArgument') {\n            throw new Error(\"Conflicting pseudo-class argument type: \\\"\".concat(result.type, \"\\\" vs \\\"\").concat(type, \"\\\".\"));\n        }\n        result.type = type;\n    }\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        if (type === 'NoArgument') {\n            result.optional = true;\n        }\n        if (type === 'Formula') {\n            setResultType('Formula');\n        }\n        if (type === 'FormulaOfSelector') {\n            setResultType('Formula');\n            result.ofSelector = true;\n        }\n        if (type === 'String') {\n            setResultType('String');\n        }\n        if (type === 'Selector') {\n            setResultType('Selector');\n        }\n    }\n    return result;\n}\nexport function inverseCategories(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var category = _a[_i];\n        var items = obj[category];\n        if (items) {\n            for (var _b = 0, _c = items; _b < _c.length; _b++) {\n                var item = _c[_b];\n                (result[item] || (result[item] = [])).push(category);\n            }\n        }\n    }\n    return result;\n}\nexport function calculatePseudoSignatures(definitions) {\n    var pseudoClassesToArgumentTypes = inverseCategories(definitions);\n    var result = {};\n    for (var _i = 0, _a = Object.keys(pseudoClassesToArgumentTypes); _i < _a.length; _i++) {\n        var pseudoClass = _a[_i];\n        var argumentTypes = pseudoClassesToArgumentTypes[pseudoClass];\n        if (argumentTypes) {\n            result[pseudoClass] = calculatePseudoSignature(argumentTypes);\n        }\n    }\n    return result;\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar emptyXmlOptions = {};\nvar defaultXmlOptions = { wildcard: true };\nexport function getXmlOptions(param) {\n    if (param) {\n        if (typeof param === 'boolean') {\n            return defaultXmlOptions;\n        }\n        else {\n            return param;\n        }\n    }\n    else {\n        return emptyXmlOptions;\n    }\n}\nfunction withMigration(migration, merge) {\n    return function (base, extension) { return merge(migration(base), migration(extension)); };\n}\nfunction withNoNegative(merge) {\n    return function (base, extension) {\n        var result = merge(base, extension);\n        if (!result) {\n            throw new Error(\"Syntax definition cannot be null or undefined.\");\n        }\n        return result;\n    };\n}\nfunction withPositive(positive, merge) {\n    return function (base, extension) {\n        if (extension === true) {\n            return positive;\n        }\n        return merge(base === true ? positive : base, extension);\n    };\n}\nfunction mergeSection(values) {\n    return function (base, extension) {\n        if (!extension || !base) {\n            return extension;\n        }\n        if (typeof extension !== 'object' || extension === null) {\n            throw new Error(\"Unexpected syntax definition extension type: \".concat(extension, \".\"));\n        }\n        var result = __assign({}, base);\n        for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            var mergeSchema = values[key];\n            result[key] = mergeSchema(base[key], value);\n        }\n        return result;\n    };\n}\nfunction replaceValueIfSpecified(base, extension) {\n    if (extension !== undefined) {\n        return extension;\n    }\n    return base;\n}\nfunction concatArray(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    return base.concat(extension);\n}\nfunction mergeDefinitions(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    var result = __assign({}, base);\n    for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        if (!value) {\n            delete result[key];\n            continue;\n        }\n        var baseValue = base[key];\n        if (!baseValue) {\n            result[key] = value;\n            continue;\n        }\n        result[key] = baseValue.concat(value);\n    }\n    return result;\n}\nexport var extendSyntaxDefinition = withNoNegative(mergeSection({\n    baseSyntax: replaceValueIfSpecified,\n    tag: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    ids: replaceValueIfSpecified,\n    classNames: replaceValueIfSpecified,\n    namespace: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    combinators: concatArray,\n    attributes: mergeSection({\n        operators: concatArray,\n        caseSensitivityModifiers: concatArray,\n        unknownCaseSensitivityModifiers: replaceValueIfSpecified\n    }),\n    pseudoClasses: mergeSection({\n        unknown: replaceValueIfSpecified,\n        definitions: mergeDefinitions\n    }),\n    pseudoElements: mergeSection({\n        unknown: replaceValueIfSpecified,\n        notation: replaceValueIfSpecified,\n        definitions: withMigration(function (definitions) { return (Array.isArray(definitions) ? { NoArgument: definitions } : definitions); }, mergeDefinitions)\n    })\n}));\nvar css1SyntaxDefinition = {\n    tag: {},\n    ids: true,\n    classNames: true,\n    combinators: [],\n    pseudoElements: {\n        unknown: 'reject',\n        notation: 'singleColon',\n        definitions: ['first-letter', 'first-line']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['link', 'visited', 'active']\n        }\n    }\n};\nvar css2SyntaxDefinition = extendSyntaxDefinition(css1SyntaxDefinition, {\n    tag: { wildcard: true },\n    combinators: ['>', '+'],\n    attributes: {\n        unknownCaseSensitivityModifiers: 'reject',\n        operators: ['=', '~=', '|=']\n    },\n    pseudoElements: {\n        definitions: ['before', 'after']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['hover', 'focus', 'first-child'],\n            String: ['lang']\n        }\n    }\n});\nvar selectors3SyntaxDefinition = extendSyntaxDefinition(css2SyntaxDefinition, {\n    namespace: {\n        wildcard: true\n    },\n    combinators: ['~'],\n    attributes: {\n        operators: ['^=', '$=', '*=']\n    },\n    pseudoElements: {\n        notation: 'both'\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'root',\n                'last-child',\n                'first-of-type',\n                'last-of-type',\n                'only-child',\n                'only-of-type',\n                'empty',\n                'target',\n                'enabled',\n                'disabled',\n                'checked',\n                'indeterminate'\n            ],\n            Formula: ['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type'],\n            Selector: ['not']\n        }\n    }\n});\nvar selectors4SyntaxDefinition = extendSyntaxDefinition(selectors3SyntaxDefinition, {\n    combinators: ['||'],\n    attributes: {\n        caseSensitivityModifiers: ['i', 'I', 's', 'S']\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'any-link',\n                'local-link',\n                'target-within',\n                'scope',\n                'current',\n                'past',\n                'future',\n                'focus-within',\n                'focus-visible',\n                'read-write',\n                'read-only',\n                'placeholder-shown',\n                'default',\n                'valid',\n                'invalid',\n                'in-range',\n                'out-of-range',\n                'required',\n                'optional',\n                'blank',\n                'user-invalid'\n            ],\n            Formula: ['nth-col', 'nth-last-col'],\n            String: ['dir'],\n            FormulaOfSelector: ['nth-child', 'nth-last-child'],\n            Selector: ['current', 'is', 'where', 'has']\n        }\n    }\n});\nvar progressiveSyntaxDefinition = extendSyntaxDefinition(selectors4SyntaxDefinition, {\n    pseudoElements: {\n        unknown: 'accept'\n    },\n    pseudoClasses: {\n        unknown: 'accept'\n    },\n    attributes: {\n        unknownCaseSensitivityModifiers: 'accept'\n    }\n});\nexport var cssSyntaxDefinitions = {\n    css1: css1SyntaxDefinition,\n    css2: css2SyntaxDefinition,\n    css3: selectors3SyntaxDefinition,\n    'selectors-3': selectors3SyntaxDefinition,\n    'selectors-4': selectors4SyntaxDefinition,\n    latest: selectors4SyntaxDefinition,\n    progressive: progressiveSyntaxDefinition\n};\n","export function isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-' || c === '_' || c === '\\\\';\n}\nexport function isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexport function isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexport var identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    $: true,\n    '%': true,\n    '&': true,\n    \"'\": true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexport var strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexport var stringEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\'\n};\nexport var whitespaceChars = {\n    ' ': true,\n    '\\t': true,\n    '\\n': true,\n    '\\r': true,\n    '\\f': true\n};\nexport var quoteChars = {\n    '\"': true,\n    \"'\": true\n};\nexport var digitsChars = {\n    0: true,\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true,\n    7: true,\n    8: true,\n    9: true\n};\nexport function escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' ||\n                chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xf800) === 0xd800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xfc00) !== 0xd800 || (extraCharCode & 0xfc00) !== 0xdc00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3ff) << 10) + (extraCharCode & 0x3ff) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result.trim();\n}\nexport function escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\".concat(result, \"\\\"\");\n}\n","import { createMulticharIndex, createRegularIndex, emptyMulticharIndex, emptyRegularIndex } from './indexes.js';\nimport { calculatePseudoSignatures, defaultPseudoSignature, emptyPseudoSignatures } from './pseudo-signatures.js';\nimport { cssSyntaxDefinitions, extendSyntaxDefinition, getXmlOptions } from './syntax-definitions.js';\nimport { digitsChars, isHex, isIdent, isIdentStart, quoteChars, stringEscapeChars, whitespaceChars } from './utils.js';\nvar errorPrefix = \"css-selector-parser parse error: \";\n/**\n * Creates a parse function to be used later to parse CSS selectors.\n */\nexport function createParser(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.syntax, syntax = _a === void 0 ? 'latest' : _a, substitutes = options.substitutes, _b = options.strict, strict = _b === void 0 ? true : _b;\n    var syntaxDefinition = typeof syntax === 'object' ? syntax : cssSyntaxDefinitions[syntax];\n    if (syntaxDefinition.baseSyntax) {\n        syntaxDefinition = extendSyntaxDefinition(cssSyntaxDefinitions[syntaxDefinition.baseSyntax], syntaxDefinition);\n    }\n    var _c = syntaxDefinition.tag\n        ? [true, Boolean(getXmlOptions(syntaxDefinition.tag).wildcard)]\n        : [false, false], tagNameEnabled = _c[0], tagNameWildcardEnabled = _c[1];\n    var idEnabled = Boolean(syntaxDefinition.ids);\n    var classNamesEnabled = Boolean(syntaxDefinition.classNames);\n    var namespaceEnabled = Boolean(syntaxDefinition.namespace);\n    var namespaceWildcardEnabled = syntaxDefinition.namespace &&\n        (syntaxDefinition.namespace === true || syntaxDefinition.namespace.wildcard === true);\n    if (namespaceEnabled && !tagNameEnabled) {\n        throw new Error(\"\".concat(errorPrefix, \"Namespaces cannot be enabled while tags are disabled.\"));\n    }\n    var substitutesEnabled = Boolean(substitutes);\n    var combinatorsIndex = syntaxDefinition.combinators\n        ? createMulticharIndex(syntaxDefinition.combinators)\n        : emptyMulticharIndex;\n    var _d = syntaxDefinition.attributes\n        ? [\n            true,\n            syntaxDefinition.attributes.operators\n                ? createMulticharIndex(syntaxDefinition.attributes.operators)\n                : emptyMulticharIndex,\n            syntaxDefinition.attributes.caseSensitivityModifiers\n                ? createRegularIndex(syntaxDefinition.attributes.caseSensitivityModifiers)\n                : emptyRegularIndex,\n            syntaxDefinition.attributes.unknownCaseSensitivityModifiers === 'accept'\n        ]\n        : [false, emptyMulticharIndex, emptyRegularIndex, false], attributesEnabled = _d[0], attributesOperatorsIndex = _d[1], attributesCaseSensitivityModifiers = _d[2], attributesAcceptUnknownCaseSensitivityModifiers = _d[3];\n    var attributesCaseSensitivityModifiersEnabled = attributesAcceptUnknownCaseSensitivityModifiers || Object.keys(attributesCaseSensitivityModifiers).length > 0;\n    var _e = syntaxDefinition.pseudoClasses\n        ? [\n            true,\n            syntaxDefinition.pseudoClasses.definitions\n                ? calculatePseudoSignatures(syntaxDefinition.pseudoClasses.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoClasses.unknown === 'accept'\n        ]\n        : [false, emptyPseudoSignatures, false], pseudoClassesEnabled = _e[0], pseudoClassesDefinitions = _e[1], pseudoClassesAcceptUnknown = _e[2];\n    var _f = syntaxDefinition.pseudoElements\n        ? [\n            true,\n            syntaxDefinition.pseudoElements.notation === 'singleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            !syntaxDefinition.pseudoElements.notation ||\n                syntaxDefinition.pseudoElements.notation === 'doubleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            syntaxDefinition.pseudoElements.definitions\n                ? calculatePseudoSignatures(Array.isArray(syntaxDefinition.pseudoElements.definitions)\n                    ? { NoArgument: syntaxDefinition.pseudoElements.definitions }\n                    : syntaxDefinition.pseudoElements.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoElements.unknown === 'accept'\n        ]\n        : [false, false, false, emptyPseudoSignatures, false], pseudoElementsEnabled = _f[0], pseudoElementsSingleColonNotationEnabled = _f[1], pseudoElementsDoubleColonNotationEnabled = _f[2], pseudoElementsDefinitions = _f[3], pseudoElementsAcceptUnknown = _f[4];\n    var str = '';\n    var l = str.length;\n    var pos = 0;\n    var chr = '';\n    var is = function (comparison) { return chr === comparison; };\n    var isTagStart = function () { return is('*') || isIdentStart(chr); };\n    var rewind = function (newPos) {\n        pos = newPos;\n        chr = str.charAt(pos);\n    };\n    var next = function () {\n        pos++;\n        chr = str.charAt(pos);\n    };\n    var readAndNext = function () {\n        var current = chr;\n        pos++;\n        chr = str.charAt(pos);\n        return current;\n    };\n    /** @throws ParserError */\n    function fail(errorMessage) {\n        var position = Math.min(l - 1, pos);\n        var error = new Error(\"\".concat(errorPrefix).concat(errorMessage, \" Pos: \").concat(position, \".\"));\n        error.position = position;\n        error.name = 'ParserError';\n        throw error;\n    }\n    function assert(condition, errorMessage) {\n        if (!condition) {\n            return fail(errorMessage);\n        }\n    }\n    var assertNonEof = function () {\n        assert(pos < l, 'Unexpected end of input.');\n    };\n    var isEof = function () { return pos >= l; };\n    var pass = function (character) {\n        assert(pos < l, \"Expected \\\"\".concat(character, \"\\\" but end of input reached.\"));\n        assert(chr === character, \"Expected \\\"\".concat(character, \"\\\" but \\\"\").concat(chr, \"\\\" found.\"));\n        pos++;\n        chr = str.charAt(pos);\n    };\n    function matchMulticharIndex(index) {\n        var match = matchMulticharIndexPos(index, pos);\n        if (match) {\n            pos += match.length;\n            chr = str.charAt(pos);\n            return match;\n        }\n    }\n    function matchMulticharIndexPos(index, subPos) {\n        var char = str.charAt(subPos);\n        var charIndex = index[char];\n        if (charIndex) {\n            var subMatch = matchMulticharIndexPos(charIndex.chars, subPos + 1);\n            if (subMatch) {\n                return subMatch;\n            }\n            if (charIndex.self) {\n                return charIndex.self;\n            }\n        }\n    }\n    function parseHex() {\n        var hex = readAndNext();\n        while (isHex(chr)) {\n            hex += readAndNext();\n        }\n        if (is(' ')) {\n            next();\n        }\n        return String.fromCharCode(parseInt(hex, 16));\n    }\n    function parseString(quote) {\n        var result = '';\n        pass(quote);\n        while (pos < l) {\n            if (is(quote)) {\n                next();\n                return result;\n            }\n            else if (is('\\\\')) {\n                next();\n                var esc = void 0;\n                if (is(quote)) {\n                    result += quote;\n                }\n                else if ((esc = stringEscapeChars[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (isHex(chr)) {\n                    result += parseHex();\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            next();\n        }\n        return result;\n    }\n    function parseIdentifier() {\n        if (!isIdentStart(chr)) {\n            return null;\n        }\n        var result = '';\n        while (pos < l) {\n            if (isIdent(chr)) {\n                result += readAndNext();\n            }\n            else if (is('\\\\')) {\n                next();\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        return result;\n    }\n    function parsePseudoClassString() {\n        var result = '';\n        while (pos < l) {\n            if (is(')')) {\n                break;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (isEof() && !strict) {\n                    return (result + '\\\\').trim();\n                }\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                result += readAndNext();\n            }\n        }\n        return result.trim();\n    }\n    function skipWhitespace() {\n        while (whitespaceChars[chr]) {\n            next();\n        }\n    }\n    function parseSelector(relative) {\n        if (relative === void 0) { relative = false; }\n        skipWhitespace();\n        var rules = [parseRule(relative)];\n        while (is(',')) {\n            next();\n            skipWhitespace();\n            rules.push(parseRule(relative));\n        }\n        return {\n            type: 'Selector',\n            rules: rules\n        };\n    }\n    function parseAttribute() {\n        pass('[');\n        skipWhitespace();\n        var attr;\n        if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var name_1 = parseIdentifier();\n            assert(name_1, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_1,\n                namespace: { type: 'NoNamespace' }\n            };\n        }\n        else if (is('*')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            next();\n            pass('|');\n            var name_2 = parseIdentifier();\n            assert(name_2, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_2,\n                namespace: { type: 'WildcardNamespace' }\n            };\n        }\n        else {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: identifier\n            };\n            if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isIdentStart(chr)) {\n                    assert(namespaceEnabled, 'Namespaces are not enabled.');\n                    var name_3 = parseIdentifier();\n                    assert(name_3, 'Expected attribute name.');\n                    attr = {\n                        type: 'Attribute',\n                        name: name_3,\n                        namespace: { type: 'NamespaceName', name: identifier }\n                    };\n                }\n                else {\n                    rewind(savedPos);\n                }\n            }\n        }\n        assert(attr.name, 'Expected attribute name.');\n        skipWhitespace();\n        if (isEof() && !strict) {\n            return attr;\n        }\n        if (is(']')) {\n            next();\n        }\n        else {\n            attr.operator = matchMulticharIndex(attributesOperatorsIndex);\n            assert(attr.operator, 'Expected a valid attribute selector operator.');\n            skipWhitespace();\n            assertNonEof();\n            if (quoteChars[chr]) {\n                attr.value = {\n                    type: 'String',\n                    value: parseString(chr)\n                };\n            }\n            else if (substitutesEnabled && is('$')) {\n                next();\n                var name_4 = parseIdentifier();\n                assert(name_4, 'Expected substitute name.');\n                attr.value = {\n                    type: 'Substitution',\n                    name: name_4\n                };\n            }\n            else {\n                var value = parseIdentifier();\n                assert(value, 'Expected attribute value.');\n                attr.value = {\n                    type: 'String',\n                    value: value\n                };\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return attr;\n            }\n            if (!is(']')) {\n                var caseSensitivityModifier = parseIdentifier();\n                assert(caseSensitivityModifier, 'Expected end of attribute selector.');\n                attr.caseSensitivityModifier = caseSensitivityModifier;\n                assert(attributesCaseSensitivityModifiersEnabled, 'Attribute case sensitivity modifiers are not enabled.');\n                assert(attributesAcceptUnknownCaseSensitivityModifiers ||\n                    attributesCaseSensitivityModifiers[attr.caseSensitivityModifier], 'Unknown attribute case sensitivity modifier.');\n                skipWhitespace();\n                if (isEof() && !strict) {\n                    return attr;\n                }\n            }\n            pass(']');\n        }\n        return attr;\n    }\n    function parseNumber() {\n        var result = '';\n        while (digitsChars[chr]) {\n            result += readAndNext();\n        }\n        assert(result !== '', 'Formula parse error.');\n        return parseInt(result);\n    }\n    var isNumberStart = function () { return is('-') || is('+') || digitsChars[chr]; };\n    function parseFormula() {\n        if (is('e') || is('o')) {\n            var ident = parseIdentifier();\n            if (ident === 'even') {\n                skipWhitespace();\n                return [2, 0];\n            }\n            if (ident === 'odd') {\n                skipWhitespace();\n                return [2, 1];\n            }\n        }\n        var firstNumber = null;\n        var firstNumberMultiplier = 1;\n        if (is('-')) {\n            next();\n            firstNumberMultiplier = -1;\n        }\n        if (isNumberStart()) {\n            if (is('+')) {\n                next();\n            }\n            firstNumber = parseNumber();\n            if (!is('\\\\') && !is('n')) {\n                return [0, firstNumber * firstNumberMultiplier];\n            }\n        }\n        if (firstNumber === null) {\n            firstNumber = 1;\n        }\n        firstNumber *= firstNumberMultiplier;\n        var identifier;\n        if (is('\\\\')) {\n            next();\n            if (isHex(chr)) {\n                identifier = parseHex();\n            }\n            else {\n                identifier = readAndNext();\n            }\n        }\n        else {\n            identifier = readAndNext();\n        }\n        assert(identifier === 'n', 'Formula parse error: expected \"n\".');\n        skipWhitespace();\n        if (is('+') || is('-')) {\n            var sign = is('+') ? 1 : -1;\n            next();\n            skipWhitespace();\n            return [firstNumber, sign * parseNumber()];\n        }\n        else {\n            return [firstNumber, 0];\n        }\n    }\n    function parsePseudoArgument(pseudoName, type, signature) {\n        var argument;\n        if (is('(')) {\n            next();\n            skipWhitespace();\n            if (substitutesEnabled && is('$')) {\n                next();\n                var name_5 = parseIdentifier();\n                assert(name_5, 'Expected substitute name.');\n                argument = {\n                    type: 'Substitution',\n                    name: name_5\n                };\n            }\n            else if (signature.type === 'String') {\n                argument = {\n                    type: 'String',\n                    value: parsePseudoClassString()\n                };\n                assert(argument.value, \"Expected \".concat(type, \" argument value.\"));\n            }\n            else if (signature.type === 'Selector') {\n                argument = parseSelector(true);\n            }\n            else if (signature.type === 'Formula') {\n                var _a = parseFormula(), a = _a[0], b = _a[1];\n                argument = {\n                    type: 'Formula',\n                    a: a,\n                    b: b\n                };\n                if (signature.ofSelector) {\n                    skipWhitespace();\n                    if (is('o') || is('\\\\')) {\n                        var ident = parseIdentifier();\n                        assert(ident === 'of', 'Formula of selector parse error.');\n                        skipWhitespace();\n                        argument = {\n                            type: 'FormulaOfSelector',\n                            a: a,\n                            b: b,\n                            selector: parseRule()\n                        };\n                    }\n                }\n            }\n            else {\n                return fail(\"Invalid \".concat(type, \" signature.\"));\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return argument;\n            }\n            pass(')');\n        }\n        else {\n            assert(signature.optional, \"Argument is required for \".concat(type, \" \\\"\").concat(pseudoName, \"\\\".\"));\n        }\n        return argument;\n    }\n    function parseTagName() {\n        if (is('*')) {\n            assert(tagNameWildcardEnabled, 'Wildcard tag name is not enabled.');\n            next();\n            return { type: 'WildcardTag' };\n        }\n        else if (isIdentStart(chr)) {\n            assert(tagNameEnabled, 'Tag names are not enabled.');\n            var name_6 = parseIdentifier();\n            assert(name_6, 'Expected tag name.');\n            return {\n                type: 'TagName',\n                name: name_6\n            };\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseTagNameWithNamespace() {\n        if (is('*')) {\n            var savedPos = pos;\n            next();\n            if (!is('|')) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'WildcardNamespace' };\n            return tagName;\n        }\n        else if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NoNamespace' };\n            return tagName;\n        }\n        else if (isIdentStart(chr)) {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected tag name.');\n            if (!is('|')) {\n                assert(tagNameEnabled, 'Tag names are not enabled.');\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            var savedPos = pos;\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NamespaceName', name: identifier };\n            return tagName;\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseRule(relative) {\n        var _a, _b;\n        if (relative === void 0) { relative = false; }\n        var rule = { type: 'Rule', items: [] };\n        if (relative) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            if (combinator) {\n                rule.combinator = combinator;\n                skipWhitespace();\n            }\n        }\n        while (pos < l) {\n            if (isTagStart()) {\n                assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                rule.items.push(parseTagNameWithNamespace());\n            }\n            else if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isTagStart()) {\n                    assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                    rewind(savedPos);\n                    rule.items.push(parseTagNameWithNamespace());\n                }\n                else {\n                    rewind(savedPos);\n                    break;\n                }\n            }\n            else if (is('.')) {\n                assert(classNamesEnabled, 'Class names are not enabled.');\n                next();\n                var className = parseIdentifier();\n                assert(className, 'Expected class name.');\n                rule.items.push({ type: 'ClassName', name: className });\n            }\n            else if (is('#')) {\n                assert(idEnabled, 'IDs are not enabled.');\n                next();\n                var idName = parseIdentifier();\n                assert(idName, 'Expected ID name.');\n                rule.items.push({ type: 'Id', name: idName });\n            }\n            else if (is('[')) {\n                assert(attributesEnabled, 'Attributes are not enabled.');\n                rule.items.push(parseAttribute());\n            }\n            else if (is(':')) {\n                var isDoubleColon = false;\n                var isPseudoElement = false;\n                next();\n                if (is(':')) {\n                    assert(pseudoElementsEnabled, 'Pseudo elements are not enabled.');\n                    assert(pseudoElementsDoubleColonNotationEnabled, 'Pseudo elements double colon notation is not enabled.');\n                    isDoubleColon = true;\n                    next();\n                }\n                var pseudoName = parseIdentifier();\n                assert(isDoubleColon || pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon || pseudoName, 'Expected pseudo-element name.');\n                assert(pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon ||\n                    pseudoElementsAcceptUnknown ||\n                    Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName), \"Unknown pseudo-element \\\"\".concat(pseudoName, \"\\\".\"));\n                isPseudoElement =\n                    pseudoElementsEnabled &&\n                        (isDoubleColon ||\n                            (!isDoubleColon &&\n                                pseudoElementsSingleColonNotationEnabled &&\n                                Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)));\n                if (isPseudoElement) {\n                    var signature = (_a = pseudoElementsDefinitions[pseudoName]) !== null && _a !== void 0 ? _a : (pseudoElementsAcceptUnknown && defaultPseudoSignature);\n                    var pseudoElement = {\n                        type: 'PseudoElement',\n                        name: pseudoName\n                    };\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-element', signature);\n                    if (argument) {\n                        assert(argument.type !== 'Formula' && argument.type !== 'FormulaOfSelector', 'Pseudo-elements cannot have formula argument.');\n                        pseudoElement.argument = argument;\n                    }\n                    rule.items.push(pseudoElement);\n                }\n                else {\n                    assert(pseudoClassesEnabled, 'Pseudo-classes are not enabled.');\n                    var signature = (_b = pseudoClassesDefinitions[pseudoName]) !== null && _b !== void 0 ? _b : (pseudoClassesAcceptUnknown && defaultPseudoSignature);\n                    assert(signature, \"Unknown pseudo-class: \\\"\".concat(pseudoName, \"\\\".\"));\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-class', signature);\n                    var pseudoClass = {\n                        type: 'PseudoClass',\n                        name: pseudoName\n                    };\n                    if (argument) {\n                        pseudoClass.argument = argument;\n                    }\n                    rule.items.push(pseudoClass);\n                }\n            }\n            else {\n                break;\n            }\n        }\n        if (rule.items.length === 0) {\n            if (isEof()) {\n                return fail('Expected rule but end of input reached.');\n            }\n            else {\n                return fail(\"Expected rule but \\\"\".concat(chr, \"\\\" found.\"));\n            }\n        }\n        skipWhitespace();\n        if (!isEof() && !is(',') && !is(')')) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            skipWhitespace();\n            rule.nestedRule = parseRule();\n            rule.nestedRule.combinator = combinator;\n        }\n        return rule;\n    }\n    return function (input) {\n        // noinspection SuspiciousTypeOfGuard\n        if (typeof input !== 'string') {\n            throw new Error(\"\".concat(errorPrefix, \"Expected string input.\"));\n        }\n        str = input;\n        l = str.length;\n        pos = 0;\n        chr = str.charAt(0);\n        return parseSelector();\n    };\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction astMethods(type) {\n    return function (generatorName, checkerName) {\n        var _a;\n        return (_a = {},\n            _a[generatorName] = function (props) { return (__assign({ type: type }, props)); },\n            _a[checkerName] = function (entity) {\n                return typeof entity === 'object' && entity !== null && entity.type === type;\n            },\n            _a);\n    };\n}\n/**\n * AST structure generators and matchers.\n * For instance, `ast.selector({rules: [...]})` creates AstSelector and `ast.isSelector(...)` checks if\n * AstSelector was specified.\n *\n * @example\n *\n * // Represents CSS selector: ns|div#user-34.user.user-active[role=\"button\"]:lang(en)::before > *\n * const selector = ast.selector({\n *     rules: [\n *         ast.rule({\n *             items: [\n *                 ast.tagName({name: 'div', namespace: ast.namespaceName({name: 'ns'})}),\n *                 ast.id({name: 'user-34'}),\n *                 ast.className({name: 'user'}),\n *                 ast.className({name: 'user-active'}),\n *                 ast.attribute({\n *                     name: 'role',\n *                     operator: '=',\n *                     value: ast.string({value: 'button'})\n *                 }),\n *                 ast.pseudoClass({\n *                     name: 'lang',\n *                     argument: ast.string({value: 'en'})\n *                 }),\n *                 ast.pseudoElement({name: 'before'})\n *             ],\n *             nestedRule: ast.rule({combinator: '>', items: [ast.wildcardTag()]})\n *         })\n *     ]\n * });\n * console.log(ast.isSelector(selector)); // prints true\n * console.log(ast.isRule(selector)); // prints false\n */\nexport var ast = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, astMethods('Selector')('selector', 'isSelector')), astMethods('Rule')('rule', 'isRule')), astMethods('TagName')('tagName', 'isTagName')), astMethods('Id')('id', 'isId')), astMethods('ClassName')('className', 'isClassName')), astMethods('WildcardTag')('wildcardTag', 'isWildcardTag')), astMethods('NamespaceName')('namespaceName', 'isNamespaceName')), astMethods('WildcardNamespace')('wildcardNamespace', 'isWildcardNamespace')), astMethods('NoNamespace')('noNamespace', 'isNoNamespace')), astMethods('Attribute')('attribute', 'isAttribute')), astMethods('PseudoClass')('pseudoClass', 'isPseudoClass')), astMethods('PseudoElement')('pseudoElement', 'isPseudoElement')), astMethods('String')('string', 'isString')), astMethods('Formula')('formula', 'isFormula')), astMethods('FormulaOfSelector')('formulaOfSelector', 'isFormulaOfSelector')), astMethods('Substitution')('substitution', 'isSubstitution'));\n","/**\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\n */\n\nimport {createParser} from 'css-selector-parser'\n\nconst cssSelectorParse = createParser({syntax: 'selectors-4'})\n\n/**\n * @param {string} selector\n *   Selector to parse.\n * @returns {AstSelector}\n *   Parsed selector.\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return cssSelectorParse(selector)\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n *\n * @typedef {import('unist-util-visit').Visitor<ElementContent>} Visitor\n *\n * @typedef {import('./index.js').Direction} Direction\n * @typedef {import('./index.js').State} State\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {EXIT, SKIP, visit} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {State} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Nodes} node\n *   Node to enter.\n * @returns {() => undefined}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let dirInferred\n\n  if (node.type === 'element') {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== null && lang !== undefined) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          dirInferred = node.properties.value\n            ? dirBidi(String(node.properties.value))\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * See `wooorm/direction`.\n *\n * @param {string} value\n *   Value to check.\n * @returns {Exclude<Direction, 'auto'> | undefined}\n *   Directionality.\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementContent} node\n *   Node to check.\n * @returns {Direction | undefined}\n *   Directionality.\n */\nfunction dirProperty(node) {\n  const value =\n    node.type === 'element' && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @typedef {import('css-selector-parser').AstAttribute} AstAttribute\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find} from 'property-information'\nimport * as spaces from 'space-separated-tokens'\n\n/**\n * @param {AstAttribute} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {Schema} schema\n *   Schema of element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function attribute(query, element, schema) {\n  const info = find(schema, query.name)\n  const propertyValue = element.properties[info.property]\n  let value = normalizeValue(propertyValue, info)\n\n  // Exists.\n  if (!query.value) {\n    return value !== undefined\n  }\n\n  assert(query.value.type === 'String', 'expected plain string')\n  let key = query.value.value\n\n  // Case-sensitivity.\n  if (query.caseSensitivityModifier === 'i') {\n    key = key.toLowerCase()\n\n    if (value) {\n      value = value.toLowerCase()\n    }\n  }\n\n  if (value !== undefined) {\n    switch (query.operator) {\n      // Exact.\n      case '=': {\n        return key === value\n      }\n\n      // Ends.\n      case '$=': {\n        return key === value.slice(-key.length)\n      }\n\n      // Contains.\n      case '*=': {\n        return value.includes(key)\n      }\n\n      // Begins.\n      case '^=': {\n        return key === value.slice(0, key.length)\n      }\n\n      // Exact or prefix.\n      case '|=': {\n        return (\n          key === value ||\n          (key === value.slice(0, key.length) &&\n            value.charAt(key.length) === '-')\n        )\n      }\n\n      // Space-separated list.\n      case '~=': {\n        return (\n          // For all other values (including comma-separated lists), return whether this\n          // is an exact match.\n          key === value ||\n          // If this is a space-separated list, and the query is contained in it, return\n          // true.\n          spaces.parse(value).includes(key)\n        )\n      }\n      // Other values are not yet supported by CSS.\n      // No default\n    }\n  }\n\n  return false\n}\n\n/**\n *\n * @param {Properties[keyof Properties]} value\n * @param {Info} info\n * @returns {string | undefined}\n */\nfunction normalizeValue(value, info) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'boolean') {\n    if (value) {\n      return info.attribute\n    }\n  } else if (Array.isArray(value)) {\n    if (value.length > 0) {\n      return (info.commaSeparated ? commas : spaces.stringify)(value)\n    }\n  } else {\n    return String(value)\n  }\n}\n","/**\n * @typedef {import('css-selector-parser').AstClassName} AstClassName\n * @typedef {import('hast').Element} Element\n */\n\n/** @type {Array<never>} */\nconst emptyClassNames = []\n\n/**\n * Check whether an element has all class names.\n *\n * @param {AstClassName} query\n *   AST rule (with `classNames`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function className(query, element) {\n  // Assume array.\n  const value = /** @type {Readonly<Array<string>>} */ (\n    element.properties.className || emptyClassNames\n  )\n\n  return value.includes(query.name)\n}\n","/**\n * @typedef {import('css-selector-parser').AstId} AstId\n *\n * @typedef {import('hast').Element} Element\n */\n\n// Workaround to show references to above types in VS Code.\n''\n\n/**\n * Check whether an element has an ID.\n *\n * @param {AstId} query\n *   AST rule (with `ids`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function id(query, element) {\n  return element.properties.id === query.name\n}\n","/**\n * @typedef {import('css-selector-parser').AstTagName} AstTagName\n *\n * @typedef {import('hast').Element} Element\n */\n\n// Workaround to show references to above types in VS Code.\n''\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {AstTagName} query\n *   AST rule (with `tag`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function name(query, element) {\n  return query.name === element.tagName\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node` is an element and has a `name` property.\n *\n * @template {string} Key\n *   Type of key.\n * @param {Nodes} node\n *   Node to check (typically `Element`).\n * @param {Key} name\n *   Property name to check.\n * @returns {node is Element & {properties: Record<Key, Array<number | string> | number | string | true>}}}\n *   Whether `node` is an element that has a `name` property.\n *\n *   Note: see <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/27c9274/types/hast/index.d.ts#L37C29-L37C98>.\n */\nexport function hasProperty(node, name) {\n  const value =\n    node.type === 'element' &&\n    own.call(node.properties, name) &&\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n",null,null,null,"/**\n * @typedef {import('css-selector-parser').AstPseudoClass} AstPseudoClass\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {ok as assert, unreachable} from 'devlop'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {walk} from './walk.js'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error: types are broken.\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: AstPseudoClass, element: Element, index: number | undefined, parent: Parents | undefined, state: State) => boolean} */\nexport const pseudo = zwitch('name', {\n  handlers: {\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    is,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-last-of-type': nthLastOfType,\n    'nth-of-type': nthOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  },\n  invalid: invalidPseudo,\n  unknown: unknownPseudo\n})\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {State} state\n *   State.\n * @param {AstPseudoClass} query\n *   Query.\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      (element.properties.type === 'checkbox' ||\n        element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction dir(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected plain text')\n  return state.direction === query.argument.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @returns {(value: number) => boolean}\n *   N.\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let fn = query._cachedFn\n\n  if (!fn) {\n    const value = query.argument\n    assert(value, 'expected `argument`')\n\n    if (value.type !== 'Formula') {\n      throw new Error(\n        'Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)'\n      )\n    }\n\n    fn = nthCheck(value.a + 'n+' + value.b)\n    // @ts-expect-error: cache.\n    query._cachedFn = fn\n  }\n\n  return fn\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction has(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  unreachable('Invalid pseudo-selector')\n}\n\n/**\n * Check whether an element `:is` further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction is(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lang(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected string')\n\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    extendedFilter(state.language, commas(query.argument.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction not(query, element, index, parent, state) {\n  return !is(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      fn(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    fn(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction root(_1, element, _2, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction scope(_1, element, _2, _3, state) {\n  return state.scopeElements.includes(element)\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n *   Element.\n * @param {(child: ElementContent) => boolean} check\n *   Check.\n * @returns {boolean}\n *   Whether a child of `element` matches `check`.\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {unknown} query_\n *   Query-like value.\n * @returns {never}\n *   Nothing.\n * @throws\n *   Exception.\n */\nfunction unknownPseudo(query_) {\n  // Runtime JS guarantees it has a `name`.\n  const query = /** @type {AstPseudoClass} */ (query_)\n  throw new Error('Unknown pseudo-selector `' + query.name + '`')\n}\n","/**\n * @typedef {import('css-selector-parser').AstRule} AstRule\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {AstRule} query\n *   AST rule (with `pseudoClasses`).\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function test(query, element, index, parent, state) {\n  for (const item of query.items) {\n    // eslint-disable-next-line unicorn/prefer-switch\n    if (item.type === 'Attribute') {\n      if (!attribute(item, element, state.schema)) return false\n    } else if (item.type === 'Id') {\n      if (!id(item, element)) return false\n    } else if (item.type === 'ClassName') {\n      if (!className(item, element)) return false\n    } else if (item.type === 'PseudoClass') {\n      if (!pseudo(item, element, index, parent, state)) return false\n    } else if (item.type === 'PseudoElement') {\n      throw new Error('Invalid selector: `::' + item.name + '`')\n    } else if (item.type === 'TagName') {\n      if (!name(item, element)) return false\n    } else {\n      // Otherwise `item.type` is `WildcardTag`, which matches.\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('css-selector-parser').AstRule} AstRule\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\n/**\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<AstRule> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<AstRule> | undefined} descendant\n *   `a b`\n * @property {Array<AstRule> | undefined} directChild\n *   `a > b`\n * @property {Array<AstRule> | undefined} generalSibling\n *   `a ~ b`\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Walk a tree.\n *\n * @param {State} state\n *   State.\n * @param {Nodes | undefined} tree\n *   Tree.\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined, tree)\n  }\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n *   Nesting.\n * @param {keyof Nest} field\n *   Field.\n * @param {AstRule} rule\n *   Rule.\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Check in a parent.\n *\n * @param {State} state\n *   State.\n * @param {Nest} nest\n *   Nesting.\n * @param {Parents} node\n *   Parent.\n * @param {Nodes} tree\n *   Tree.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(state, nest, node, tree) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<AstRule> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(\n        state,\n        forSibling,\n        node.children[index],\n        index,\n        node,\n        tree\n      )\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {State} state\n *   Current state.\n * @param {Array<AstRule>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const rule = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && rule.nestedRule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(rule, node, index, parent, state)) {\n      const nest = rule.nestedRule\n\n      // Are there more?\n      if (nest) {\n        /** @type {keyof Nest} */\n        const label =\n          nest.combinator === '+'\n            ? 'adjacentSibling'\n            : nest.combinator === '~'\n            ? 'generalSibling'\n            : nest.combinator === '>'\n            ? 'directChild'\n            : 'descendant'\n        add(nestResult, label, nest)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (rule.combinator === undefined) {\n      add(nestResult, 'descendant', rule)\n    }\n    // Adjacent.\n    else if (rule.combinator === '~') {\n      add(nestResult, 'generalSibling', rule)\n    }\n    // Drop direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<AstRule> | undefined} left\n *   Rules.\n * @param {Array<AstRule> | undefined} right\n *   Rules.\n * @returns {Array<AstRule>}\n *   Rules.\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n    ? left\n    : right && right.length > 0\n    ? right\n    : empty\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Nodes} node\n *   Node (we’re looking for elements).\n * @returns {undefined}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {State} state\n *   State.\n * @param {Array<AstRule>} currentRules\n *   Rules.\n * @param {Nodes} node\n *   Node.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {Nodes} tree\n *   Tree.\n * @returns {Nest}\n *   Nesting.\n */\nfunction one(state, currentRules, node, index, parent, tree) {\n  /** @type {Nest} */\n  let nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    let rootRules = state.rootQuery.rules\n\n    // Remove direct child rules if this is the root.\n    // This only happens for a `:has()` rule, which can be like\n    // `a:has(> b)`.\n    if (parent && parent !== tree) {\n      rootRules = state.rootQuery.rules.filter(\n        (d) =>\n          d.combinator === undefined ||\n          (d.combinator === '>' && parent === tree)\n      )\n    }\n\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, rootRules),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node, tree)\n  }\n\n  exit()\n\n  return nestResult\n}\n","/**\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {'html' | 'svg'} Space\n *   Name of namespace.\n *\n * @typedef {'auto' | 'ltr' | 'rtl'} Direction\n *   Direction.\n *\n * @typedef State\n *   Current state.\n * @property {Direction} direction\n *   Current direction.\n * @property {boolean} editableOrEditingHost\n *   Whether we’re in `contentEditable`.\n * @property {number | undefined} elementCount\n *   Track siblings: there are `n` siblings.\n * @property {number | undefined} elementIndex\n *   Track siblings: this current element has `n` elements before it.\n * @property {boolean} found\n *   Whether we found at least one match.\n * @property {string | undefined} language\n *   Current language.\n * @property {boolean} one\n *   Whether we can stop looking after we found one element.\n * @property {Array<Element>} results\n *   Matches.\n * @property {AstSelector} rootQuery\n *   Original root selectors.\n * @property {Schema} schema\n *   Current schema.\n * @property {Array<RootContent>} scopeElements\n *   Elements in scope.\n * @property {boolean} shallow\n *   Whether we only allow selectors without nesting.\n * @property {number | undefined} typeCount\n *   Track siblings: there are `n` siblings with this element’s tag name.\n * @property {number | undefined} typeIndex\n *   Track siblings: this current element has `n` elements with its tag name\n *   before it.\n */\n\nimport {html, svg} from 'property-information'\nimport {parse} from './parse.js'\nimport {walk} from './walk.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [node]\n *   Node that might match `selector`, should be an element (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Element | undefined}\n *   First element in `tree` that matches `selector` or `undefined` if nothing\n *   is found; this could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  return state.results[0]\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {State} State\n *   State.\n */\nfunction createState(selector, tree, space) {\n  return {\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    elementCount: undefined,\n    elementIndex: undefined,\n    found: false,\n    language: undefined,\n    one: false,\n    // State of the query.\n    results: [],\n    rootQuery: parse(selector),\n    schema: space === 'svg' ? svg : html,\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    shallow: false,\n    typeIndex: undefined,\n    typeCount: undefined\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index?: number, parent?: Root | Element): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","import type { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport type { RehypeAttrsOptions } from './index.js';\n\nexport const getURLParameters = (url: string = '') =>\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\n      (a: Record<string, string | number | boolean>, v: string) => (\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\n      ),\n      {}\n    )\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import type { Plugin } from 'unified';\nimport type { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport { visit } from 'unist-util-visit';\nexport var reservedMeta = function reservedMeta(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return tree => {\n    visit(tree, node => {\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\n        node.properties = _extends({}, node.properties, {\n          'data-meta': String(node.data.meta)\n        });\n      }\n    });\n  };\n};","import { visit } from 'unist-util-visit';\nexport var retrieveMeta = function retrieveMeta(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return tree => {\n    visit(tree, node => {\n      if (node.type === 'element' && node.tagName === 'code' && node.properties && node.properties['dataMeta']) {\n        if (!node.data) {\n          node.data = {};\n        }\n        node.data.meta = node.properties['dataMeta'];\n        delete node.properties['dataMeta'];\n      }\n    });\n  };\n};","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Nodes} node\n *   Node to check.\n * @returns {number | undefined}\n *   Rank of the heading or `undefined` if not a heading.\n */\nexport function headingRank(node) {\n  const name = node.type === 'element' ? node.tagName.toLowerCase() : ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */\n    ? code - 48 /* `0` */\n    : undefined\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s (default: `''`).\n */\n\nimport GithubSlugger from 'github-slugger'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\n/** @type {Options} */\nconst emptyOptions = {}\nconst slugs = new GithubSlugger()\n\n/**\n * Add `id`s to headings.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSlug(options) {\n  const settings = options || emptyOptions\n  const prefix = settings.prefix || ''\n\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    slugs.reset()\n\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && !node.properties.id) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-is-element').Test} Test\n */\n\n/**\n * @typedef {'after' | 'append' | 'before' | 'prepend' | 'wrap'} Behavior\n *   Behavior.\n *\n * @callback Build\n *   Generate content.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Content.\n *\n * @callback BuildProperties\n *   Generate properties.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Properties}\n *   Properties.\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior | null | undefined} [behavior='prepend']\n *   How to create links (default: `'prepend'`).\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [content]\n *   Content to insert in the link (default: if `'wrap'` then `undefined`,\n *   otherwise `<span class=\"icon icon-link\"></span>`);\n *   if `behavior` is `'wrap'` and `Build` is passed, its result replaces the\n *   existing content, otherwise the content is added after existing content.\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [group]\n *   Content to wrap the heading and link with, if `behavior` is `'after'` or\n *   `'before'` (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [headingProperties]\n *   Extra properties to set on the heading (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [properties]\n *   Extra properties to set on the link when injecting (default:\n *   `{ariaHidden: true, tabIndex: -1}` if `'append'` or `'prepend'`, otherwise\n *   `undefined`).\n * @property {Test | null | undefined} [test]\n *   Extra test for which headings are linked (optional).\n */\n\n/**\n * @template T\n *   Kind.\n * @typedef {(\n *   T extends Record<any, any>\n *     ? {-readonly [k in keyof T]: Cloneable<T[k]>}\n *     : T\n * )} Cloneable\n *   Deep clone.\n *\n *   See: <https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1237#issuecomment-1345515448>\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {SKIP, visit} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add links from headings back to themselves.\n *\n * ###### Notes\n *\n * This plugin only applies to headings with `id`s.\n * Use `rehype-slug` to generate `id`s for headings that don’t have them.\n *\n * Several behaviors are supported:\n *\n * *   `'prepend'` (default) — inject link before the heading text\n * *   `'append'` — inject link after the heading text\n * *   `'wrap'` — wrap the whole heading text with the link\n * *   `'before'` — insert link before the heading\n * *   `'after'` — insert link after the heading\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeAutolinkHeadings(options) {\n  const settings = options || emptyOptions\n  let properties = settings.properties\n  const headingOroperties = settings.headingProperties\n  const behavior = settings.behavior || 'prepend'\n  const content = settings.content\n  const group = settings.group\n  const is = convertElement(settings.test)\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  let method\n\n  if (behavior === 'after' || behavior === 'before') {\n    method = around\n  } else if (behavior === 'wrap') {\n    method = wrap\n  } else {\n    method = inject\n\n    if (!properties) {\n      properties = {ariaHidden: 'true', tabIndex: -1}\n    }\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, 'element', function (node, index, parent) {\n      if (headingRank(node) && node.properties.id && is(node, index, parent)) {\n        Object.assign(node.properties, toProperties(headingOroperties, node))\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function inject(node) {\n    const children = toChildren(content || contentDefaults, node)\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, toProperties(properties, node), children)\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function around(node, index, parent) {\n    /* c8 ignore next -- uncommon */\n    if (typeof index !== 'number' || !parent) return\n\n    const children = toChildren(content || contentDefaults, node)\n    const link = create(node, toProperties(properties, node), children)\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function wrap(node) {\n    /** @type {Array<ElementContent>} */\n    let before = node.children\n    /** @type {Array<ElementContent> | ElementContent} */\n    let after = []\n\n    if (typeof content === 'function') {\n      before = []\n      after = content(node)\n    } else if (content) {\n      after = clone(content)\n    }\n\n    node.children = [\n      create(\n        node,\n        toProperties(properties, node),\n        Array.isArray(after) ? [...before, ...after] : [...before, after]\n      )\n    ]\n\n    return [SKIP]\n  }\n}\n\n/**\n * Deep clone.\n *\n * @template T\n *   Kind.\n * @param {T} thing\n *   Thing to clone.\n * @returns {Cloneable<T>}\n *   Cloned thing.\n */\nfunction clone(thing) {\n  // Cast because it’s mutable now.\n  return /** @type {Cloneable<T>} */ (structuredClone(thing))\n}\n\n/**\n * Create an `a`.\n *\n * @param {Readonly<Element>} node\n *   Related heading.\n * @param {Properties | undefined} properties\n *   Properties to set on the link.\n * @param {Array<ElementContent>} children\n *   Content.\n * @returns {Element}\n *   Link.\n */\nfunction create(node, properties, children) {\n  return {\n    type: 'element',\n    tagName: 'a',\n    properties: {...properties, href: '#' + node.properties.id},\n    children\n  }\n}\n\n/**\n * Turn into children.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent>}\n *   Children.\n */\nfunction toChildren(value, node) {\n  const result = toNode(value, node)\n  return Array.isArray(result) ? result : [result]\n}\n\n/**\n * Turn into a node.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Node.\n */\nfunction toNode(value, node) {\n  if (typeof value === 'function') return value(node)\n  return clone(value)\n}\n\n/**\n * Turn into properties.\n *\n * @param {Readonly<Properties> | BuildProperties | null | undefined} value\n *   Properties.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Properties}\n *   Properties.\n */\nfunction toProperties(value, node) {\n  if (typeof value === 'function') return value(node)\n  return value ? clone(value) : {}\n}\n","import type { Plugin, Pluggable } from 'unified';\nimport type { Root, RootContent, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\n\n/**\n * Raw string of HTML embedded into HTML AST.\n */\nexport interface Raw extends Literal {\n  /**\n   * Node type.\n   */\n  type: 'raw'\n}\n\n// Register nodes in content.\ndeclare module 'hast' {\n  interface RootContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n  interface ElementContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n}\n\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  (item.value || '').trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","export var octiconLink = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true'\n  },\n  children: [{\n    type: 'element',\n    tagName: 'path',\n    children: [],\n    properties: {\n      fillRule: 'evenodd',\n      d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'\n    }\n  }]\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeIgnore from 'rehype-ignore';\nimport { getCodeString } from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nexport var rehypeRewriteHandle = (disableCopy, rewrite) => (node, index, parent) => {\n  if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n    var child = node.children && node.children[0];\n    if (child && child.properties && child.properties.ariaHidden === 'true') {\n      child.properties = _extends({\n        class: 'anchor'\n      }, child.properties);\n      child.children = [octiconLink];\n    }\n  }\n  if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\n    var code = getCodeString(node.children);\n    node.children.push(copyElement(code));\n  }\n  rewrite && rewrite(node, index === null ? undefined : index, parent === null ? undefined : parent);\n};\nexport var defaultRehypePlugins = [slug, headings, rehypeIgnore];","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport MarkdownPreview from './preview';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite from 'rehype-rewrite';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypeRaw from 'rehype-raw';\nimport { reservedMeta } from './plugins/reservedMeta';\nimport { retrieveMeta } from './plugins/retrieveMeta';\nimport { rehypeRewriteHandle, defaultRehypePlugins } from './rehypePlugins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from './preview';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _props$disableCopy;\n  var rehypePlugins = [reservedMeta, rehypeRaw, retrieveMeta, [rehypePrism, {\n    ignoreMissing: true\n  }], ...defaultRehypePlugins, [rehypeRewrite, {\n    rewrite: rehypeRewriteHandle((_props$disableCopy = props.disableCopy) != null ? _props$disableCopy : false, props.rehypeRewrite)\n  }], [rehypeAttrs, {\n    properties: 'attr'\n  }], ...(props.rehypePlugins || [])];\n  return /*#__PURE__*/_jsx(MarkdownPreview, _extends({}, props, {\n    rehypePlugins: rehypePlugins,\n    ref: ref\n  }));\n});","export function copyElement(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      class: 'copied',\n      'data-code': str\n    },\n    children: [{\n      type: 'element',\n      tagName: 'svg',\n      properties: {\n        className: 'octicon-copy',\n        ariaHidden: 'true',\n        viewBox: '0 0 16 16',\n        fill: 'currentColor',\n        height: 12,\n        width: 12\n      },\n      children: [{\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z'\n        },\n        children: []\n      }, {\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z'\n        },\n        children: []\n      }]\n    }, {\n      type: 'element',\n      tagName: 'svg',\n      properties: {\n        className: 'octicon-check',\n        ariaHidden: 'true',\n        viewBox: '0 0 16 16',\n        fill: 'currentColor',\n        height: 12,\n        width: 12\n      },\n      children: [{\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z'\n        },\n        children: []\n      }]\n    }]\n  };\n}","// @ts-ignore\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'github-corners': GithubCorners;\n  }\n  namespace JSX {\n    interface IntrinsicElements {\n      'github-corners': Partial<GithubCorners> | {\n        style?: Partial<CSSStyleDeclaration> | React.CSSProperties;\n      };\n    }\n  }\n}\n\nconst GITHUB_CORNERS_TEMPLATE = document.createElement(\"template\");\nGITHUB_CORNERS_TEMPLATE.innerHTML = `\n<style>\n:host a:hover .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n@keyframes octocat-wave {\n  0%, 100% { transform: rotate(0); }\n  20%, 60% { transform: rotate(-25deg); }\n  40%, 80% { transform: rotate(10deg); }\n}\n@media (max-width:500px) {\n  :host a:hover .octo-arm { animation: none; }\n  :host .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n}\n:host svg {\n  z-index: 99;\n  position: fixed;\n  border: 0px;\n  top: 0px;\n}\n</style>\n<svg width=\"54\" height=\"54\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n  <a xlink:href=\"https://github.com/uiwjs/react-github-corners\" target=\"_blank\" rel=\"nofollow sponsored\" style=\"fill: rgb(21, 21, 19); color: rgb(255, 255, 255);\">\n    <g>\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\" style=\"transform-origin: 130px 106px;\"></path>\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n    </g>\n  </a>\n</svg>\n`;\n\nexport class GithubCorners extends HTMLElement {\n  /** Sets the z-order of a positioned element and its descendants or flex items. */\n  'z-index'?: string;\n  height?: string | number;\n  width?: string | number;\n  href?: string;\n  color?: string;\n  fill?: string;\n  position?: string;\n  target?: string;\n  top?: string;\n  left?: string;\n  right?: string = '0';\n  bottom?: string;\n  transform?: string;\n  private shadow: ShadowRoot\n  static get observedAttributes(): string[] {\n    return ['style', 'z-index', 'target', 'height', 'width', 'href', 'color', 'fill', 'position', 'top', 'left', 'right', 'bottom', 'transform'];\n  }\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.shadow.appendChild(this.ownerDocument.importNode(GITHUB_CORNERS_TEMPLATE.content, true));\n    this.update()\n  }\n  private setAttr(name: string, value: string) {\n    const svg = this.shadow.querySelector('svg');\n    if (/(href)/.test(name.toLocaleLowerCase())) {\n      svg.lastElementChild.setAttribute('xlink:href', value);\n    } else if (/(color|fill)/.test(name.toLocaleLowerCase())) {\n      (svg.firstElementChild as HTMLAnchorElement).style[name as any] = value;\n    } else if (/(z-index|position|top|left|right|bottom|transform)/.test(name.toLocaleLowerCase())) {\n      svg.style[name as any] = value;\n    } else {\n      svg.setAttribute(name, value);\n    }\n  }\n  private update() {\n    ;[...this.getAttributeNames(), 'right'].forEach((name) => {\n      const value = this.getAttribute(name) || this[name as keyof GithubCorners] as any || '';\n      this.setAttr(name, value);\n    });\n  }\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.setAttr(name, newValue);\n    }\n  }\n}\n\ncustomElements.define('github-corners', GithubCorners);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"size\", \"fixed\", \"bottom\", \"zIndex\", \"className\", \"style\", \"bgColor\", \"color\", \"position\"];\nimport React from 'react';\nimport '@uiw/github-corners';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function githubCorners(props) {\n  var {\n      size = 80,\n      fixed = false,\n      bottom,\n      zIndex,\n      style,\n      bgColor = '#151513',\n      color = '#fff',\n      position = 'right'\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  var styl = position === 'left' ? {\n    left: 0,\n    right: 'initial',\n    transform: 'scale(-1, 1)'\n  } : {\n    right: 0,\n    left: 'initial',\n    transform: 'scale(1, 1)'\n  };\n  if (bottom) {\n    styl.bottom = 0;\n    styl.top = 'initial';\n    styl.transform = position === 'left' ? 'scale(-1, -1)' : 'scale(1, -1)';\n  } else {\n    styl.bottom = 'initial';\n    styl.top = 0;\n  }\n  return /*#__PURE__*/_jsx(\"github-corners\", _extends({\n    target: \"__blank\",\n    width: size,\n    height: size,\n    href: props.href,\n    position: fixed ? 'fixed' : 'absolute',\n    \"z-index\": zIndex,\n    style: style,\n    fill: bgColor,\n    color: color\n  }, styl, otherProps));\n}","export default \"<p align=\\\"center\\\">\\n  <a href=\\\"https://jaywcjlove.github.io/iNotify\\\">\\n    <img alt=\\\"iNotify demo preview\\\" src=\\\"https://github.com/jaywcjlove/iNotify/blob/master/website/assets/iNotify.png?raw=true\\\">\\n  </a>\\n</p>\\n\\n<p align=\\\"center\\\">\\n  <a href=\\\"https://jaywcjlove.github.io/#/sponsor\\\">\\n    <img src=\\\"https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee\\\">\\n  </a>\\n  <a href=\\\"https://github.com/jaywcjlove/iNotify/issues\\\">\\n    <img src=\\\"https://img.shields.io/github/issues/jaywcjlove/iNotify.svg\\\">\\n  </a>\\n  <a href=\\\"https://github.com/jaywcjlove/iNotify/network\\\">\\n    <img src=\\\"https://img.shields.io/github/forks/jaywcjlove/iNotify.svg\\\">\\n  </a>\\n  <a href=\\\"https://github.com/jaywcjlove/iNotify/stargazers\\\">\\n    <img src=\\\"https://img.shields.io/github/stars/jaywcjlove/iNotify.svg\\\">\\n  </a>\\n  <a href=\\\"https://github.com/jaywcjlove/iNotify/releases\\\">\\n    <img src=\\\"https://img.shields.io/github/release/jaywcjlove/iNotify.svg\\\">\\n  </a>\\n  <a href=\\\"https://www.npmjs.com/package/@wcjiang/notify\\\">\\n    <img src=\\\"https://img.shields.io/npm/v/@wcjiang/notify.svg\\\">\\n  </a>\\n  <a href=\\\"./README-zh.md\\\">\\n    <img src=\\\"https://jaywcjlove.github.io/sb/lang/chinese.svg\\\">\\n  </a>\\n</p>\\n\\n<!--dividing-->\\n\\nJS achieve the browser title flashing, scrolling, voice prompts, Chrome/Safari/FireFox/IE notice. has no dependencies. It not interfere with any JavaScript libraries or frameworks. has a reasonable footprint 5.05kb (gzipped: 1.75kb)，Official document [demo preview](https://jaywcjlove.github.io/iNotify)。\\n\\n## Installation\\n\\nYou will need Node.js installed on your system.\\n\\n```bash\\n# v2.x\\n$ npm install @wcjiang/notify --save\\n# v1.x\\n$ npm install title-notify --save\\n```\\n\\n> ⚠️: open in server. You can use [ssr](https://github.com/jaywcjlove/ssr) to quickly create a service..\\n\\n## Using\\n\\n```js\\nimport Notify from \\\"@wcjiang/notify\\\";\\n\\nconst notify = new Notify({\\n  message: \\\"There is message.\\\", // page title.\\n  effect: \\\"flash\\\", // flash | scroll, Flashing or scrolling\\n  openurl: \\\"https://github.com/jaywcjlove/iNotify\\\", // Click on the pop-up window to open the connection address\\n  onclick: () => {\\n    // Click on the pop-up window trip event\\n    // Programmatically closes a notification.\\n    notify.close();\\n    console.log(\\\"---\\\");\\n  },\\n  // Optional playback sound\\n  audio: {\\n    // You can use arrays to pass sound files in multiple formats.\\n    file: [\\\"msg.mp4\\\", \\\"msg.mp3\\\", \\\"msg.wav\\\"],\\n    // The following is also work.\\n    // file: 'msg.mp4'\\n  },\\n  // Title flashing, or scrolling speed\\n  interval: 1000,\\n  disableFavicon: false, // Optional, default false, if true, No longer overwrites the original favicon\\n  // Optional, default green background white text. Favicon\\n  updateFavicon: {\\n    // favicon font color\\n    textColor: \\\"#fff\\\",\\n    // Background color, set the background color to be transparent, set the value to \\\"transparent\\\"\\n    backgroundColor: \\\"#2F9A00\\\",\\n  },\\n  // Optional chrome browser notifications，\\n  // The default is not to fill in the following content\\n  notification: {\\n    title: \\\"Notification!\\\", // Set notification title\\n    icon: \\\"\\\", // Set notification icon, The default is Favicon\\n    body: \\\"You have a new message!\\\", // Set message content\\n  },\\n});\\n\\nnotify.player();\\n```\\n\\nOr manually download and link **notify.js** in your HTML, It can also be downloaded via [UNPKG](https://unpkg.com/@wcjiang/notify/dist/)：\\n\\n```html\\n<script src=\\\"https://unpkg.com/@wcjiang/notify/dist/notify.min.js\\\"></script>\\n<script type=\\\"text/javascript\\\">\\n  var notify = new Notify({\\n    effect: \\\"flash\\\",\\n    interval: 500,\\n  });\\n  notify.setFavicon(\\\"1\\\");\\n</script>\\n```\\n\\n## option\\n\\n- **message**: String, page title\\n- **effect**: String, flash | scroll | favicon, Flashing or scrolling\\n- **audio**: Optional playback sound\\n  - **file**: String/Array, You can use arrays to pass sound files in multiple formats.\\n- **interval**: Number, Title flashing, or scrolling speed.\\n- **openurl**: String, Click on the pop-up window to open the connection address\\n- **onclick**: Function, Click on the pop-up window trip event\\n- **updateFavicon**: Optional, default green background white text. Favicon\\n  - **textColor**: String, favicon font color.\\n  - **backgroundColor**: Background color, set the background color to be transparent, set the value to \\\"transparent\\\"\\n- **notification**: Optional chrome browser notifications, The default is not to fill in the following content\\n  - **title**: Set notification title `iNotify`\\n  - **icon**: Set notification icon, The default is Favicon\\n  - **body**: Set message content\\n\\n## isPermission\\n\\nDetermine if the browser bulletin notification is blocked.\\n\\n```js\\nnotify.isPermission();\\n```\\n\\n## Sound Settings\\n\\n### player\\n\\nPlay sound.\\n\\n```js\\nnotify.player();\\n```\\n\\n### loopPlay\\n\\nLoop the sound.\\n\\n```js\\nnotify.loopPlay();\\n```\\n\\n### stopPlay\\n\\nStop playing sound.\\n\\n```js\\nnotify.stopPlay();\\n```\\n\\n### setURL\\n\\nSet the playback sound URL.\\n\\n```js\\nnotify.setURL(\\\"msg.mp3\\\"); // Set one\\nnotify.setURL([\\\"msg.mp3\\\", \\\"msg.ogg\\\", \\\"msg.mp4\\\"]); // Set multiple\\n```\\n\\n## title\\n\\nThe latest version does not play the title blinking animation by default. After initialization, you need to call the `setTitle(true)` method to play the title animation.\\n\\n### setTitle\\n\\nSet the title.\\n\\n```js\\nnotify.setTitle(true); // Play animation\\nnotify.setTitle(\\\"New title\\\"); // Flashing new title\\nnotify.setTitle(); // Clear Blinking Show original title\\n```\\n\\n### setInterval\\n\\nSet time interval.\\n\\n```js\\nnotify.setInterval(2000);\\n```\\n\\n### close\\n\\nProgrammatically closes a notification.\\n\\n```js\\nnotify.close();\\n```\\n\\n### addTimer\\n\\nAdd counter\\n\\n```js\\nnotify.addTimer();\\n```\\n\\n### clearTimer\\n\\nClear counter.\\n\\n```js\\nnotify.clearTimer();\\n```\\n\\n## Favicon Notice\\n\\n### setFavicon\\n\\nSet `icon` to display numbers or text\\n\\n```js\\nnotify.setFavicon(10);\\n```\\n\\n### setFaviconColor\\n\\nSet `icon` display text color\\n\\n```js\\nnotify.setFaviconColor(\\\"#0043ff\\\");\\n```\\n\\n### setFaviconBackgroundColor\\n\\nSet `icon` to display text color\\n\\n```js\\nnotify.setFaviconBackgroundColor(\\\"#0043ff\\\");\\n// Set font and background color\\nnotify.setFaviconColor(\\\"#f5ff00\\\").setFaviconBackgroundColor(\\\"red\\\");\\n```\\n\\n### faviconClear\\n\\nClear digital display original `icon`.\\n\\n```js\\nnotify.faviconClear();\\n```\\n\\n## Chrome Notice\\n\\n### notify\\n\\nThe chrome notification pops up, and the parameters are not passed as default values...\\n\\n```js\\nnotify.notify();\\nnotify.notify({\\n  title: \\\"New notice\\\",\\n  body: \\\"Thunder, it’s raining...\\\",\\n  openurl: \\\"https://jaywcjlove.github.io\\\",\\n  onclick: function () {\\n    console.log(\\\"on click\\\");\\n  },\\n  onshow: function () {\\n    console.log(\\\"on show\\\");\\n  },\\n});\\n```\\n\\n- `title` The notification title that will be displayed.\\n- `dir` The direction of the text; its value can be auto (auto), ltr (left to right), or rtl (right to left).\\n- `icon` The URL of a picture that will be used to display the icon for the notification.\\n- `body` A string that is additionally displayed in the notification.\\n- `openurl` Click to open the specified URL.\\n- `onclick` Triggered whenever the user clicks on the notification.\\n- `onshow` Triggered when the notification is displayed.\\n- `onerror` Triggered whenever a notification encounters an error.\\n- `onclose` Triggered when the user closes the notification.\\n\\n## Other\\n\\n`notify.init().title;` Get the title.\\n\\n## Example\\n\\n### Example 1\\n\\n```js\\nfunction iconNotify(num) {\\n  if (!notify) {\\n    var notify = new Notify({\\n      effect: \\\"flash\\\",\\n      interval: 500,\\n    });\\n  }\\n  if (num === 0) {\\n    notify.faviconClear();\\n    notify.setTitle();\\n  } else if (num < 100) {\\n    notify.setFavicon(num);\\n    notify.setTitle(\\\"There is new message!\\\");\\n  } else if (num > 99) {\\n    notify.setFavicon(\\\"..\\\");\\n    notify.setTitle(\\\"There is new message!\\\");\\n  }\\n}\\n```\\n\\n### Example 2\\n\\n```js\\nvar notify = new Notify({\\n  effect: \\\"flash\\\",\\n  interval: 500,\\n});\\nnotify.setFavicon(\\\"1\\\");\\n```\\n\\n### Example 3\\n\\n```js\\nvar iN = new Notify({\\n  effect: \\\"flash\\\",\\n  interval: 500,\\n  message: \\\"There is new message!\\\",\\n  updateFavicon: {\\n    // Optional, default green background white\\n    textColor: \\\"#fff\\\", // favicon font color\\n    backgroundColor: \\\"#2F9A00\\\", // favicon background color\\n  },\\n}).setFavicon(10);\\n```\\n\\n### Example 4\\n\\n```js\\nvar iN = new Notify().setFavicon(5);\\n```\\n\\n### Example 5\\n\\n```js\\nvar iN = new Notify({\\n  effect: \\\"flash\\\",\\n  interval: 500,\\n  message: \\\"There is new message!\\\",\\n  audio: {\\n    file: \\\"msg.mp4\\\",\\n  },\\n})\\n  .setFavicon(10)\\n  .player();\\n```\\n\\n### Example 6\\n\\n```js\\nvar iN = new Notify({\\n  effect: \\\"flash\\\",\\n  interval: 500,\\n  message: \\\"There is new message!\\\",\\n  audio: {\\n    file: \\\"msg.mp4\\\", // You can use arrays to pass sound files in multiple formats.\\n  },\\n  notification: {\\n    title: \\\"Notification!\\\", // Set notification title\\n    icon: \\\"\\\", // Set notification icon, The default is Favicon\\n    body: \\\"You have a new message!\\\", // Set message content\\n  },\\n})\\n  .setFavicon(10)\\n  .player();\\n\\n// The chrome notification pops up, and the parameters are not passed as default values...\\niN.notify();\\n\\niN.notify({\\n  title: \\\"Notification!\\\", // Set notification title\\n  body: \\\"You have a new message!\\\", // Set message content\\n});\\n```\\n\\n### Example 7\\n\\n```js\\nvar iN = new Notify({\\n  effect: \\\"flash\\\",\\n  interval: 500,\\n  message: \\\"There is new message!\\\",\\n  audio: {\\n    file: [\\\"msg.mp4\\\", \\\"msg.mp3\\\", \\\"msg.wav\\\"],\\n  },\\n  notification: {\\n    title: \\\"Notification!\\\", // Set notification title\\n    body: \\\"You have a new message!\\\", // Set message content\\n  },\\n});\\n\\niN.setFavicon(10).player();\\n\\nvar n = new Notify();\\nn.init({\\n  effect: \\\"flash\\\",\\n  interval: 500,\\n  message: \\\"There is new message!\\\",\\n  audio: {\\n    file: [\\\"openSub.mp4\\\", \\\"openSub.mp3\\\", \\\"openSub.wav\\\"],\\n  },\\n  notification: {\\n    title: \\\"Notification!\\\",\\n    icon: \\\"\\\",\\n    body: \\\"You have a new message!\\\",\\n  },\\n});\\n\\nn.setFavicon(10).player();\\n```\\n\\n## Contributors\\n\\nAs always, thanks to our amazing contributors!\\n\\n<a href=\\\"https://github.com/jaywcjlove/iNotify/graphs/contributors\\\">\\n  <img src=\\\"https://jaywcjlove.github.io/iNotify/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\nMade with [contributors](https://github.com/jaywcjlove/github-action-contributors).\\n\\n## License\\n\\n[MIT © Kenny Wong](https://github.com/jaywcjlove/iNotify/blob/master/MIT-LICENSE)\\n\";","// extracted by mini-css-extract-plugin\nexport default {\"shields\":\"GithubShields_shields__olqv7\"};","import React from 'react';\nimport styles from './GithubShields.module.less';\n\nexport default function GithubShields({ source }) {\n  return (\n    <div className={styles.shields}>\n      {source.map((item, idx) => (\n        <a key={idx} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={item.img} alt=\"\" />\n        </a>\n      ))}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"index_button__nNd7C\"};","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.less';\n\nconst index = ({\n  className, children, type = 'button', ...props\n}) => {\n  return (\n    <button className={classNames(className, styles.button)} type={type} {...props}> {children} </button>\n  );\n};\n\nexport default index;\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"Footer_footer__6AZaJ\"};","import React from 'react';\nimport style from './Footer.module.less';\n\nexport default function Footer({ name, href, year }) {\n  return (\n    <div className={style.footer}>\n      <div>\n        Licensed under MIT. (Yes it&acute;s free and\n        <a href=\"https://github.com/jaywcjlove/hotkeys\">\n          open-sourced\n        </a>\n        )\n      </div>\n      <div>\n        ©\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={href}>\n          {name}\n        </a>\n        {year}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"panel\":\"index_panel__AWhli\",\"button\":\"index_button__UNTJM\"};","// 提醒是否添加chrome通知\nif (window.Notification && window.Notification.permission !== 'granted') {\n  window.Notification.requestPermission().then((permission) => {\n    if (permission === 'denied') {\n      console.log(\"Permission wasn't granted. Allow a retry.\");\n      return;\n    }\n    if (permission === 'default') {\n      console.log('The permission request was dismissed.');\n      return;\n    }\n  });\n}\nlet iconURL = '';\nconst repeatableEffects = ['flash', 'scroll'];\n\nconst defaultNotification = {\n  title: 'iNotify !',\n  body: 'You have a new message.',\n  openurl: '',\n};\nfunction jsonArguments(news, olds) {\n  for (const a in olds) {\n    if (news[a]) {\n      olds[a] = news[a];\n    }\n  }\n  return olds;\n}\nfunction isArray(value) {\n  return Object.prototype.toString.call(value) === '[object Array]';\n}\n\nfunction createAudio(url) {\n  const audioElm = document.createElement('audio');\n  audioElm.autoplay = true;\n  audioElm.muted = true;\n  let source;\n  if (isArray(url) && url.length > 0) {\n    for (let i = 0; i < url.length; i++) {\n      source = document.createElement('source');\n      source.src = url[i];\n      source.type = `audio/${getExtension(url[i])}`;\n      audioElm.appendChild(source);\n    }\n  } else {\n    audioElm.src = url;\n  }\n  return audioElm;\n}\n\nfunction getFavicon(setting) {\n  let ic = document.querySelectorAll('link[rel~=shortcut]')[0];\n  if (!ic) {\n    ic = changeFavicon('O', setting);\n  }\n  return ic;\n}\n\nfunction getExtension(fileName) {\n  return fileName.match(/\\.([^\\\\.]+)$/)[1];\n}\n\nfunction changeFavicon(num, settings) {\n  const canvas = document.createElement('canvas');\n  const head = document.getElementsByTagName('head')[0];\n  const linkTag = document.createElement('link');\n  let ctx = null;\n\n  canvas.height = 32;\n  canvas.width = 32;\n  ctx = canvas.getContext('2d');\n  ctx.fillStyle = settings.backgroundColor;\n  ctx.fillRect(0, 0, 32, 32);\n\n  ctx.textAlign = 'center';\n  ctx.font = '22px \"helvetica\", sans-serif';\n  ctx.fillStyle = settings.textColor;\n  num && ctx.fillText(num, 16, 24);\n\n  // 生成到\n  linkTag.setAttribute('rel', 'shortcut icon');\n  linkTag.setAttribute('type', 'image/x-icon');\n  linkTag.setAttribute('id', `new${settings.id}`);\n  linkTag.setAttribute('href', canvas.toDataURL('image/png'));\n  iconURL = canvas.toDataURL('image/png');\n  return head.appendChild(linkTag);\n}\n\nfunction Notify(config) {\n  if (config) {\n    this.init(config);\n  }\n}\n\nNotify.prototype = {\n  init(config) {\n    if (!config) {\n      config = {};\n    }\n    this.interval = config.interval || 100; // 响应时长\n    this.effect = config.effect || 'flash'; // 效果\n    this.title = config.title || document.title; // 标题\n    this.message = config.message || this.title; // 原来的标题\n    this.onclick = config.onclick || this.onclick; // 点击事件\n    this.openurl = config.openurl || this.openurl; // 点击事件\n    this.disableFavicon = config.disableFavicon || false; // 禁用favicon 默认开启\n    this.updateFavicon = !this.disableFavicon\n      && (config.updateFavicon || {\n        id: 'favicon',\n        textColor: '#fff',\n        backgroundColor: '#2F9A00',\n      });\n    this.audio = config.audio || '';\n    this.favicon = !this.disableFavicon && getFavicon(this.updateFavicon);\n    this.cloneFavicon = this.favicon && this.favicon.cloneNode(true);\n    iconURL = config.notification && config.notification.icon\n      ? config.notification.icon\n      : config.icon\n        ? config.icon\n        : this.favicon.href;\n    defaultNotification.icon = iconURL;\n    this.notification = config.notification || defaultNotification;\n    // 初始化生成声音文件节点\n    if (this.audio && this.audio.file) {\n      this.setURL(this.audio.file);\n    }\n    return this;\n  },\n  render() {\n    if (this.effect === 'flash') {\n      document.title = this.title === document.title ? this.message : this.title;\n    } else if (this.effect === 'scroll') {\n      const title = this.message || document.title;\n      if (!this.scrollTitle || !this.scrollTitle.slice(1)) {\n        document.title = title;\n        this.scrollTitle = title;\n      } else {\n        this.scrollTitle = this.scrollTitle.slice(1);\n        document.title = this.scrollTitle;\n      }\n    }\n    return this;\n  },\n  // 设置标题\n  setTitle(str) {\n    if (str === true) {\n      if (repeatableEffects.indexOf(this.effect) >= 0) {\n        return this.addTimer();\n      }\n    } else if (str) {\n      this.message = str;\n      this.scrollTitle = '';\n      this.addTimer();\n    } else {\n      this.clearTimer();\n    }\n    return this;\n  },\n  setURL(url) {\n    if (url) {\n      if (this.audioElm) {\n        this.audioElm.remove();\n      }\n      this.audioElm = createAudio(url);\n      document.body.appendChild(this.audioElm);\n    }\n    return this;\n  },\n  loopPlay() {\n    this.setURL();\n    this.audioElm.loop = true;\n    this.player();\n    return this;\n  },\n  stopPlay() {\n    this.audioElm && ((this.audioElm.loop = false), this.audioElm.pause());\n    return this;\n  },\n  // 播放声音\n  player() {\n    if (!this.audio || !this.audio.file) {\n      return;\n    }\n    if (!this.audioElm) {\n      this.audioElm = createAudio(this.audio.file);\n      document.body.appendChild(this.audioElm);\n    }\n    this.audioElm.muted = false;\n    const resp = this.audioElm.play();\n    if (resp !== undefined) {\n      resp.then(() => {\n        // autoplay starts!\n      }).catch(() => {\n        // show error\n      });\n    }\n    return this;\n  },\n  notify(json) {\n    let nt = this.notification;\n    const url = json.openurl ? json.openurl : this.openurl;\n    const onclick = json.onclick ? json.onclick : this.onclick;\n    if (window.Notification) {\n      if (json) {\n        nt = jsonArguments(json, nt);\n      } else {\n        nt = defaultNotification;\n      }\n      const option = {};\n      option.icon = json.icon ? json.icon : iconURL;\n      option.body = nt.body || json.body;\n      if (json.dir) option.dir = json.dir;\n      const n = new Notification(nt.title || json.title, option);\n      n.onclick = () => {\n        onclick && typeof onclick === 'function' && onclick(n);\n        url && window.open(url);\n      };\n      n.onshow = () => {\n        json.onshow && typeof json.onshow === 'function' && json.onshow(n);\n      };\n      n.onclose = () => {\n        json.onclose && typeof json.onclose === 'function' && json.onclose(n);\n      };\n      n.onerror = () => {\n        json.onerror && typeof json.onerror === 'function' && json.onerror(n);\n      };\n      this.Notifiy = n;\n    }\n    return this;\n  },\n  // 是否许可弹框通知\n  isPermission() {\n    return window.Notification && Notification.permission === 'granted';\n  },\n  // 设置时间间隔\n  setInterval(num) {\n    if (num) {\n      this.interval = num;\n      this.addTimer();\n    }\n    return this;\n  },\n  // 设置网页Icon\n  setFavicon(num) {\n    if (!num && num !== 0) {\n      return this.faviconClear();\n    }\n    const oldicon = document.getElementById(`new${this.updateFavicon.id}`);\n    if (this.favicon) {\n      this.favicon.remove();\n    }\n    if (oldicon) {\n      oldicon.remove();\n    }\n    this.updateFavicon.num = num;\n    changeFavicon(num, this.updateFavicon);\n    return this;\n  },\n  // 设置 Favicon 文字颜色\n  setFaviconColor(color) {\n    if (color) {\n      this.faviconRemove();\n      this.updateFavicon.textColor = color;\n      changeFavicon(this.updateFavicon.num, this.updateFavicon);\n    }\n    return this;\n  },\n  // 设置 Favicon 背景颜色\n  setFaviconBackgroundColor(color) {\n    if (color) {\n      this.faviconRemove();\n      this.updateFavicon.backgroundColor = color;\n      changeFavicon(this.updateFavicon.num, this.updateFavicon);\n    }\n    return this;\n  },\n  faviconRemove() {\n    this.faviconClear();\n    const oldicon = document.getElementById(`new${this.updateFavicon.id}`);\n    if (this.favicon) {\n      this.favicon.remove();\n    }\n    if (oldicon) {\n      oldicon.remove();\n    }\n  },\n  // 添加计数器\n  addTimer() {\n    this.clearTimer();\n    if (repeatableEffects.indexOf(this.effect) >= 0) {\n      this.timer = setInterval(this.render.bind(this), this.interval);\n    }\n    return this;\n  },\n  close() {\n    if (this.Notifiy) this.Notifiy.close();\n  },\n  // 清除Icon\n  faviconClear() {\n    const newicon = document.getElementById(`new${this.updateFavicon.id}`);\n    const head = document.getElementsByTagName('head')[0];\n    const ficon = document.querySelectorAll('link[rel~=shortcut]');\n    newicon && newicon.remove();\n    if (ficon.length > 0) {\n      for (let i = 0; i < ficon.length; i++) {\n        ficon[i].remove();\n      }\n    }\n    head.appendChild(this.cloneFavicon);\n    iconURL = this.cloneFavicon.href;\n    this.favicon = this.cloneFavicon;\n    return this;\n  },\n  // 清除计数器\n  clearTimer() {\n    this.timer && clearInterval(this.timer);\n    document.title = this.title;\n    return this;\n  },\n};\n\nexport default Notify;\n","import React, { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport '@wcj/dark-mode';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport DocumentStr from '../README.md';\nimport GithubShields from './components/GithubShields';\nimport Button from './components/Button';\nimport Footer from './components/Footer';\nimport styles from './styles/index.module.less';\nimport './styles/reset.less';\nimport Notify from '..';\nimport notifyImg from './assets/iNotify.png';\n\nimport mp4 from './assets/msg.mp4';\nimport mp3 from './assets/msg.mp3';\nimport wav from './assets/msg.wav';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      button: [\n        {\n          label: 'Popup box',\n          onClick: () => {\n            this.iN.notify({\n              title: 'Welcome to iNotify!',\n              body: 'You are opening the iNotify website!',\n            });\n          },\n        },\n        {\n          label: 'Play sound',\n          onClick: () => {\n            this.iN.player();\n          },\n        },\n        {\n          label: 'Stop playing sound',\n          onClick: () => {\n            this.iN.stopPlay();\n          },\n        },\n        {\n          label: 'Stop title animation',\n          onClick: () => {\n            this.iN.setTitle();\n          },\n        },\n        {\n          label: 'Play title animation',\n          onClick: () => {\n            this.iN.setTitle(true);\n          },\n        },\n        {\n          label: 'Title animation, update title',\n          onClick: () => {\n            this.iN.setTitle('Title animation, update title.');\n          },\n        },\n        {\n          label: 'Number of messages',\n          onClick: () => {\n            const num = Math.floor(Math.random() * 10) || 2;\n            this.iN.faviconClear().setFavicon(num + 1);\n          },\n        },\n        {\n          label: 'Clear the messages number',\n          onClick: () => {\n            this.iN.faviconClear();\n          },\n        },\n        {\n          label: 'Open website.',\n          onClick: () => {\n            this.iN.notify({\n              title: 'Welcome to iNotify!',\n              body: 'You are opening the iNotify website!',\n              openurl: 'https://github.com/jaywcjlove/iNotify',\n              onclick: () => {\n                console.log('on click');\n                this.iN.close();\n              },\n              onshow: () => {\n                console.log('on show');\n              },\n            });\n          },\n        },\n        {\n          label: 'Favicon Font color',\n          onClick: () => {\n            this.iN.setFaviconColor('#0043ff');\n          },\n        },\n        {\n          label: 'Favicon Background color',\n          onClick: () => {\n            this.iN.setFaviconColor('#f5ff00').setFaviconBackgroundColor('red');\n          },\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    this.iN = new Notify({\n      // effect: 'flash',\n      effect: 'scroll',\n      interval: 300,\n      message: '有消息拉！',\n      audio: {\n        file: [mp4, mp3, wav],\n      },\n      notification: {\n        title: '通知！',\n        body: '您来了一条新消息',\n      },\n      onclick: () => {\n        console.log('on click');\n        this.iN.close();\n      },\n    });\n    this.iN.setTitle('New news, welcome to iNotify!')\n      .notify({\n        title: 'Welcome to iNotify!',\n        body: 'You are opening the iNotify website!',\n        openurl: 'https://github.com/jaywcjlove/iNotify',\n      })\n      .player();\n  }\n\n  render() {\n    const { button } = this.state;\n    let DocumentStrSource = DocumentStr;\n    if (DocumentStrSource) DocumentStrSource = DocumentStr.replace(/([\\s\\S]*)<!--dividing-->/, '');\n    return (\n      <div className={styles.wapper}>\n        <dark-mode permanent light=\"Dart\" dark=\"Light\" style={{ position: 'fixed', top: 8, left: 10 }} />\n        <GitHubCorners fixed target=\"__blank\" zIndex={10} href=\"https://github.com/jaywcjlove/iNotify\" />\n        <div className={styles.panel}>\n          <h1>\n            iNotify\n          </h1>\n          <img src={notifyImg} alt=\"iNotify\" />\n        </div>\n        <div className={styles.button}>\n          {button.map((item, key) => {\n            return (\n              <Button key={key} onClick={item.onClick}>\n                {item.label}\n              </Button>\n            );\n          })}\n        </div>\n        <MarkdownPreview style={{ maxWidth: 1024, margin: '0 auto' }} source={DocumentStrSource} />\n        <GithubShields\n          source={[\n            {\n              href: 'https://github.com/jaywcjlove/iNotify/stargazers',\n              img: 'https://img.shields.io/github/stars/jaywcjlove/iNotify.svg?style=social',\n            },\n            {\n              href: 'https://github.com/jaywcjlove/iNotify/network',\n              img: 'https://img.shields.io/github/forks/jaywcjlove/iNotify.svg?style=social',\n            },\n            {\n              href: 'https://github.com/jaywcjlove/iNotify/watchers',\n              img: 'https://img.shields.io/github/watchers/jaywcjlove/iNotify.svg?style=social&label=Watch',\n            },\n            {\n              href: 'https://github.com/jaywcjlove/followers',\n              img: 'https://img.shields.io/github/followers/jaywcjlove.svg?style=social',\n            },\n          ]}\n        />\n        <Footer name=\"Kenny Wong\" href=\"http://jaywcjlove.github.io\" year=\"2015-present\" />\n      </div>\n    );\n  }\n}\n","import * as ReactDOMClient from 'react-dom/client';\nimport React from 'react';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = ReactDOMClient.createRoot(container);\nroot.render(<App />);\n","/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  if (typeof document === \"undefined\") return;\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","/**\n * @package @wcj/dark-mode\n * Web Component that toggles dark mode 🌒\n * Github: https://github.com/jaywcjlove/dark-mode.git\n * Website: https://jaywcjlove.github.io/dark-mode\n * \n * Licensed under the MIT license.\n * @license Copyright © 2022. Licensed under the MIT License\n * @author kenny wong <wowohoo@qq.com>\n */\nconst t=document;const e=\"_dark_mode_theme_\";const s=\"permanent\";const o=\"colorschemechange\";const i=\"permanentcolorscheme\";const h=\"light\";const r=\"dark\";const n=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){const t=this.getAttribute(e);return t===null?\"\":t},set(t){this.setAttribute(e,t)}})};const c=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){return this.hasAttribute(e)},set(t){if(t){this.setAttribute(e,\"\")}else{this.removeAttribute(e)}}})};class a extends HTMLElement{static get observedAttributes(){return[\"mode\",h,r,s]}LOCAL_NANE=e;constructor(){super();this.t()}connectedCallback(){n(this,\"mode\");n(this,r);n(this,h);c(this,s);const a=localStorage.getItem(e);if(a&&[h,r].includes(a)){this.mode=a;this.permanent=true}if(this.permanent&&!a){localStorage.setItem(e,this.mode)}const l=[h,r].includes(a);if(this.permanent&&a){this.o()}else{if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: dark)\").matches){this.mode=r;this.o()}if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: light)\").matches){this.mode=h;this.o()}}if(!this.permanent&&!l){window.matchMedia(\"(prefers-color-scheme: light)\").onchange=t=>{this.mode=t.matches?h:r;this.o()};window.matchMedia(\"(prefers-color-scheme: dark)\").onchange=t=>{this.mode=t.matches?r:h;this.o()}}const d=new MutationObserver(((s,h)=>{this.mode=t.documentElement.dataset.colorMode;if(this.permanent&&l){localStorage.setItem(e,this.mode);this.i(i,{permanent:this.permanent})}this.h();this.i(o,{colorScheme:this.mode})}));d.observe(t.documentElement,{attributes:true});this.i(o,{colorScheme:this.mode});this.h()}attributeChangedCallback(t,s,o){if(t===\"mode\"&&s!==o&&[h,r].includes(o)){const t=localStorage.getItem(e);if(this.mode===t){this.mode=o;this.h();this.o()}else if(this.mode&&this.mode!==t){this.h();this.o()}}else if((t===h||t===r)&&s!==o){this.h()}if(t===\"permanent\"&&typeof this.permanent===\"boolean\"){this.permanent?localStorage.setItem(e,this.mode):localStorage.removeItem(e)}}o(){t.documentElement.setAttribute(\"data-color-mode\",this.mode)}h(){this.icon.textContent=this.mode===h?\"🌒\":\"🌞\";this.text.textContent=this.mode===h?this.getAttribute(r):this.getAttribute(h);if(!this.text.textContent&&this.text.parentElement&&this.text){this.text.parentElement.removeChild(this.text)}}t(){var s=this.attachShadow({mode:\"open\"});this.label=t.createElement(\"span\");this.label.setAttribute(\"class\",\"wrapper\");this.label.onclick=()=>{this.mode=this.mode===h?r:h;if(this.permanent){localStorage.setItem(e,this.mode)}this.o();this.h()};s.appendChild(this.label);this.icon=t.createElement(\"span\");this.label.appendChild(this.icon);this.text=t.createElement(\"span\");this.label.appendChild(this.text);const o=`\\n[data-color-mode*='dark'], [data-color-mode*='dark'] body {\\n  color-scheme: dark;\\n  --color-theme-bg: #0d1117;\\n  --color-theme-text: #c9d1d9;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}\\n\\n[data-color-mode*='light'], [data-color-mode*='light'] body {\\n  color-scheme: light;\\n  --color-theme-bg: #fff;\\n  --color-theme-text: #24292f;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}`;const i=\"_dark_mode_style_\";const n=t.getElementById(i);if(!n){var c=t.createElement(\"style\");c.id=i;c.textContent=o;t.head.appendChild(c)}var a=t.createElement(\"style\");a.textContent=`\\n    .wrapper { cursor: pointer; user-select: none; position: relative; }\\n    .wrapper > span + span { margin-left: .4rem; }\\n    `;s.appendChild(a)}i(t,e){this.dispatchEvent(new CustomEvent(t,{bubbles:true,composed:true,detail:e}))}}customElements.define(\"dark-mode\",a);","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_wcjiang_notify\"] = self[\"webpackChunk_wcjiang_notify\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [269,264], () => (__webpack_require__(7907)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","re","whitespace","thing","type","empty","value","replace","hastToReact","classId","dataType","itemId","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","typeOf","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlnsXLink","pointEnd","point","pointStart","node","position","line","column","offset","undefined","stringifyPosition","index","pos","start","end","VFileMessage","Error","constructor","causeOrReason","optionsOrParentOrPlace","origin","super","reason","options","legacyCause","place","ancestors","cause","message","ruleId","slice","parent","fatal","file","name","stack","actual","expected","note","url","own","emptyMap","Map","cap","dashSomething","tableElements","Set","tableCellElement","toJsxRuntime","tree","Fragment","TypeError","filePath","create","development","jsxDEV","props","isStaticChildren","Array","isArray","children","columnNumber","fileName","lineNumber","developmentCreate","jsx","jsxs","_","fn","productionCreate","state","components","elementAttributeNameCase","ignoreInvalidStyle","passKeys","passNode","schema","space","svg","html","stylePropertyNameCase","tableCellAlignToStyle","result","one","parentSchema","tagName","toLowerCase","push","countsByTagName","child","count","get","set","createChildren","prop","properties","alignValue","createProperty","has","style","createProperties","pop","filter","info","find","Number","isNaN","commaSeparated","commas","spaces","property","styleObject","styleToObject","replacer","error","toCamel","parseStyle","String","domCasing","cssCasing","from","transformStyleToCssCasing","transformStylesToCssCasing","attribute","to","toDash","$1","toUpperCase","$0","urlAttributes","action","cite","data","formAction","href","icon","manifest","ping","poster","src","emptyOptions","toString","settings","includeImageAlt","includeHtml","Boolean","alt","all","values","join","splice","list","remove","items","parameters","chunkStart","unshift","subtokenize","events","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","code","constructs","existing","before","add","unicodePunctuationInternal","regexCheck","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","POSITIVE_INFINITY","size","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","contentInitial","lineStart","document","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","disable","null","includes","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","shift","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","characterReference","numeric","decodeNamedCharacterReference","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","label","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","lang","flowCodeInside","title","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","checked","compiler","postprocess","defaultConstructs","parse","atCarriageReturn","match","endPosition","TextDecoder","lastIndex","exec","Math","ceil","preprocess","d","combined","remarkParse","doc","env","globalThis","deserialize","serialized","deserializer","$","as","out","unpair","arr","object","Date","flags","RegExp","BigInt","EMPTY","asString","shouldSkip","_ref","TYPE","serialize","json","lossy","serializer","strict","pair","valueOf","toJSON","entries","toISOString","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","checks","_len","_key","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","defineProperty","visit","subresult","grandparents","toResult","nodeAsParent","concat","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","lines","trimLine","handlers","blockquote","wrap","patch","applyData","break","className","delete","footnoteReference","clobberPrefix","id","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","ariaDescribedBy","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","results","loose","listLoose","disabled","root","table","rows","firstRow","tableContent","body","tableCell","tableRow","align","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","remarkRehype","destination","async","hastTree","run","bail","isPlainObject","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","middlewareIndex","callback","_len2","output","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","done","Promise","then","_len4","_key4","middelware","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","func","setPrototypeOf","names","getOwnPropertyNames","p","descriptor","getOwnPropertyDescriptor","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","copy","attacher","extend","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","rest","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","hasOwn","mdastTree","colon","questionMark","numberSign","ccount","character","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","input","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","split","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","blank","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","unsafe","pattern","checkQuote","quote","checkEmphasis","expression","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","substring","longestStreak","encode","rank","min","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","sizes","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImpl","sort","a","b","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","buttonTypes","createH","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addProperty","addChild","spaceSeparated","commaOrSpaceSeparated","parsePrimitive","finalResult","number","boolean","overloadedBoolean","h","s","webNamespaces","mathml","xlink","xml","xmlns","nodeName","quirksMode","mode","childNodes","location","loc","indices","toPoint","toOffset","namespaceURI","attrs","sourceCodeLocation","startTag","endTag","element","verbose","opening","closing","createLocation","startLine","startCol","startOffset","endLine","endCol","endOffset","zwitch","invalid","unknown","currentSchema","parentNode","doctype","publicId","systemId","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","TokenType","getTokenAttr","attrName","Uint16Array","c","decodeMap","_a","codePoint","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","treeIndex","excess","decodeMode","Strict","startEntity","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","substr","startIdx","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","activeFormattingElements","fragmentContextID","_setContextModes","openElements","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","getEscaper","lastIdx","knownMdxNames","parseOptions","documentMode","handleRaw","stitches","resetTokenizer","fromParse5","stitch","toParse5","tag","Token","createParse5Location","clone","cloneWithoutChildren","fakeRoot","setPoint","node_","extra","rehypeRaw","getParentElement","dom","dataset","classList","parentElement","useCopied","container","copyTextToClipboard","setTimeout","useEffect","_container$current","_container$current2","removeEventListener","addEventListener","_container$current3","_excluded","React","ref","prefixCls","disableCopy","onScroll","onMouseOver","pluginsFilter","wrapperElement","warpperElement","other","mdp","useImperativeHandle","cls","customProps","wrapperProps","_jsx","ReactMarkdown","o","e","r","registered","defaultLanguage","l","f","metastring","m","t","u","n","g","v","highlight","ignoreMissing","reduce","y","trim","w","groups","N","x","cascadeRaw","cascade","preorder","childIndex","showLineNumbers","O","emptyMulticharIndex","emptyRegularIndex","extendIndex","currentIndex","isLast","charAt","charIndex","createMulticharIndex","_i","items_1","createRegularIndex","items_2","emptyPseudoSignatures","defaultPseudoSignature","optional","calculatePseudoSignature","types","setResultType","types_1","ofSelector","calculatePseudoSignatures","definitions","pseudoClassesToArgumentTypes","obj","category","_c","inverseCategories","pseudoClass","argumentTypes","__assign","emptyXmlOptions","defaultXmlOptions","wildcard","withPositive","positive","merge","mergeSection","mergeSchema","replaceValueIfSpecified","concatArray","mergeDefinitions","baseValue","migration","extendSyntaxDefinition","withNoNegative","baseSyntax","ids","classNames","combinators","attributes","operators","caseSensitivityModifiers","unknownCaseSensitivityModifiers","pseudoClasses","pseudoElements","notation","NoArgument","css1SyntaxDefinition","css2SyntaxDefinition","selectors3SyntaxDefinition","Formula","Selector","selectors4SyntaxDefinition","FormulaOfSelector","cssSyntaxDefinitions","css1","css2","css3","latest","progressive","isIdentStart","isIdent","isHex","stringEscapeChars","whitespaceChars","quoteChars","digitsChars","errorPrefix","astMethods","generatorName","checkerName","entity","cssSelectorParse","syntax","substitutes","syntaxDefinition","param","tagNameEnabled","tagNameWildcardEnabled","idEnabled","classNamesEnabled","namespaceEnabled","namespaceWildcardEnabled","substitutesEnabled","combinatorsIndex","_d","attributesEnabled","attributesOperatorsIndex","attributesCaseSensitivityModifiers","attributesAcceptUnknownCaseSensitivityModifiers","attributesCaseSensitivityModifiersEnabled","_e","pseudoClassesEnabled","pseudoClassesDefinitions","pseudoClassesAcceptUnknown","_f","pseudoElementsEnabled","pseudoElementsSingleColonNotationEnabled","pseudoElementsDoubleColonNotationEnabled","pseudoElementsDefinitions","pseudoElementsAcceptUnknown","chr","comparison","isTagStart","rewind","newPos","readAndNext","errorMessage","assert","condition","assertNonEof","isEof","pass","matchMulticharIndex","matchMulticharIndexPos","subPos","subMatch","parseHex","parseString","esc","parseIdentifier","parsePseudoClassString","skipWhitespace","relative","rules","parseRule","parseAttribute","name_1","name_2","savedPos","name_3","operator","name_4","caseSensitivityModifier","parseNumber","isNumberStart","parsePseudoArgument","pseudoName","signature","argument","name_5","ident","firstNumber","firstNumberMultiplier","sign","parseFormula","parseTagName","name_6","parseTagNameWithNamespace","combinator","idName","isDoubleColon","pseudoElement","nestedRule","createParser","rtlRange","ltrRange","rtl","ltr","dirBidi","direction","dirProperty","dir","query","normalizeValue","emptyClassNames","tags","ranges","cast","matches","rightIndex","leftIndex","extendedFilter","hasProperty","nthCheck","formula","parsed","boolbase","absA","abs","bMod","readSign","readNumber","fauxEsmNthCheck","pseudo","someChildren","_2","_3","enabled","assertDeep","elementIndex","typeIndex","childState","found","rootQuery","scopeElements","walk","language","elementCount","typeCount","not","getCachedNthCheck","required","readWrite","scope","query_","_cachedFn","editableOrEditingHost","nest","combine","currentRules","nestResult","adjacentSibling","descendant","directChild","generalSibling","currentDirection","dirInferred","xmlLang","contentEditable","enterState","rootRules","selectorIndex","applySelectors","fromParent","fromSibling","total","getCodeString","forEach","rewrite","selected","selectAll","nextChild","codeBlockParames","getCommentObject","getURLParameters","keyName","propertiesHandle","defaultAttrs","rehyp","firstChild","prevChild","reservedMeta","retrieveMeta","headingRank","slugs","occurrences","reset","slug","maintainCase","originalSlug","convertElement","tagNameFactory","looksLikeAnElement","contentDefaults","toChildren","toNode","toProperties","openDelimiter","closeDelimiter","octiconLink","viewBox","version","width","height","ariaHidden","fillRule","defaultRehypePlugins","headingOroperties","headingProperties","behavior","method","grouping","tabIndex","rehypeIgnore","_props$disableCopy","rehypePrism","rehypeRewrite","class","fill","rehypeAttrs","MarkdownPreview","GITHUB_CORNERS_TEMPLATE","innerHTML","GithubCorners","HTMLElement","observedAttributes","shadow","attachShadow","ownerDocument","importNode","update","setAttr","querySelector","toLocaleLowerCase","lastElementChild","setAttribute","firstElementChild","getAttributeNames","getAttribute","attributeChangedCallback","oldValue","newValue","customElements","define","githubCorners","fixed","bottom","zIndex","bgColor","color","otherProps","styl","transform","top","GithubShields","styles","rel","img","_jsxs","Footer","year","window","Notification","permission","requestPermission","console","log","iconURL","repeatableEffects","defaultNotification","openurl","createAudio","audioElm","autoplay","muted","changeFavicon","num","canvas","getElementsByTagName","linkTag","ctx","getContext","fillStyle","backgroundColor","fillRect","textAlign","font","textColor","fillText","toDataURL","Notify","init","interval","effect","onclick","disableFavicon","updateFavicon","audio","favicon","setting","ic","querySelectorAll","getFavicon","cloneFavicon","cloneNode","notification","setURL","render","scrollTitle","setTitle","addTimer","clearTimer","loopPlay","loop","player","stopPlay","resp","play","catch","notify","nt","news","olds","jsonArguments","option","onshow","onclose","onerror","Notifiy","isPermission","setInterval","setFavicon","faviconClear","oldicon","getElementById","setFaviconColor","faviconRemove","setFaviconBackgroundColor","timer","newicon","ficon","clearInterval","App","Component","button","onClick","iN","floor","random","componentDidMount","mp4","mp3","wav","DocumentStrSource","DocumentStr","wapper","permanent","light","dark","GitHubCorners","panel","notifyImg","Button","maxWidth","margin","ReactDOMClient","cb","el","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","removeChild","removeAllRanges","addRange","enumerable","_defineProperty","connectedCallback","hasAttribute","removeAttribute","localStorage","getItem","setItem","matchMedia","onchange","MutationObserver","documentElement","colorMode","colorScheme","observe","removeItem","textContent","dispatchEvent","CustomEvent","bubbles","composed","detail","module","exports","trueFunc","falseFunc","classes","arg","argType","inner","default","toStr","gOPD","hasOwnConstructor","hasIsPrototypeOf","setProperty","configurable","writable","getProperty","copyIsArray","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","errorsList","msg","filename","silent","comments","val","decl","decls","declarations","parsePart","res","lhs","rhs","incr","k","C","sortIndex","performance","unstable_now","q","z","D","E","clearTimeout","F","setImmediate","G","startTime","expirationTime","H","J","K","L","M","priorityLevel","navigator","scheduling","isInputPending","Q","R","MessageChannel","T","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","require","StyleToObject","hasIterator","toPropertyKey","__esModule","_typeof","hint","prim","toPrimitive","tokens","padRight","padLeft","core","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","additional","queue","following","characterReferenceCharacters","characters","terminated","namedReference","diff","nonTerminated","warning","referenceCode","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","DefinedInfo","mustUseProperty","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cols","colSpan","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemProp","itemRef","itemScope","itemType","loading","low","maxLength","minLength","multiple","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","preload","readOnly","referrerPolicy","reversed","rowSpan","sandbox","scoped","seamless","shadowRootDelegatesFocus","shadowRootMode","shape","slot","span","spellCheck","srcDoc","srcLang","srcSet","translate","typeMustMatch","useMap","aLink","archive","axis","background","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dominantBaseline","enableBackground","fillOpacity","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","valid","dash","Type","Info","camelcase","dashes","kebab","mark","powers","increment","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","getter","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}