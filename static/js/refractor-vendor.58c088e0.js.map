{"version":3,"file":"static/js/refractor-vendor.58c088e0.js","mappings":"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AAyB,CACvBF,QAAS,uBACTC,YAAY,EACZC,MAAO,YAGT,gCAAiC,CAC/B,CAEEF,QAAS,wBACTC,YAAY,EACZC,MAAO,YAET,CAEEF,QAAS,iBACTC,YAAY,EACZC,MAAO,aAIX,sBAAuB,CACrB,CAEEF,QAAS,iBACTC,YAAY,EACZC,MAAO,YAET,CAEEF,QAAS,iBACTC,YAAY,EACZC,MAAO,aAGX,cAAe,CACbF,QAAS,0BACTC,YAAY,GAiBde,OAAQ,CACNhB,QAAS,qBACTQ,QAAQ,EACRL,OAAQ4d,IAGRlO,EAAS,SAAUqO,GACrB,OAAQA,EAAM,IAAI7b,QAAQ,4BAA6B,OACzD,EACI8b,EAAmB,SAAUC,GAC/B,OAAO,IAAI9d,OAAO,aAAe8d,EAAIC,IAAIxO,GAAQb,KAAK,KAAO,aAC/D,EACIsP,EAAW,CACb,iBAAkB,CAChB,KACA,QACA,QACA,OACA,UACA,MACA,WACA,kBACA,MACA,OACA,YACA,aACA,OACA,WACA,OACA,OACA,QACA,WACA,OACA,QACA,OACA,MACA,IACA,IACA,QACA,QACA,QACA,OACA,kBACA,MACA,SACA,MACA,QACA,OACA,QACA,SACA,OACA,UACA,UACA,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,WAEF,uBAAwB,CAEtB,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WAEA,IACA,KACA,MAEF,oBAAqB,CACnB,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,eAEF,eAAgB,CACd,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,cAKJ7X,OAAOC,KAAK4X,GAAU3X,SAAQ,SAAUsG,GACtC4Q,EAAO5Q,GAAGjN,QAAUme,EAAiBG,EAASrR,GAChD,IAiOA4Q,EAAOI,YAAYje,QAAUme,EAhOX,CAEhB,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YAEA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YAEA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBAEA,kBACA,cACA,gBACA,gBACA,kBACA,cAEA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,oBAKFjf,EAAMG,UAAUwe,OAAS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ACA,aACA,QACA,SAEA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OAEA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,mBAEA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OACA,SACA,SACA,QACA,aACA,cACA,cACA,eACA,YACA,UACA,eACA,YACA,YACA,OACA,UACA,OACA,UACA,UACA,aACA,YACA,SACA,UACA,cACA,YACA,WACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,WACA,YACA,gBACA,aACA,YACA,QACA,cACA,YACA,cAEA,WACA,WACA,QACA,OACA,aACA,OACA,WACA,SACA,aACA,eACA,YAmBEC,EAAkB,OAHtBD,EAAYA,EAAUvR,KAAI,SAAU3d,GAClC,OAAOA,EAAS2B,QAAQ,IAAK,MAC/B,KACwC2M,KAAK,KAAO,OACpD9P,EAAMG,UAAUswB,QAAUzwB,EAAMG,UAAUC,OAAO,aAAc,CAA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","sources":["../node_modules/refractor/lang/arduino.js","../node_modules/refractor/lang/bash.js","../node_modules/refractor/lang/basic.js","../node_modules/refractor/lang/c.js","../node_modules/refractor/lang/clike.js","../node_modules/refractor/lang/cpp.js","../node_modules/refractor/lang/csharp.js","../node_modules/refractor/lang/css.js","../node_modules/refractor/lang/diff.js","../node_modules/refractor/lang/go.js","../node_modules/refractor/lang/ini.js","../node_modules/refractor/lang/java.js","../node_modules/refractor/lang/javascript.js","../node_modules/refractor/lang/json.js","../node_modules/refractor/lang/kotlin.js","../node_modules/refractor/lang/less.js","../node_modules/refractor/lang/lua.js","../node_modules/refractor/lang/makefile.js","../node_modules/refractor/lang/markdown.js","../node_modules/refractor/lang/markup-templating.js","../node_modules/refractor/lang/markup.js","../node_modules/refractor/lang/objectivec.js","../node_modules/refractor/lang/perl.js","../node_modules/refractor/lang/php.js","../node_modules/refractor/lang/python.js","../node_modules/refractor/lang/r.js","../node_modules/refractor/lang/regex.js","../node_modules/refractor/lang/ruby.js","../node_modules/refractor/lang/rust.js","../node_modules/refractor/lang/sass.js","../node_modules/refractor/lang/scss.js","../node_modules/refractor/lang/sql.js","../node_modules/refractor/lang/swift.js","../node_modules/refractor/lang/typescript.js","../node_modules/refractor/lang/vbnet.js","../node_modules/refractor/lang/yaml.js","../node_modules/refractor/lang/abap.js","../node_modules/refractor/lang/abnf.js","../node_modules/refractor/lang/actionscript.js","../node_modules/refractor/lang/ada.js","../node_modules/refractor/lang/agda.js","../node_modules/refractor/lang/al.js","../node_modules/refractor/lang/antlr4.js","../node_modules/refractor/lang/apacheconf.js","../node_modules/refractor/lang/apex.js","../node_modules/refractor/lang/apl.js","../node_modules/refractor/lang/applescript.js","../node_modules/refractor/lang/aql.js","../node_modules/refractor/lang/arff.js","../node_modules/refractor/lang/armasm.js","../node_modules/refractor/lang/arturo.js","../node_modules/refractor/lang/asciidoc.js","../node_modules/refractor/lang/aspnet.js","../node_modules/refractor/lang/asm6502.js","../node_modules/refractor/lang/asmatmel.js","../node_modules/refractor/lang/autohotkey.js","../node_modules/refractor/lang/autoit.js","../node_modules/refractor/lang/avisynth.js","../node_modules/refractor/lang/avro-idl.js","../node_modules/refractor/lang/awk.js","../node_modules/refractor/lang/batch.js","../node_modules/refractor/lang/bbcode.js","../node_modules/refractor/lang/bbj.js","../node_modules/refractor/lang/bicep.js","../node_modules/refractor/lang/birb.js","../node_modules/refractor/lang/bison.js","../node_modules/refractor/lang/bnf.js","../node_modules/refractor/lang/bqn.js","../node_modules/refractor/lang/brainfuck.js","../node_modules/refractor/lang/brightscript.js","../node_modules/refractor/lang/bro.js","../node_modules/refractor/lang/bsl.js","../node_modules/refractor/lang/cfscript.js","../node_modules/refractor/lang/chaiscript.js","../node_modules/refractor/lang/cil.js","../node_modules/refractor/lang/cilkc.js","../node_modules/refractor/lang/cilkcpp.js","../node_modules/refractor/lang/clojure.js","../node_modules/refractor/lang/cmake.js","../node_modules/refractor/lang/cobol.js","../node_modules/refractor/lang/coffeescript.js","../node_modules/refractor/lang/concurnas.js","../node_modules/refractor/lang/csp.js","../node_modules/refractor/lang/cooklang.js","../node_modules/refractor/lang/coq.js","../node_modules/refractor/lang/crystal.js","../node_modules/refractor/lang/css-extras.js","../node_modules/refractor/lang/csv.js","../node_modules/refractor/lang/cue.js","../node_modules/refractor/lang/cypher.js","../node_modules/refractor/lang/d.js","../node_modules/refractor/lang/dart.js","../node_modules/refractor/lang/dataweave.js","../node_modules/refractor/lang/dax.js","../node_modules/refractor/lang/dhall.js","../node_modules/refractor/lang/django.js","../node_modules/refractor/lang/dns-zone-file.js","../node_modules/refractor/lang/docker.js","../node_modules/refractor/lang/dot.js","../node_modules/refractor/lang/ebnf.js","../node_modules/refractor/lang/editorconfig.js","../node_modules/refractor/lang/eiffel.js","../node_modules/refractor/lang/ejs.js","../node_modules/refractor/lang/elixir.js","../node_modules/refractor/lang/elm.js","../node_modules/refractor/lang/etlua.js","../node_modules/refractor/lang/erb.js","../node_modules/refractor/lang/erlang.js","../node_modules/refractor/lang/excel-formula.js","../node_modules/refractor/lang/fsharp.js","../node_modules/refractor/lang/factor.js","../node_modules/refractor/lang/false.js","../node_modules/refractor/lang/firestore-security-rules.js","../node_modules/refractor/lang/flow.js","../node_modules/refractor/lang/fortran.js","../node_modules/refractor/lang/ftl.js","../node_modules/refractor/lang/gml.js","../node_modules/refractor/lang/gap.js","../node_modules/refractor/lang/gcode.js","../node_modules/refractor/lang/gdscript.js","../node_modules/refractor/lang/gedcom.js","../node_modules/refractor/lang/gettext.js","../node_modules/refractor/lang/gherkin.js","../node_modules/refractor/lang/git.js","../node_modules/refractor/lang/glsl.js","../node_modules/refractor/lang/gn.js","../node_modules/refractor/lang/linker-script.js","../node_modules/refractor/lang/go-module.js","../node_modules/refractor/lang/gradle.js","../node_modules/refractor/lang/graphql.js","../node_modules/refractor/lang/groovy.js","../node_modules/refractor/lang/textile.js","../node_modules/refractor/lang/haml.js","../node_modules/refractor/lang/handlebars.js","../node_modules/refractor/lang/haskell.js","../node_modules/refractor/lang/haxe.js","../node_modules/refractor/lang/hcl.js","../node_modules/refractor/lang/hlsl.js","../node_modules/refractor/lang/hoon.js","../node_modules/refractor/lang/hpkp.js","../node_modules/refractor/lang/hsts.js","../node_modules/refractor/lang/uri.js","../node_modules/refractor/lang/http.js","../node_modules/refractor/lang/ichigojam.js","../node_modules/refractor/lang/icon.js","../node_modules/refractor/lang/icu-message-format.js","../node_modules/refractor/lang/idris.js","../node_modules/refractor/lang/ignore.js","../node_modules/refractor/lang/inform7.js","../node_modules/refractor/lang/io.js","../node_modules/refractor/lang/j.js","../node_modules/refractor/lang/javadoclike.js","../node_modules/refractor/lang/scala.js","../node_modules/refractor/lang/javadoc.js","../node_modules/refractor/lang/javastacktrace.js","../node_modules/refractor/lang/jexl.js","../node_modules/refractor/lang/jolie.js","../node_modules/refractor/lang/jq.js","../node_modules/refractor/lang/js-templates.js","../node_modules/refractor/lang/jsdoc.js","../node_modules/refractor/lang/n4js.js","../node_modules/refractor/lang/js-extras.js","../node_modules/refractor/lang/json5.js","../node_modules/refractor/lang/jsonp.js","../node_modules/refractor/lang/jsstacktrace.js","../node_modules/refractor/lang/julia.js","../node_modules/refractor/lang/keepalived.js","../node_modules/refractor/lang/keyman.js","../node_modules/refractor/lang/kumir.js","../node_modules/refractor/lang/kusto.js","../node_modules/refractor/lang/latex.js","../node_modules/refractor/lang/latte.js","../node_modules/refractor/lang/scheme.js","../node_modules/refractor/lang/lilypond.js","../node_modules/refractor/lang/liquid.js","../node_modules/refractor/lang/lisp.js","../node_modules/refractor/lang/livescript.js","../node_modules/refractor/lang/llvm.js","../node_modules/refractor/lang/log.js","../node_modules/refractor/lang/lolcode.js","../node_modules/refractor/lang/magma.js","../node_modules/refractor/lang/mata.js","../node_modules/refractor/lang/matlab.js","../node_modules/refractor/lang/maxscript.js","../node_modules/refractor/lang/mel.js","../node_modules/refractor/lang/mermaid.js","../node_modules/refractor/lang/metafont.js","../node_modules/refractor/lang/mizar.js","../node_modules/refractor/lang/mongodb.js","../node_modules/refractor/lang/monkey.js","../node_modules/refractor/lang/moonscript.js","../node_modules/refractor/lang/n1ql.js","../node_modules/refractor/lang/nand2tetris-hdl.js","../node_modules/refractor/lang/naniscript.js","../node_modules/refractor/lang/nasm.js","../node_modules/refractor/lang/neon.js","../node_modules/refractor/lang/nevod.js","../node_modules/refractor/lang/nginx.js","../node_modules/refractor/lang/nim.js","../node_modules/refractor/lang/nix.js","../node_modules/refractor/lang/nsis.js","../node_modules/refractor/lang/ocaml.js","../node_modules/refractor/lang/odin.js","../node_modules/refractor/lang/opencl.js","../node_modules/refractor/lang/openqasm.js","../node_modules/refractor/lang/oz.js","../node_modules/refractor/lang/parigp.js","../node_modules/refractor/lang/parser.js","../node_modules/refractor/lang/pascal.js","../node_modules/refractor/lang/pascaligo.js","../node_modules/refractor/lang/psl.js","../node_modules/refractor/lang/pcaxis.js","../node_modules/refractor/lang/peoplecode.js","../node_modules/refractor/lang/phpdoc.js","../node_modules/refractor/lang/php-extras.js","../node_modules/refractor/lang/plant-uml.js","../node_modules/refractor/lang/plsql.js","../node_modules/refractor/lang/powerquery.js","../node_modules/refractor/lang/powershell.js","../node_modules/refractor/lang/processing.js","../node_modules/refractor/lang/prolog.js","../node_modules/refractor/lang/promql.js","../node_modules/refractor/lang/properties.js","../node_modules/refractor/lang/protobuf.js","../node_modules/refractor/lang/stylus.js","../node_modules/refractor/lang/twig.js","../node_modules/refractor/lang/pug.js","../node_modules/refractor/lang/puppet.js","../node_modules/refractor/lang/pure.js","../node_modules/refractor/lang/purebasic.js","../node_modules/refractor/lang/purescript.js","../node_modules/refractor/lang/qsharp.js","../node_modules/refractor/lang/q.js","../node_modules/refractor/lang/qml.js","../node_modules/refractor/lang/qore.js","../node_modules/refractor/lang/racket.js","../node_modules/refractor/lang/cshtml.js","../node_modules/refractor/lang/jsx.js","../node_modules/refractor/lang/tsx.js","../node_modules/refractor/lang/reason.js","../node_modules/refractor/lang/rego.js","../node_modules/refractor/lang/renpy.js","../node_modules/refractor/lang/rescript.js","../node_modules/refractor/lang/rest.js","../node_modules/refractor/lang/rip.js","../node_modules/refractor/lang/roboconf.js","../node_modules/refractor/lang/robotframework.js","../node_modules/refractor/lang/sas.js","../node_modules/refractor/lang/shell-session.js","../node_modules/refractor/lang/smali.js","../node_modules/refractor/lang/smalltalk.js","../node_modules/refractor/lang/smarty.js","../node_modules/refractor/lang/sml.js","../node_modules/refractor/lang/solidity.js","../node_modules/refractor/lang/solution-file.js","../node_modules/refractor/lang/soy.js","../node_modules/refractor/lang/turtle.js","../node_modules/refractor/lang/sparql.js","../node_modules/refractor/lang/splunk-spl.js","../node_modules/refractor/lang/sqf.js","../node_modules/refractor/lang/squirrel.js","../node_modules/refractor/lang/stan.js","../node_modules/refractor/lang/stata.js","../node_modules/refractor/lang/iecst.js","../node_modules/refractor/lang/supercollider.js","../node_modules/refractor/lang/systemd.js","../node_modules/refractor/lang/t4-templating.js","../node_modules/refractor/lang/t4-cs.js","../node_modules/refractor/lang/t4-vb.js","../node_modules/refractor/lang/tap.js","../node_modules/refractor/lang/tcl.js","../node_modules/refractor/lang/tt2.js","../node_modules/refractor/lang/toml.js","../node_modules/refractor/lang/tremor.js","../node_modules/refractor/lang/typoscript.js","../node_modules/refractor/lang/unrealscript.js","../node_modules/refractor/lang/uorazor.js","../node_modules/refractor/lang/v.js","../node_modules/refractor/lang/vala.js","../node_modules/refractor/lang/velocity.js","../node_modules/refractor/lang/verilog.js","../node_modules/refractor/lang/vhdl.js","../node_modules/refractor/lang/vim.js","../node_modules/refractor/lang/visual-basic.js","../node_modules/refractor/lang/warpscript.js","../node_modules/refractor/lang/wasm.js","../node_modules/refractor/lang/web-idl.js","../node_modules/refractor/lang/wgsl.js","../node_modules/refractor/lang/wiki.js","../node_modules/refractor/lang/wolfram.js","../node_modules/refractor/lang/wren.js","../node_modules/refractor/lang/xeora.js","../node_modules/refractor/lang/xml-doc.js","../node_modules/refractor/lang/xojo.js","../node_modules/refractor/lang/xquery.js","../node_modules/refractor/lang/yang.js","../node_modules/refractor/lang/zig.js","../node_modules/refractor/lib/all.js","../node_modules/refractor/lib/common.js","../node_modules/refractor/lib/prism-core.js","../node_modules/refractor/lib/core.js"],"sourcesContent":["// @ts-nocheck\nimport refractorCpp from './cpp.js'\narduino.displayName = 'arduino'\narduino.aliases = ['ino']\n\n/** @type {import('../core.js').Syntax} */\nexport default function arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword:\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n    constant:\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n    builtin:\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n  })\n  Prism.languages.ino = Prism.languages.arduino\n}\n","// @ts-nocheck\nbash.displayName = 'bash'\nbash.aliases = ['sh', 'shell']\n\n/** @type {import('../core.js').Syntax} */\nexport default function bash(Prism) {\n  ;(function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars =\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n    }\n\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [\n        // [0]: Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          greedy: true,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number:\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator:\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        },\n        // [1]: Command Substitution\n        {\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        },\n        // [2]: Brace expansion\n        {\n          pattern: /\\$\\{[^}]+\\}/,\n          greedy: true,\n          inside: {\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n            punctuation: /[\\[\\]]/,\n            environment: {\n              pattern: RegExp('(\\\\{)' + envVars),\n              lookbehind: true,\n              alias: 'constant'\n            }\n          }\n        },\n        /\\$(?:\\w+|[#?*!@$])/\n      ],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity:\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [\n        // a) function foo {\n        // b) foo() {\n        // c) function foo() {\n        // but not “foo {”\n        {\n          // a) and c)\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n          lookbehind: true,\n          alias: 'function'\n        },\n        {\n          // b)\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n          alias: 'function'\n        }\n      ],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight parameter names as variables\n      parameter: {\n        pattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        // Here-document with quotes around the tag\n        // → No expansion (so no “inside”).\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            bash: commandAfterHeredoc\n          }\n        },\n        // “Normal” string\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n          pattern:\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n          pattern: /(^|[^$\\\\])'[^']*'/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            entity: insideString.entity\n          }\n        }\n      ],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern:\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    }\n    commandAfterHeredoc.inside = Prism.languages.bash\n\n    /* Patterns in command substitution. */\n    var toBeCopied = [\n      'comment',\n      'function-name',\n      'for-or-select',\n      'assign-left',\n      'parameter',\n      'string',\n      'environment',\n      'function',\n      'keyword',\n      'builtin',\n      'boolean',\n      'file-descriptor',\n      'operator',\n      'punctuation',\n      'number'\n    ]\n    var inside = insideString.variable[1].inside\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\n    }\n    Prism.languages.sh = Prism.languages.bash\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","// @ts-nocheck\nbasic.displayName = 'basic'\nbasic.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nc.displayName = 'c'\nc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function c(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    string: {\n      // https://en.cppreference.com/w/c/language/string_literal\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    char: {\n      // https://en.cppreference.com/w/c/language/character_constant\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        char: Prism.languages.c['char'],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('c', 'function', {\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","// @ts-nocheck\nclike.displayName = 'clike'\nclike.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\ncpp.displayName = 'cpp'\ncpp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        },\n        // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n        // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n        // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:false|true)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:import|module)\\s+)/.source +\n            '(?:' +\n            // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' +\n            // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['cs', 'dotnet']\n\n/** @type {import('../core.js').Syntax} */\nexport default function csharp(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    }\n\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    }\n\n    // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    )\n\n    // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    }\n\n    // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    })\n\n    // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n\n    // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    })\n\n    // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source\n    // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ])\n    // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ],\n      char: {\n        pattern: RegExp(character),\n        greedy: true\n      }\n    })\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n  })(Prism)\n}\n","// @ts-nocheck\ncss.displayName = 'css'\ncss.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: RegExp(\n          '@[\\\\w-](?:' +\n            /[^;{\\s\"']|\\s+(?!\\s)/.source +\n            '|' +\n            string.source +\n            ')*?' +\n            /(?:;|(?=\\s*\\{))/.source\n        ),\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          }\n          // See rest below\n        }\n      },\n\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ndiff.displayName = 'diff'\ndiff.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n        // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m,\n        // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ]\n\n      // deleted, inserted, unchanged, diff\n    }\n\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    }\n\n    // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    })\n\n    // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngo.displayName = 'go'\ngo.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function go(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n      // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","// @ts-nocheck\nini.displayName = 'ini'\nini.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njava.displayName = 'java'\njava.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function java(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/\n\n    // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source\n\n    // based on the java naming conventions\n    var className = {\n      pattern: RegExp(\n        /(^|[^\\w.])/.source +\n          classNamePrefix +\n          /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source\n      ),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables, parameters, and constructor references\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            /(^|[^\\w.])/.source +\n              classNamePrefix +\n              /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/\n                .source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        },\n        {\n          // class names based on keyword\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/\n              .source +\n              classNamePrefix +\n              /[A-Z]\\w*\\b/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      },\n      constant: /\\b[A-Z][A-Z_\\d]+\\b/\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      import: [\n        {\n          pattern: RegExp(\n            /(\\bimport\\s+)/.source +\n              classNamePrefix +\n              /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source\n          ),\n          lookbehind: true,\n          inside: {\n            namespace: className.inside.namespace,\n            punctuation: /\\./,\n            operator: /\\*/,\n            'class-name': /\\w+/\n          }\n        },\n        {\n          pattern: RegExp(\n            /(\\bimport\\s+static\\s+)/.source +\n              classNamePrefix +\n              /(?:\\w+|\\*)(?=\\s*;)/.source\n          ),\n          lookbehind: true,\n          alias: 'static',\n          inside: {\n            namespace: className.inside.namespace,\n            static: /\\b\\w+$/,\n            punctuation: /\\./,\n            operator: /\\*/,\n            'class-name': /\\w+/\n          }\n        }\n      ],\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\n\n/** @type {import('../core.js').Syntax} */\nexport default function javascript(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' +\n          // constant\n          (/NaN|Infinity/.source +\n            '|' +\n            // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' +\n            // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' +\n            // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' +\n            // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' +\n            // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: RegExp(\n        // lookbehind\n        // eslint-disable-next-line regexp/no-dupe-characters-character-class\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n          // Regex pattern:\n          // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n          // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n          // with the only syntax, so we have to define 2 different regex patterns.\n          /\\//.source +\n          '(?:' +\n          /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/\n            .source +\n          '|' +\n          // `v` flag syntax. This supports 3 levels of nested character classes.\n          /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/\n            .source +\n          ')' +\n          // lookahead\n          /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/\n            .source\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript')\n\n    // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","// @ts-nocheck\njson.displayName = 'json'\njson.aliases = ['webmanifest']\n\n/** @type {import('../core.js').Syntax} */\nexport default function json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\n\n/** @type {import('../core.js').Syntax} */\nexport default function kotlin(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nless.displayName = 'less'\nless.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function less(Prism) {\n  Prism.register(refractorCss)\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      },\n      // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","// @ts-nocheck\nlua.displayName = 'lua'\nlua.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","// @ts-nocheck\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\n\n/** @type {import('../core.js').Syntax} */\nexport default function markdown(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'front-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp')\n            // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang\n\n            // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(env.content.value, grammar, codeLang)\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    }\n\n    // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '')\n\n      // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          }\n\n          // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nmarkupTemplating.displayName = 'markup-templating'\nmarkupTemplating.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function markupTemplating(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder\n\n            // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            }\n\n            // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          })\n\n          // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          }\n\n          // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nmarkup.displayName = 'markup'\nmarkup.aliases = ['atom', 'html', 'mathml', 'rss', 'ssml', 'svg', 'xml']\n\n/** @type {import('../core.js').Syntax} */\nexport default function markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup\n\n  // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\n\n/** @type {import('../core.js').Syntax} */\nexport default function objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: {\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n","// @ts-nocheck\nperl.displayName = 'perl'\nperl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function perl(Prism) {\n  ;(function (Prism) {\n    var brackets =\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\n        .source\n    Prism.languages.perl = {\n      comment: [\n        {\n          // POD\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n        {\n          pattern: RegExp(\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // q/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                // q a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                // q(...)\n                // q{...}\n                // q[...]\n                // q<...>\n                brackets\n              ].join('|') +\n              ')'\n          ),\n          greedy: true\n        },\n        // \"...\", `...`\n        {\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true\n        },\n        // '...'\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n        {\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        }\n      ],\n      regex: [\n        {\n          pattern: RegExp(\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // m/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                // m a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                // m(...)\n                // m{...}\n                // m[...]\n                // m<...>\n                brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngc]*/.source\n          ),\n          greedy: true\n        },\n        // The lookbehinds prevent -s from breaking\n        {\n          pattern: RegExp(\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // s/.../.../\n                // eslint-disable-next-line regexp/strict\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\n                  .source,\n                // s a...a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\n                  .source,\n                // s(...)(...)\n                // s{...}{...}\n                // s[...][...]\n                // s<...><...>\n                // s(...)[...]\n                brackets + /\\s*/.source + brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngcer]*/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        },\n        // /.../\n        // The look-ahead tries to prevent two divisions on\n        // the same line from being highlighted as regex.\n        // This does not support multi-line regex.\n        {\n          pattern:\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n          greedy: true\n        }\n      ],\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n        // ${^POSTMATCH}\n        /[&*$@%]\\{\\^[A-Z]+\\}/,\n        // $^V\n        /[&*$@%]\\^[A-Z_]/,\n        // ${...}\n        /[&*$@%]#?(?=\\{)/,\n        // $foo\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/,\n        // $1\n        /[&*$@%]\\d+/,\n        // $_, @_, %!\n        // The negative lookahead prevents from breaking the %= operator\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n      ],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      'v-string': {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /(\\bsub[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator:\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nphp.displayName = 'php'\nphp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        },\n        // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\npython.displayName = 'python'\npython.aliases = ['py']\n\n/** @type {import('../core.js').Syntax} */\nexport default function python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","// @ts-nocheck\nr.displayName = 'r'\nr.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","// @ts-nocheck\nregex.displayName = 'regex'\nregex.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar)\n\n    // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\n\n/** @type {import('../core.js').Syntax} */\nexport default function ruby(Prism) {\n  Prism.register(refractorClike)\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","// @ts-nocheck\nrust.displayName = 'rust'\nrust.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n        // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nsass.displayName = 'sass'\nsass.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function sass(Prism) {\n  Prism.register(refractorCss)\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important\n\n    // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nscss.displayName = 'scss'\nscss.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function scss(Prism) {\n  Prism.register(refractorCss)\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/\n        // See rest below\n      }\n    },\n\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern:\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n      {\n        pattern: /( )(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    'module-modifier': {\n      pattern: /\\b(?:as|hide|show|with)\\b/i,\n      alias: 'keyword'\n    },\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","// @ts-nocheck\nsql.displayName = 'sql'\nsql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    identifier: {\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        punctuation: /^`|`$/\n      }\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","// @ts-nocheck\nswift.displayName = 'swift'\nswift.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' +\n            // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' +\n            // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' +\n            // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' +\n            // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' +\n            // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\n\n/** @type {import('../core.js').Syntax} */\nexport default function typescript(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n\n      builtin:\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n    })\n\n    // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n      // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n      // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    )\n\n    // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter']\n    delete Prism.languages.typescript['literal-property']\n\n    // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorBasic from './basic.js'\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","// @ts-nocheck\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\n\n/** @type {import('../core.js').Syntax} */\nexport default function yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/\n    // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/\n    // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)'\n    // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","// @ts-nocheck\nabap.displayName = 'abap'\nabap.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern:\n        /(\\s|\\.|^)(?:\\*-INPUT|\\?TO|ABAP-SOURCE|ABBREVIATED|ABS|ABSTRACT|ACCEPT|ACCEPTING|ACCESSPOLICY|ACCORDING|ACOS|ACTIVATION|ACTUAL|ADD|ADD-CORRESPONDING|ADJACENT|AFTER|ALIAS|ALIASES|ALIGN|ALL|ALLOCATE|ALPHA|ANALYSIS|ANALYZER|AND|ANY|APPEND|APPENDAGE|APPENDING|APPLICATION|ARCHIVE|AREA|ARITHMETIC|AS|ASCENDING|ASIN|ASPECT|ASSERT|ASSIGN|ASSIGNED|ASSIGNING|ASSOCIATION|ASYNCHRONOUS|AT|ATAN|ATTRIBUTES|AUTHORITY|AUTHORITY-CHECK|AVG|BACK|BACKGROUND|BACKUP|BACKWARD|BADI|BASE|BEFORE|BEGIN|BETWEEN|BIG|BINARY|BINDING|BIT|BIT-AND|BIT-NOT|BIT-OR|BIT-XOR|BLACK|BLANK|BLANKS|BLOB|BLOCK|BLOCKS|BLUE|BOUND|BOUNDARIES|BOUNDS|BOXED|BREAK-POINT|BT|BUFFER|BY|BYPASSING|BYTE|BYTE-CA|BYTE-CN|BYTE-CO|BYTE-CS|BYTE-NA|BYTE-NS|BYTE-ORDER|C|CA|CALL|CALLING|CASE|CAST|CASTING|CATCH|CEIL|CENTER|CENTERED|CHAIN|CHAIN-INPUT|CHAIN-REQUEST|CHANGE|CHANGING|CHANNELS|CHAR-TO-HEX|CHARACTER|CHARLEN|CHECK|CHECKBOX|CIRCULAR|CI_|CLASS|CLASS-CODING|CLASS-DATA|CLASS-EVENTS|CLASS-METHODS|CLASS-POOL|CLEANUP|CLEAR|CLIENT|CLOB|CLOCK|CLOSE|CN|CNT|CO|COALESCE|CODE|CODING|COLLECT|COLOR|COLUMN|COLUMNS|COL_BACKGROUND|COL_GROUP|COL_HEADING|COL_KEY|COL_NEGATIVE|COL_NORMAL|COL_POSITIVE|COL_TOTAL|COMMENT|COMMENTS|COMMIT|COMMON|COMMUNICATION|COMPARING|COMPONENT|COMPONENTS|COMPRESSION|COMPUTE|CONCAT|CONCATENATE|COND|CONDENSE|CONDITION|CONNECT|CONNECTION|CONSTANTS|CONTEXT|CONTEXTS|CONTINUE|CONTROL|CONTROLS|CONV|CONVERSION|CONVERT|COPIES|COPY|CORRESPONDING|COS|COSH|COUNT|COUNTRY|COVER|CP|CPI|CREATE|CREATING|CRITICAL|CS|CURRENCY|CURRENCY_CONVERSION|CURRENT|CURSOR|CURSOR-SELECTION|CUSTOMER|CUSTOMER-FUNCTION|DANGEROUS|DATA|DATABASE|DATAINFO|DATASET|DATE|DAYLIGHT|DBMAXLEN|DD\\/MM\\/YY|DD\\/MM\\/YYYY|DDMMYY|DEALLOCATE|DECIMALS|DECIMAL_SHIFT|DECLARATIONS|DEEP|DEFAULT|DEFERRED|DEFINE|DEFINING|DEFINITION|DELETE|DELETING|DEMAND|DEPARTMENT|DESCENDING|DESCRIBE|DESTINATION|DETAIL|DIALOG|DIRECTORY|DISCONNECT|DISPLAY|DISPLAY-MODE|DISTANCE|DISTINCT|DIV|DIVIDE|DIVIDE-CORRESPONDING|DIVISION|DO|DUMMY|DUPLICATE|DUPLICATES|DURATION|DURING|DYNAMIC|DYNPRO|E|EACH|EDIT|EDITOR-CALL|ELSE|ELSEIF|EMPTY|ENABLED|ENABLING|ENCODING|END|END-ENHANCEMENT-SECTION|END-LINES|END-OF-DEFINITION|END-OF-FILE|END-OF-PAGE|END-OF-SELECTION|ENDAT|ENDCASE|ENDCATCH|ENDCHAIN|ENDCLASS|ENDDO|ENDENHANCEMENT|ENDEXEC|ENDFOR|ENDFORM|ENDFUNCTION|ENDIAN|ENDIF|ENDING|ENDINTERFACE|ENDLOOP|ENDMETHOD|ENDMODULE|ENDON|ENDPROVIDE|ENDSELECT|ENDTRY|ENDWHILE|ENGINEERING|ENHANCEMENT|ENHANCEMENT-POINT|ENHANCEMENT-SECTION|ENHANCEMENTS|ENTRIES|ENTRY|ENVIRONMENT|EQ|EQUAL|EQUIV|ERRORMESSAGE|ERRORS|ESCAPE|ESCAPING|EVENT|EVENTS|EXACT|EXCEPT|EXCEPTION|EXCEPTION-TABLE|EXCEPTIONS|EXCLUDE|EXCLUDING|EXEC|EXECUTE|EXISTS|EXIT|EXIT-COMMAND|EXP|EXPAND|EXPANDING|EXPIRATION|EXPLICIT|EXPONENT|EXPORT|EXPORTING|EXTEND|EXTENDED|EXTENSION|EXTRACT|FAIL|FETCH|FIELD|FIELD-GROUPS|FIELD-SYMBOL|FIELD-SYMBOLS|FIELDS|FILE|FILTER|FILTER-TABLE|FILTERS|FINAL|FIND|FIRST|FIRST-LINE|FIXED-POINT|FKEQ|FKGE|FLOOR|FLUSH|FONT|FOR|FORM|FORMAT|FORWARD|FOUND|FRAC|FRAME|FRAMES|FREE|FRIENDS|FROM|FUNCTION|FUNCTION-POOL|FUNCTIONALITY|FURTHER|GAPS|GE|GENERATE|GET|GIVING|GKEQ|GKGE|GLOBAL|GRANT|GREATER|GREEN|GROUP|GROUPS|GT|HANDLE|HANDLER|HARMLESS|HASHED|HAVING|HDB|HEAD-LINES|HEADER|HEADERS|HEADING|HELP-ID|HELP-REQUEST|HIDE|HIGH|HINT|HOLD|HOTSPOT|I|ICON|ID|IDENTIFICATION|IDENTIFIER|IDS|IF|IGNORE|IGNORING|IMMEDIATELY|IMPLEMENTATION|IMPLEMENTATIONS|IMPLEMENTED|IMPLICIT|IMPORT|IMPORTING|IN|INACTIVE|INCL|INCLUDE|INCLUDES|INCLUDING|INCREMENT|INDEX|INDEX-LINE|INFOTYPES|INHERITING|INIT|INITIAL|INITIALIZATION|INNER|INOUT|INPUT|INSERT|INSTANCES|INTENSIFIED|INTERFACE|INTERFACE-POOL|INTERFACES|INTERNAL|INTERVALS|INTO|INVERSE|INVERTED-DATE|IS|ISO|ITERATOR|ITNO|JOB|JOIN|KEEP|KEEPING|KERNEL|KEY|KEYS|KEYWORDS|KIND|LANGUAGE|LAST|LATE|LAYOUT|LE|LEADING|LEAVE|LEFT|LEFT-JUSTIFIED|LEFTPLUS|LEFTSPACE|LEGACY|LENGTH|LESS|LET|LEVEL|LEVELS|LIKE|LINE|LINE-COUNT|LINE-SELECTION|LINE-SIZE|LINEFEED|LINES|LIST|LIST-PROCESSING|LISTBOX|LITTLE|LLANG|LOAD|LOAD-OF-PROGRAM|LOB|LOCAL|LOCALE|LOCATOR|LOG|LOG-POINT|LOG10|LOGFILE|LOGICAL|LONG|LOOP|LOW|LOWER|LPAD|LPI|LT|M|MAIL|MAIN|MAJOR-ID|MAPPING|MARGIN|MARK|MASK|MATCH|MATCHCODE|MAX|MAXIMUM|MEDIUM|MEMBERS|MEMORY|MESH|MESSAGE|MESSAGE-ID|MESSAGES|MESSAGING|METHOD|METHODS|MIN|MINIMUM|MINOR-ID|MM\\/DD\\/YY|MM\\/DD\\/YYYY|MMDDYY|MOD|MODE|MODIF|MODIFIER|MODIFY|MODULE|MOVE|MOVE-CORRESPONDING|MULTIPLY|MULTIPLY-CORRESPONDING|NA|NAME|NAMETAB|NATIVE|NB|NE|NESTED|NESTING|NEW|NEW-LINE|NEW-PAGE|NEW-SECTION|NEXT|NO|NO-DISPLAY|NO-EXTENSION|NO-GAP|NO-GAPS|NO-GROUPING|NO-HEADING|NO-SCROLLING|NO-SIGN|NO-TITLE|NO-TOPOFPAGE|NO-ZERO|NODE|NODES|NON-UNICODE|NON-UNIQUE|NOT|NP|NS|NULL|NUMBER|NUMOFCHAR|O|OBJECT|OBJECTS|OBLIGATORY|OCCURRENCE|OCCURRENCES|OCCURS|OF|OFF|OFFSET|OLE|ON|ONLY|OPEN|OPTION|OPTIONAL|OPTIONS|OR|ORDER|OTHER|OTHERS|OUT|OUTER|OUTPUT|OUTPUT-LENGTH|OVERFLOW|OVERLAY|PACK|PACKAGE|PAD|PADDING|PAGE|PAGES|PARAMETER|PARAMETER-TABLE|PARAMETERS|PART|PARTIALLY|PATTERN|PERCENTAGE|PERFORM|PERFORMING|PERSON|PF|PF-STATUS|PINK|PLACES|POOL|POSITION|POS_HIGH|POS_LOW|PRAGMAS|PRECOMPILED|PREFERRED|PRESERVING|PRIMARY|PRINT|PRINT-CONTROL|PRIORITY|PRIVATE|PROCEDURE|PROCESS|PROGRAM|PROPERTY|PROTECTED|PROVIDE|PUBLIC|PUSHBUTTON|PUT|QUEUE-ONLY|QUICKINFO|RADIOBUTTON|RAISE|RAISING|RANGE|RANGES|RAW|READ|READ-ONLY|READER|RECEIVE|RECEIVED|RECEIVER|RECEIVING|RED|REDEFINITION|REDUCE|REDUCED|REF|REFERENCE|REFRESH|REGEX|REJECT|REMOTE|RENAMING|REPLACE|REPLACEMENT|REPLACING|REPORT|REQUEST|REQUESTED|RESERVE|RESET|RESOLUTION|RESPECTING|RESPONSIBLE|RESULT|RESULTS|RESUMABLE|RESUME|RETRY|RETURN|RETURNCODE|RETURNING|RIGHT|RIGHT-JUSTIFIED|RIGHTPLUS|RIGHTSPACE|RISK|RMC_COMMUNICATION_FAILURE|RMC_INVALID_STATUS|RMC_SYSTEM_FAILURE|ROLE|ROLLBACK|ROUND|ROWS|RTTI|RUN|SAP|SAP-SPOOL|SAVING|SCALE_PRESERVING|SCALE_PRESERVING_SCIENTIFIC|SCAN|SCIENTIFIC|SCIENTIFIC_WITH_LEADING_ZERO|SCREEN|SCROLL|SCROLL-BOUNDARY|SCROLLING|SEARCH|SECONDARY|SECONDS|SECTION|SELECT|SELECT-OPTIONS|SELECTION|SELECTION-SCREEN|SELECTION-SET|SELECTION-SETS|SELECTION-TABLE|SELECTIONS|SELECTOR|SEND|SEPARATE|SEPARATED|SET|SHARED|SHIFT|SHORT|SHORTDUMP-ID|SIGN|SIGN_AS_POSTFIX|SIMPLE|SIN|SINGLE|SINH|SIZE|SKIP|SKIPPING|SMART|SOME|SORT|SORTABLE|SORTED|SOURCE|SPACE|SPECIFIED|SPLIT|SPOOL|SPOTS|SQL|SQLSCRIPT|SQRT|STABLE|STAMP|STANDARD|START-OF-SELECTION|STARTING|STATE|STATEMENT|STATEMENTS|STATIC|STATICS|STATUSINFO|STEP-LOOP|STOP|STRLEN|STRUCTURE|STRUCTURES|STYLE|SUBKEY|SUBMATCHES|SUBMIT|SUBROUTINE|SUBSCREEN|SUBSTRING|SUBTRACT|SUBTRACT-CORRESPONDING|SUFFIX|SUM|SUMMARY|SUMMING|SUPPLIED|SUPPLY|SUPPRESS|SWITCH|SWITCHSTATES|SYMBOL|SYNCPOINTS|SYNTAX|SYNTAX-CHECK|SYNTAX-TRACE|SYSTEM-CALL|SYSTEM-EXCEPTIONS|SYSTEM-EXIT|TAB|TABBED|TABLE|TABLES|TABLEVIEW|TABSTRIP|TAN|TANH|TARGET|TASK|TASKS|TEST|TESTING|TEXT|TEXTPOOL|THEN|THROW|TIME|TIMES|TIMESTAMP|TIMEZONE|TITLE|TITLE-LINES|TITLEBAR|TO|TOKENIZATION|TOKENS|TOP-LINES|TOP-OF-PAGE|TRACE-FILE|TRACE-TABLE|TRAILING|TRANSACTION|TRANSFER|TRANSFORMATION|TRANSLATE|TRANSPORTING|TRMAC|TRUNC|TRUNCATE|TRUNCATION|TRY|TYPE|TYPE-POOL|TYPE-POOLS|TYPES|ULINE|UNASSIGN|UNDER|UNICODE|UNION|UNIQUE|UNIT|UNIT_CONVERSION|UNIX|UNPACK|UNTIL|UNWIND|UP|UPDATE|UPPER|USER|USER-COMMAND|USING|UTF-8|VALID|VALUE|VALUE-REQUEST|VALUES|VARY|VARYING|VERIFICATION-MESSAGE|VERSION|VIA|VIEW|VISIBLE|WAIT|WARNING|WHEN|WHENEVER|WHERE|WHILE|WIDTH|WINDOW|WINDOWS|WITH|WITH-HEADING|WITH-TITLE|WITHOUT|WORD|WORK|WRITE|WRITER|X|XML|XOR|XSD|XSTRLEN|YELLOW|YES|YYMMDD|Z|ZERO|ZONE)(?![\\w-])/i,\n      lookbehind: true\n    },\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n    /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [\n      {\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }\n    ],\n    punctuation: /[,.:()]/\n  }\n}\n","// @ts-nocheck\nabnf.displayName = 'abnf'\nabnf.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function abnf(Prism) {\n  ;(function (Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern:\n          /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function actionscript(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function'\n\n  // doesn't work with AS because AS is too complex\n  delete Prism.languages.actionscript['parameter']\n  delete Prism.languages.actionscript['literal-property']\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n","// @ts-nocheck\nada.displayName = 'ada'\nada.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n    number: [\n      {\n        pattern:\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    attribute: {\n      pattern: /\\b'\\w+/,\n      alias: 'attr-name'\n    },\n    keyword:\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|or|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  }\n}\n","// @ts-nocheck\nagda.displayName = 'agda'\nagda.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nal.displayName = 'al'\nal.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function al(Prism) {\n  // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n\n  Prism.languages.al = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    keyword: [\n      // keywords\n      /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i,\n      // objects and metadata that are used like keywords\n      /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n    ],\n    number:\n      /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\n    'class-name':\n      /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n    operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n    punctuation: /[()\\[\\]{}:.;,]/\n  }\n}\n","// @ts-nocheck\nantlr4.displayName = 'antlr4'\nantlr4.aliases = ['g4']\n\n/** @type {import('../core.js').Syntax} */\nexport default function antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape:\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern:\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword:\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [\n      {\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n        alias: ['rule', 'class-name']\n      },\n      {\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n        alias: ['token', 'constant']\n      }\n    ],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  }\n  Prism.languages.g4 = Prism.languages.antlr4\n}\n","// @ts-nocheck\napacheconf.displayName = 'apacheconf'\napacheconf.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern:\n        /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern:\n        /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:[\\w=],?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nimport refractorSql from './sql.js'\napex.displayName = 'apex'\napex.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function apex(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\n    var className =\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n        /<keyword>/g,\n        function () {\n          return keywords.source\n        }\n      )\n    /** @param {string} pattern */\n    function insertClassName(pattern) {\n      return RegExp(\n        pattern.replace(/<CLASS-NAME>/g, function () {\n          return className\n        }),\n        'i'\n      )\n    }\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    }\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [\n        {\n          pattern: insertClassName(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\n              .source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // cast\n          pattern: insertClassName(\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // variable/parameter declaration and return types\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n          inside: classNameInside\n        }\n      ],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator:\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\napl.displayName = 'apl'\napl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n","// @ts-nocheck\napplescript.displayName = 'applescript'\napplescript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n      /--.+/,\n      /#.+/\n    ],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n      /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\n    ],\n    keyword:\n      /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    'class-name':\n      /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\n    punctuation: /[{}():,¬«»《》]/\n  }\n}\n","// @ts-nocheck\naql.displayName = 'aql'\naql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\n      // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n","// @ts-nocheck\narff.displayName = 'arff'\narff.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n","// @ts-nocheck\narmasm.displayName = 'armasm'\narmasm.aliases = ['arm-asm']\n\n/** @type {import('../core.js').Syntax} */\nexport default function armasm(Prism) {\n  Prism.languages.armasm = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"/,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /((?:^|[^$])(?:\\${2})*)\\$\\w+/,\n          lookbehind: true\n        }\n      }\n    },\n    char: {\n      pattern: /'(?:[^'\\r\\n]{0,4}|'')'/,\n      greedy: true\n    },\n    'version-symbol': {\n      pattern: /\\|[\\w@]+\\|/,\n      greedy: true,\n      alias: 'property'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    directive: {\n      pattern:\n        /\\b(?:ALIAS|ALIGN|AREA|ARM|ASSERT|ATTR|CN|CODE|CODE16|CODE32|COMMON|CP|DATA|DCB|DCD|DCDO|DCDU|DCFD|DCFDU|DCI|DCQ|DCQU|DCW|DCWU|DN|ELIF|ELSE|END|ENDFUNC|ENDIF|ENDP|ENTRY|EQU|EXPORT|EXPORTAS|EXTERN|FIELD|FILL|FN|FUNCTION|GBLA|GBLL|GBLS|GET|GLOBAL|IF|IMPORT|INCBIN|INCLUDE|INFO|KEEP|LCLA|LCLL|LCLS|LTORG|MACRO|MAP|MEND|MEXIT|NOFP|OPT|PRESERVE8|PROC|QN|READONLY|RELOC|REQUIRE|REQUIRE8|RLIST|ROUT|SETA|SETL|SETS|SN|SPACE|SUBT|THUMB|THUMBX|TTL|WEND|WHILE)\\b/,\n      alias: 'property'\n    },\n    instruction: {\n      pattern:\n        /((?:^|(?:^|[^\\\\])(?:\\r\\n?|\\n))[ \\t]*(?:(?:[A-Z][A-Z0-9_]*[a-z]\\w*|[a-z]\\w*|\\d+)[ \\t]+)?)\\b[A-Z.]+\\b/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+/,\n    number:\n      /(?:\\b[2-9]_\\d+|(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e-?\\d+)?|\\b0(?:[fd]_|x)[0-9a-f]+|&[0-9a-f]+)\\b/i,\n    register: {\n      pattern: /\\b(?:r\\d|lr)\\b/,\n      alias: 'symbol'\n    },\n    operator: /<>|<<|>>|&&|\\|\\||[=!<>/]=?|[+\\-*%#?&|^]|:[A-Z]+:/,\n    punctuation: /[()[\\],]/\n  }\n  Prism.languages['arm-asm'] = Prism.languages.armasm\n}\n","// @ts-nocheck\narturo.displayName = 'arturo'\narturo.aliases = ['art']\n\n/** @type {import('../core.js').Syntax} */\nexport default function arturo(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} lang\n     * @param {string} pattern\n     */\n    var createLanguageString = function (lang, pattern) {\n      return {\n        pattern: RegExp(\n          /\\{!/.source + '(?:' + (pattern || lang) + ')' + /$[\\s\\S]*\\}/.source,\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          embedded: {\n            pattern: /(^\\{!\\w+\\b)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            alias: 'language-' + lang,\n            inside: Prism.languages[lang]\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    }\n    Prism.languages.arturo = {\n      comment: {\n        pattern: /;.*/,\n        greedy: true\n      },\n      character: {\n        pattern: /`.`/,\n        alias: 'char',\n        greedy: true\n      },\n      number: {\n        pattern: /\\b\\d+(?:\\.\\d+(?:\\.\\d+(?:-[\\w+-]+)?)?)?\\b/\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      },\n      regex: {\n        pattern: /\\{\\/.*?\\/\\}/,\n        greedy: true\n      },\n      'html-string': createLanguageString('html'),\n      'css-string': createLanguageString('css'),\n      'js-string': createLanguageString('js'),\n      'md-string': createLanguageString('md'),\n      'sql-string': createLanguageString('sql'),\n      'sh-string': createLanguageString('shell', 'sh'),\n      multistring: {\n        pattern: /».*|\\{:[\\s\\S]*?:\\}|\\{[\\s\\S]*?\\}|^-{6}$[\\s\\S]*/m,\n        alias: 'string',\n        greedy: true\n      },\n      label: {\n        pattern: /\\w+\\b\\??:/,\n        alias: 'property'\n      },\n      literal: {\n        pattern: /'(?:\\w+\\b\\??:?)/,\n        alias: 'constant'\n      },\n      type: {\n        pattern: /:(?:\\w+\\b\\??:?)/,\n        alias: 'class-name'\n      },\n      color: /#\\w+/,\n      predicate: {\n        pattern:\n          /\\b(?:all|and|any|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|floating|function|greater|greaterOrEqual|if|in|inline|integer|is|key|label|leap|less|lessOrEqual|literal|logical|lower|nand|negative|nor|not|notEqual|null|numeric|odd|or|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|true|try|type|unless|upper|when|whitespace|word|xnor|xor|zero)\\?/,\n        alias: 'keyword'\n      },\n      'builtin-function': {\n        pattern:\n          /\\b(?:abs|acos|acosh|acsec|acsech|actan|actanh|add|after|alert|alias|and|angle|append|arg|args|arity|array|as|asec|asech|asin|asinh|atan|atan2|atanh|attr|attrs|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|cos|cosh|crc|csec|csech|ctan|ctanh|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|div|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|fdiv|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|nand|neg|new|nor|normalize|not|now|null|open|or|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|pop|popup|pow|powerset|powmod|prefix|print|prints|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|sec|sech|select|serve|set|shl|shr|shuffle|sin|sinh|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|sub|suffix|sum|switch|symbols|symlink|sys|take|tan|tanh|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|xnor|xor|zip)\\b/,\n        alias: 'keyword'\n      },\n      sugar: {\n        pattern: /->|=>|\\||::/,\n        alias: 'operator'\n      },\n      punctuation: /[()[\\],]/,\n      symbol: {\n        pattern: /<:|-:|ø|@|#|\\+|\\||\\*|\\$|---|-|%|\\/|\\.\\.|\\^|~|=|<|>|\\\\/\n      },\n      boolean: {\n        pattern: /\\b(?:false|maybe|true)\\b/\n      }\n    }\n    Prism.languages.art = Prism.languages['arturo']\n  })(Prism)\n}\n","// @ts-nocheck\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = ['adoc']\n\n/** @type {import('../core.js').Syntax} */\nexport default function asciidoc(Prism) {\n  ;(function (Prism) {\n    var attributes = {\n      pattern:\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/\n            // See rest below\n          }\n        },\n\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    var asciidoc = (Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})$[\\s\\S]*?^\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern:\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n          }\n          // See rest below\n        }\n      },\n\n      'passthrough-block': {\n        pattern: /^(\\+{4,})$[\\s\\S]*?^\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/\n          // See rest below\n        }\n      },\n\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})$[\\s\\S]*?^\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n          // See rest below\n        }\n      },\n\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern: /^(--|\\*{4,}|_{4,}|={4,})$[\\s\\S]*?^\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n          // See rest below\n        }\n      },\n\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern:\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern:\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n          // See rest below\n        }\n      },\n\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern:\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern:\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation:\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|R|TM)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n\n    // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n    function copyFromAsciiDoc(keys) {\n      keys = keys.split(' ')\n      var o = {}\n      for (var i = 0, l = keys.length; i < l; i++) {\n        o[keys[i]] = asciidoc[keys[i]]\n      }\n      return o\n    }\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n    )\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n    )\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n    Prism.languages.adoc = Prism.languages.asciidoc\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCsharp from './csharp.js'\nimport refractorMarkup from './markup.js'\naspnet.displayName = 'aspnet'\naspnet.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.register(refractorMarkup)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  })\n  // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n\n  // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  })\n\n  // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n","// @ts-nocheck\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    },\n    punctuation: /[(),:]/\n  }\n}\n","// @ts-nocheck\nasmatmel.displayName = 'asmatmel'\nasmatmel.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function asmatmel(Prism) {\n  Prism.languages.asmatmel = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    'r-register': {\n      pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n      alias: 'variable'\n    },\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[acznvshtixy]\\b/i,\n      alias: 'variable'\n    },\n    operator: />>=?|<<=?|&[&=]?|\\|[\\|=]?|[-+*/%^!=<>?]=?/,\n    punctuation: /[(),:]/\n  }\n}\n","// @ts-nocheck\nautohotkey.displayName = 'autohotkey'\nautohotkey.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: [\n      {\n        pattern: /(^|\\s);.*/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    tag: {\n      // labels\n      pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator:\n      /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    command: {\n      pattern:\n        /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n      alias: 'selector'\n    },\n    constant:\n      /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\n    builtin:\n      /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\n    symbol:\n      /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    directive: {\n      pattern: /#[a-z]+\\b/i,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\n    punctuation: /[{}[\\]():,]/\n  }\n}\n","// @ts-nocheck\nautoit.displayName = 'autoit'\nautoit.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern:\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword:\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n","// @ts-nocheck\navisynth.displayName = 'avisynth'\navisynth.aliases = ['avs']\n\n/** @type {import('../core.js').Syntax} */\nexport default function avisynth(Prism) {\n  // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n  ;(function (Prism) {\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return replacements[+index]\n      })\n    }\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    var types = /bool|clip|float|int|string|val/.source\n    var internals = [\n      // bools\n      /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/\n        .source,\n      // control\n      /apply|assert|default|eval|import|nop|select|undefined/.source,\n      // global\n      /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/\n        .source,\n      // conv\n      /hex(?:value)?|value/.source,\n      // numeric\n      /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/\n        .source,\n      // trig\n      /a?sinh?|a?cosh?|a?tan[2h]?/.source,\n      // bit\n      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/\n        .source,\n      // runtime\n      /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/\n        .source,\n      // script\n      /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/\n        .source,\n      // string\n      /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/\n        .source,\n      // version\n      /isversionorgreater|version(?:number|string)/.source,\n      // helper\n      /buildpixeltype|colorspacenametopixeltype/.source,\n      // avsplus\n      /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n    ].join('|')\n    var properties = [\n      // content\n      /has(?:audio|video)/.source,\n      // resolution\n      /height|width/.source,\n      // framerate\n      /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,\n      // interlacing\n      /getparity|is(?:field|frame)based/.source,\n      // color format\n      /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/\n        .source,\n      // audio\n      /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/\n        .source\n    ].join('|')\n    var filters = [\n      // source\n      /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/\n        .source,\n      // color\n      /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/\n        .source,\n      // overlay\n      /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,\n      // geometry\n      /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/\n        .source,\n      // pixel\n      /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/\n        .source,\n      // timeline\n      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/\n        .source,\n      // interlace\n      /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/\n        .source,\n      // audio\n      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/\n        .source,\n      // conditional\n      /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/\n        .source,\n      // export\n      /imagewriter/.source,\n      // debug\n      /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/\n        .source\n    ].join('|')\n    var allinternals = [internals, properties, filters].join('|')\n    Prism.languages.avisynth = {\n      comment: [\n        {\n          // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n          // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n          pattern:\n            /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches /* */ block comments\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches # comments\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // Handle before strings because optional arguments are surrounded by double quotes\n      argument: {\n        pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], 'i'),\n        inside: {\n          keyword: /^\\w+/\n        }\n      },\n      // Optional argument assignment\n      'argument-label': {\n        pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n        lookbehind: true,\n        inside: {\n          'argument-name': {\n            pattern: /^\\w+/,\n            alias: 'punctuation'\n          },\n          punctuation: /=$/\n        }\n      },\n      string: [\n        {\n          // triple double-quoted\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true\n        },\n        {\n          // single double-quoted\n          pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            constant: {\n              // These *are* case-sensitive!\n              pattern:\n                /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n            }\n          }\n        }\n      ],\n      // The special \"last\" variable that takes the value of the last implicitly returned clip\n      variable: /\\b(?:last)\\b/i,\n      boolean: /\\b(?:false|no|true|yes)\\b/i,\n      keyword:\n        /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n      constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n      // AviSynth's internal functions, filters, and properties\n      'builtin-function': {\n        pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], 'i'),\n        alias: 'function'\n      },\n      'type-cast': {\n        pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], 'i'),\n        alias: 'keyword'\n      },\n      // External/user-defined filters\n      function: {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n        lookbehind: true\n      },\n      // Matches a \\ as the first or last character on a line\n      'line-continuation': {\n        pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      number:\n        /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n      operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n      punctuation: /[{}\\[\\]();,.]/\n    }\n    Prism.languages.avs = Prism.languages.avisynth\n  })(Prism)\n}\n","// @ts-nocheck\navroIdl.displayName = 'avro-idl'\navroIdl.aliases = ['avdl']\n\n/** @type {import('../core.js').Syntax} */\nexport default function avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n        lookbehind: true\n      },\n      /-?\\b(?:Infinity|NaN)\\b/\n    ],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  }\n  Prism.languages.avdl = Prism.languages['avro-idl']\n}\n","// @ts-nocheck\nawk.displayName = 'awk'\nawk.aliases = ['gawk']\n\n/** @type {import('../core.js').Syntax} */\nexport default function awk(Prism) {\n  Prism.languages.awk = {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    regex: {\n      pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\n      lookbehind: true,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    keyword:\n      /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\n    operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\n    punctuation: /[()[\\]{},;]/\n  }\n  Prism.languages.gawk = Prism.languages.awk\n}\n","// @ts-nocheck\nbatch.displayName = 'batch'\nbatch.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function batch(Prism) {\n  ;(function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern:\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern:\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern:\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern:\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nbbcode.displayName = 'bbcode'\nbbcode.aliases = ['shortcode']\n\n/** @type {import('../core.js').Syntax} */\nexport default function bbcode(Prism) {\n  Prism.languages.bbcode = {\n    tag: {\n      pattern:\n        /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n      inside: {\n        tag: {\n          pattern: /^\\[\\/?[^\\s=\\]]+/,\n          inside: {\n            punctuation: /^\\[\\/?/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\]/,\n        'attr-name': /[^\\s=\\]]+/\n      }\n    }\n  }\n  Prism.languages.shortcode = Prism.languages.bbcode\n}\n","// @ts-nocheck\nbbj.displayName = 'bbj'\nbbj.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function bbj(Prism) {\n  ;(function (Prism) {\n    Prism.languages.bbj = {\n      comment: {\n        pattern: /(^|[^\\\\:])rem\\s+.*/i,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        pattern: /(['\"])(?:(?!\\1|\\\\).|\\\\.)*\\1/,\n        greedy: true\n      },\n      number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword:\n        /\\b(?:abstract|all|argc|begin|bye|callback|case|chn|class|classend|ctl|day|declare|delete|dim|dom|dread|dsz|else|end|endif|err|exitto|extends|fi|field|for|from|gosub|goto|if|implements|interface|interfaceend|iol|iolist|let|list|load|method|methodend|methodret|on|opts|pfx|print|private|process_events|protected|psz|public|read|read_resource|release|remove_callback|repeat|restore|return|rev|seterr|setesc|sqlchn|sqlunt|ssn|start|static|swend|switch|sys|then|tim|unt|until|use|void|wend|where|while)\\b/i,\n      function: /\\b\\w+(?=\\()/,\n      boolean: /\\b(?:BBjAPI\\.TRUE|BBjAPI\\.FALSE)\\b/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:and|not|or|xor)\\b/i,\n      punctuation: /[.,;:()]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nbicep.displayName = 'bicep'\nbicep.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nbirb.displayName = 'birb'\nbirb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function birb(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/,\n      // matches variable and function return types (parameters as well).\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nbison.displayName = 'bison'\nbison.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n","// @ts-nocheck\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\n\n/** @type {import('../core.js').Syntax} */\nexport default function bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n","// @ts-nocheck\nbqn.displayName = 'bqn'\nbqn.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function bqn(Prism) {\n  Prism.languages.bqn = {\n    shebang: {\n      pattern: /^#![ \\t]*\\/.*/,\n      alias: 'important',\n      greedy: true\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /\"(?:[^\"]|\"\")*\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'character-literal': {\n      pattern: /'(?:[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])'/,\n      greedy: true,\n      alias: 'char'\n    },\n    function: /•[\\w¯.∞π]+[\\w¯.∞π]*/,\n    'dot-notation-on-brackets': {\n      pattern: /\\{(?=.*\\}\\.)|\\}\\./,\n      alias: 'namespace'\n    },\n    'special-name': {\n      pattern: /(?:𝕨|𝕩|𝕗|𝕘|𝕤|𝕣|𝕎|𝕏|𝔽|𝔾|𝕊|_𝕣_|_𝕣)/,\n      alias: 'keyword'\n    },\n    'dot-notation-on-name': {\n      pattern: /[A-Za-z_][\\w¯∞π]*\\./,\n      alias: 'namespace'\n    },\n    'word-number-scientific': {\n      pattern: /\\d+(?:\\.\\d+)?[eE]¯?\\d+/,\n      alias: 'number'\n    },\n    'word-name': {\n      pattern: /[A-Za-z_][\\w¯∞π]*/,\n      alias: 'symbol'\n    },\n    'word-number': {\n      pattern:\n        /[¯∞π]?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π))?/,\n      alias: 'number'\n    },\n    'null-literal': {\n      pattern: /@/,\n      alias: 'char'\n    },\n    'primitive-functions': {\n      pattern: /[-+×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍⋈↑↓↕«»⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!]/,\n      alias: 'operator'\n    },\n    'primitive-1-operators': {\n      pattern: /[`˜˘¨⁼⌜´˝˙]/,\n      alias: 'operator'\n    },\n    'primitive-2-operators': {\n      pattern: /[∘⊸⟜○⌾⎉⚇⍟⊘◶⎊]/,\n      alias: 'operator'\n    },\n    punctuation: /[←⇐↩(){}⟨⟩[\\]‿·⋄,.;:?]/\n  }\n}\n","// @ts-nocheck\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n","// @ts-nocheck\nbrightscript.displayName = 'brightscript'\nbrightscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n\n    property: {\n      pattern:\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator:\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  }\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\n    Prism.languages.brightscript\n}\n","// @ts-nocheck\nbro.displayName = 'bro'\nbro.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:FIXME|TODO|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\n      lookbehind: true\n    },\n    builtin:\n      /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\n    constant: {\n      pattern: /(\\bconst[ \\t]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\nbsl.displayName = 'bsl'\nbsl.aliases = ['oscript']\n\n/** @type {import('../core.js').Syntax} */\nexport default function bsl(Prism) {\n  /* eslint-disable no-misleading-character-class */\n\n  // 1C:Enterprise\n  // https://github.com/Diversus23/\n  //\n  Prism.languages.bsl = {\n    comment: /\\/\\/.*/,\n    string: [\n      // Строки\n      // Strings\n      {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      // Дата и время\n      // Date & time\n      {\n        pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n      }\n    ],\n    keyword: [\n      {\n        // RU\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      {\n        // EN\n        pattern:\n          /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\n      }\n    ],\n    number: {\n      pattern:\n        /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n      lookbehind: true\n    },\n    operator: [\n      /[<>+\\-*/]=?|[%=]/,\n      // RU\n      {\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      // EN\n      {\n        pattern: /\\b(?:and|not|or)\\b/i\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n    directive: [\n      // Теги препроцессора вида &Клиент, &Сервер, ...\n      // Preprocessor tags of the type &Client, &Server, ...\n      {\n        pattern: /^([ \\t]*)&.*/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      },\n      // Инструкции препроцессора вида:\n      // #Если Сервер Тогда\n      // ...\n      // #КонецЕсли\n      // Preprocessor instructions of the form:\n      // #If Server Then\n      // ...\n      // #EndIf\n      {\n        pattern: /^([ \\t]*)#.*/gm,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }\n    ]\n  }\n  Prism.languages.oscript = Prism.languages['bsl']\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ncfscript.displayName = 'cfscript'\ncfscript.aliases = ['cfc']\n\n/** @type {import('../core.js').Syntax} */\nexport default function cfscript(Prism) {\n  Prism.register(refractorClike)\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|:/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nimport refractorCpp from './cpp.js'\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function chaiscript(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n","// @ts-nocheck\ncil.displayName = 'cil'\ncil.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cil(Prism) {\n  Prism.languages.cil = {\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    directive: {\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    // Actually an assembly reference\n    variable: /\\[[\\w\\.]+\\]/,\n    keyword:\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n    function:\n      /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n  }\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\ncilkc.displayName = 'cilkc'\ncilkc.aliases = ['cilk-c']\n\n/** @type {import('../core.js').Syntax} */\nexport default function cilkc(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.cilkc = Prism.languages.insertBefore('c', 'function', {\n    'parallel-keyword': {\n      pattern: /\\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\\b/,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages['cilk-c'] = Prism.languages['cilkc']\n}\n","// @ts-nocheck\nimport refractorCpp from './cpp.js'\ncilkcpp.displayName = 'cilkcpp'\ncilkcpp.aliases = ['cilk', 'cilk-cpp']\n\n/** @type {import('../core.js').Syntax} */\nexport default function cilkcpp(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.cilkcpp = Prism.languages.insertBefore('cpp', 'function', {\n    'parallel-keyword': {\n      pattern: /\\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\\b/,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages['cilk-cpp'] = Prism.languages['cilkcpp']\n  Prism.languages['cilk'] = Prism.languages['cilkcpp']\n}\n","// @ts-nocheck\nclojure.displayName = 'clojure'\nclojure.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    char: /\\\\\\w+/,\n    symbol: {\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n      lookbehind: true\n    },\n    keyword: {\n      pattern:\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: {\n      pattern:\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n      lookbehind: true\n    },\n    function: {\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    operator: /[#@^`~]/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","// @ts-nocheck\ncmake.displayName = 'cmake'\ncmake.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cmake(Prism) {\n  Prism.languages.cmake = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n          inside: {\n            punctuation: /\\$\\{|\\}/,\n            variable: /\\w+/\n          }\n        }\n      }\n    },\n    variable:\n      /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_NAME|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE))\\b/,\n    property:\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n    keyword:\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n    boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\n    namespace:\n      /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\n    operator:\n      /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\n    inserted: {\n      pattern: /\\b\\w+::\\w+\\b/,\n      alias: 'class-name'\n    },\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n    punctuation: /[()>}]|\\$[<{]/\n  }\n}\n","// @ts-nocheck\ncobol.displayName = 'cobol'\ncobol.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cobol(Prism) {\n  Prism.languages.cobol = {\n    comment: {\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n      greedy: true\n    },\n    level: {\n      pattern: /(^[ \\t]*)\\d+\\b/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'number'\n    },\n    'class-name': {\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n      pattern:\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n      lookbehind: true,\n      inside: {\n        number: {\n          pattern: /(\\()\\d+/,\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    keyword: {\n      pattern:\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n      lookbehind: true\n    },\n    operator: [\n      /<>|[<>]=?|[=+*/&]/,\n      {\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[.:,()]/\n  }\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\n\n/** @type {import('../core.js').Syntax} */\nexport default function coffeescript(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n","// @ts-nocheck\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\n\n/** @type {import('../core.js').Syntax} */\nexport default function concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      inside: {\n        'class-name': /^\\w+/,\n        string: {\n          pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\n          lookbehind: true\n        },\n        punctuation: /\\|\\|/\n      }\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    'regex-literal': {\n      pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        regex: /[\\s\\S]+/\n      }\n    },\n    'string-literal': {\n      pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n","// @ts-nocheck\ncsp.displayName = 'csp'\ncsp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - https://www.w3.org/TR/CSP1/\n   *  - https://www.w3.org/TR/CSP2/\n   *  - https://www.w3.org/TR/CSP3/\n   */\n\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @returns {RegExp}\n     */\n    function value(source) {\n      return RegExp(\n        /([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source,\n        'i'\n      )\n    }\n    Prism.languages.csp = {\n      directive: {\n        pattern:\n          /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n        lookbehind: true,\n        alias: 'property'\n      },\n      scheme: {\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n        lookbehind: true\n      },\n      none: {\n        pattern: value(/'none'/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      nonce: {\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      hash: {\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      host: {\n        pattern: value(\n          /[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source +\n            '|' +\n            /\\*[^\\s;,']*/.source +\n            '|' +\n            /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source\n        ),\n        lookbehind: true,\n        alias: 'url',\n        inside: {\n          important: /\\*/\n        }\n      },\n      keyword: [\n        {\n          pattern: value(/'unsafe-[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'unsafe'\n        },\n        {\n          pattern: value(/'[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'safe'\n        }\n      ],\n      punctuation: /;/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ncooklang.displayName = 'cooklang'\ncooklang.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cooklang(Prism) {\n  ;(function (Prism) {\n    // see https://github.com/cooklang/spec/blob/main/EBNF.md\n\n    var single_token_suffix = /(?:(?!\\s)[\\d$+<=a-zA-Z\\x80-\\uFFFF])+/.source\n    var multi_token_infix = /[^{}@#]+/.source\n    var multi_token_suffix = /\\{[^}#@]*\\}/.source\n    var multi_token = multi_token_infix + multi_token_suffix\n    var timer_units = /(?:h|hours|hrs|m|min|minutes)/.source\n    var amount_group_impl = {\n      pattern: /\\{[^{}]*\\}/,\n      inside: {\n        amount: {\n          pattern: /([\\{|])[^{}|*%]+/,\n          lookbehind: true,\n          alias: 'number'\n        },\n        unit: {\n          pattern: /(%)[^}]+/,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        'servings-scaler': {\n          pattern: /\\*/,\n          alias: 'operator'\n        },\n        'servings-alternative-separator': {\n          pattern: /\\|/,\n          alias: 'operator'\n        },\n        'unit-separator': {\n          pattern: /(?:%|(\\*)%)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages.cooklang = {\n      comment: {\n        // [- comment -]\n        // -- comment\n        pattern: /\\[-[\\s\\S]*?-\\]|--.*/,\n        greedy: true\n      },\n      meta: {\n        // >> key: value\n        pattern: />>.*:.*/,\n        inside: {\n          property: {\n            // key:\n            pattern: /(>>\\s*)[^\\s:](?:[^:]*[^\\s:])?/,\n            lookbehind: true\n          }\n        }\n      },\n      'cookware-group': {\n        // #...{...}, #...\n        pattern: new RegExp(\n          '#(?:' + multi_token + '|' + single_token_suffix + ')'\n        ),\n        inside: {\n          cookware: {\n            pattern: new RegExp('(^#)(?:' + multi_token_infix + ')'),\n            lookbehind: true,\n            alias: 'variable'\n          },\n          'cookware-keyword': {\n            pattern: /^#/,\n            alias: 'keyword'\n          },\n          'quantity-group': {\n            pattern: new RegExp(/\\{[^{}@#]*\\}/),\n            inside: {\n              quantity: {\n                pattern: new RegExp(/(^\\{)/.source + multi_token_infix),\n                lookbehind: true,\n                alias: 'number'\n              },\n              punctuation: /[{}]/\n            }\n          }\n        }\n      },\n      'ingredient-group': {\n        // @...{...}, @...\n        pattern: new RegExp(\n          '@(?:' + multi_token + '|' + single_token_suffix + ')'\n        ),\n        inside: {\n          ingredient: {\n            pattern: new RegExp('(^@)(?:' + multi_token_infix + ')'),\n            lookbehind: true,\n            alias: 'variable'\n          },\n          'ingredient-keyword': {\n            pattern: /^@/,\n            alias: 'keyword'\n          },\n          'amount-group': amount_group_impl\n        }\n      },\n      'timer-group': {\n        // ~timer{...}\n        // eslint-disable-next-line regexp/sort-alternatives\n        pattern: /~(?!\\s)[^@#~{}]*\\{[^{}]*\\}/,\n        inside: {\n          timer: {\n            pattern: /(^~)[^{]+/,\n            lookbehind: true,\n            alias: 'variable'\n          },\n          'duration-group': {\n            // {...}\n            pattern: /\\{[^{}]*\\}/,\n            inside: {\n              punctuation: /[{}]/,\n              unit: {\n                pattern: new RegExp(\n                  /(%\\s*)/.source + timer_units + /\\b/.source\n                ),\n                lookbehind: true,\n                alias: 'symbol'\n              },\n              operator: /%/,\n              duration: {\n                pattern: /\\d+/,\n                alias: 'number'\n              }\n            }\n          },\n          'timer-keyword': {\n            pattern: /^~/,\n            alias: 'keyword'\n          }\n        }\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ncoq.displayName = 'coq'\ncoq.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function coq(Prism) {\n  ;(function (Prism) {\n    // https://github.com/coq/coq\n\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource\n      })\n    }\n    commentSource = commentSource.replace(/<self>/g, '[]')\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [\n        {\n          pattern: RegExp(\n            /#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\n              /<comment>/g,\n              function () {\n                return commentSource\n              }\n            )\n          ),\n          greedy: true,\n          alias: 'attr-name',\n          inside: {\n            comment: RegExp(commentSource),\n            string: {\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n              greedy: true\n            },\n            operator: /=/,\n            punctuation: /^#\\[|\\]$|[,()]/\n          }\n        },\n        {\n          pattern:\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n          alias: 'attr-name'\n        }\n      ],\n      keyword:\n        /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n      number:\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator:\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorRuby from './ruby.js'\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    })\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern:\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\ncssExtras.displayName = 'css-extras'\ncssExtras.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cssExtras(Prism) {\n  Prism.register(refractorCss)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    }\n    // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n","// @ts-nocheck\ncsv.displayName = 'csv'\ncsv.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function csv(Prism) {\n  // https://tools.ietf.org/html/rfc4180\n\n  Prism.languages.csv = {\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n    punctuation: /,/\n  }\n}\n","// @ts-nocheck\ncue.displayName = 'cue'\ncue.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cue(Prism) {\n  ;(function (Prism) {\n    // https://cuelang.org/docs/references/spec/\n\n    // eslint-disable-next-line regexp/strict\n    var stringEscape = /\\\\(?:(?!\\2)|\\2(?:[^()\\r\\n]|\\([^()]*\\)))/.source\n    // eslint-disable-next-line regexp/strict\n    var stringTypes =\n      /\"\"\"(?:[^\\\\\"]|\"(?!\"\"\\2)|<esc>)*\"\"\"/.source +\n      // eslint-disable-next-line regexp/strict\n      '|' +\n      /'''(?:[^\\\\']|'(?!''\\2)|<esc>)*'''/.source +\n      // eslint-disable-next-line regexp/strict\n      '|' +\n      /\"(?:[^\\\\\\r\\n\"]|\"(?!\\2)|<esc>)*\"/.source +\n      // eslint-disable-next-line regexp/strict\n      '|' +\n      /'(?:[^\\\\\\r\\n']|'(?!\\2)|<esc>)*'/.source\n    var stringLiteral =\n      '(?:' + stringTypes.replace(/<esc>/g, stringEscape) + ')'\n    Prism.languages.cue = {\n      comment: {\n        pattern: /\\/\\/.*/,\n        greedy: true\n      },\n      'string-literal': {\n        // eslint-disable-next-line regexp/strict\n        pattern: RegExp(\n          /(^|[^#\"'\\\\])(#*)/.source + stringLiteral + /(?![\"'])\\2/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // I'm using dirty hack here. We have to know the number hashes at the start of the string somehow,\n          // but we can't look back. So instead, we will use a lookahead, go to the end of the string, and\n          // capture the hashes at the end of the string.\n          escape: {\n            pattern:\n              /(?=[\\s\\S]*[\"'](#*)$)\\\\\\1(?:U[a-fA-F0-9]{1,8}|u[a-fA-F0-9]{1,4}|x[a-fA-F0-9]{1,2}|\\d{2,3}|[^(])/,\n            greedy: true,\n            alias: 'string'\n          },\n          interpolation: {\n            pattern: /(?=[\\s\\S]*[\"'](#*)$)\\\\\\1\\([^()]*\\)/,\n            greedy: true,\n            inside: {\n              punctuation: /^\\\\#*\\(|\\)$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: null\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      keyword: {\n        pattern: /(^|[^\\w$])(?:for|if|import|in|let|null|package)(?![\\w$])/,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^\\w$])(?:false|true)(?![\\w$])/,\n        lookbehind: true\n      },\n      builtin: {\n        pattern:\n          /(^|[^\\w$])(?:bool|bytes|float|float(?:32|64)|u?int(?:8|16|32|64|128)?|number|rune|string)(?![\\w$])/,\n        lookbehind: true\n      },\n      attribute: {\n        pattern: /@[\\w$]+(?=\\s*\\()/,\n        alias: 'function'\n      },\n      function: {\n        pattern: /(^|[^\\w$])[a-z_$][\\w$]*(?=\\s*\\()/i,\n        lookbehind: true\n      },\n      number: {\n        pattern:\n          /(^|[^\\w$.])(?:0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|0[xX][0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[eE][+-]?\\d+(?:_\\d+)*)?(?:[KMGTP]i?)?)(?![\\w$])/,\n        lookbehind: true\n      },\n      operator: /\\.{3}|_\\|_|&&?|\\|\\|?|[=!]~|[<>=!]=?|[+\\-*/?]/,\n      punctuation: /[()[\\]{},.:]/\n    }\n    Prism.languages.cue[\n      'string-literal'\n    ].inside.interpolation.inside.expression.inside = Prism.languages.cue\n  })(Prism)\n}\n","// @ts-nocheck\ncypher.displayName = 'cypher'\ncypher.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cypher(Prism) {\n  Prism.languages.cypher = {\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n      lookbehind: true,\n      greedy: true\n    },\n    relationship: {\n      pattern:\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    identifier: {\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n    keyword:\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n    function: /\\b\\w+\\b(?=\\s*\\()/,\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n    punctuation: /[()[\\]{},;.]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nd.displayName = 'd'\nd.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function d(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.d = Prism.languages.extend('clike', {\n    comment: [\n      {\n        // Shebang\n        pattern: /^\\s*#!.+/,\n        greedy: true\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\\\\])/.source +\n            '(?:' +\n            [\n              // /+ comment +/\n              // Allow one level of nesting\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,\n              // // comment\n              /\\/\\/.*/.source,\n              // /* comment */\n              /\\/\\*[\\s\\S]*?\\*\\//.source\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: RegExp(\n          [\n            // r\"\", x\"\"\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,\n            // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,\n            // q\"IDENT\n            // ...\n            // IDENT\"\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,\n            // q\"//\", q\"||\", etc.\n            // eslint-disable-next-line regexp/strict\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source,\n            // eslint-disable-next-line regexp/strict\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n          ].join('|'),\n          'm'\n        ),\n        greedy: true\n      },\n      {\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n        greedy: true,\n        alias: 'token-string'\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword:\n      /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n      {\n        pattern:\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n        lookbehind: true\n      }\n    ],\n    operator:\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.insertBefore('d', 'string', {\n    // Characters\n    // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n    char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern:\n        /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ndart.displayName = 'dart'\ndart.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function dart(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ]\n\n    // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source\n\n    // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'string', {\n      'string-literal': {\n        pattern:\n          /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\$\\{?|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.dart\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: undefined\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type':\n        /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:false|true)\\b/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ndax.displayName = 'dax'\ndax.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function dax(Prism) {\n  Prism.languages.dax = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n      lookbehind: true\n    },\n    'data-field': {\n      pattern:\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'symbol'\n    },\n    measure: {\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'constant'\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n    boolean: {\n      pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n      alias: 'constant'\n    },\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n    punctuation: /[;\\[\\](){}`,.]/\n  }\n}\n","// @ts-nocheck\ndhall.displayName = 'dhall'\ndhall.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function dhall(Prism) {\n  // ABNF grammar:\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n\n  Prism.languages.dhall = {\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n    // The multi-line pattern is essentially this:\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n    comment:\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              alias: 'language-dhall',\n              inside: null // see blow\n            },\n\n            punctuation: /\\$\\{|\\}/\n          }\n        }\n      }\n    },\n    label: {\n      pattern: /`[^`]*`/,\n      greedy: true\n    },\n    url: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n      pattern:\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n      greedy: true\n    },\n    env: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n      greedy: true,\n      inside: {\n        function: /^env/,\n        operator: /^:/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    hash: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n      inside: {\n        function: /sha256/,\n        operator: /:/,\n        number: /[\\da-fA-F]{64}/\n      }\n    },\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n    keyword:\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n    builtin: /\\b(?:None|Some)\\b/,\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n    operator:\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\n    // we'll just assume that every capital word left is a type name\n    'class-name': /\\b[A-Z]\\w*\\b/\n  }\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\n    Prism.languages.dhall\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\n\n/** @type {import('../core.js').Syntax} */\nexport default function django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n      variable: /\\b\\w+\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    })\n\n    // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\ndnsZoneFile.displayName = 'dns-zone-file'\ndnsZoneFile.aliases = ['dns-zone']\n\n/** @type {import('../core.js').Syntax} */\nexport default function dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","// @ts-nocheck\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\n\n/** @type {import('../core.js').Syntax} */\nexport default function docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source\n    // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","// @ts-nocheck\ndot.displayName = 'dot'\ndot.aliases = ['gv']\n\n/** @type {import('../core.js').Syntax} */\nexport default function dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source,\n        // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source,\n        // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source,\n        // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","// @ts-nocheck\nebnf.displayName = 'ebnf'\nebnf.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","// @ts-nocheck\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'selector',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'attr-value',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","// @ts-nocheck\neiffel.displayName = 'eiffel'\neiffel.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      },\n      // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      },\n      // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nimport refractorMarkupTemplating from './markup-templating.js'\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\n\n/** @type {import('../core.js').Syntax} */\nexport default function ejs(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","// @ts-nocheck\nelixir.displayName = 'elixir'\nelixir.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","// @ts-nocheck\nelm.displayName = 'elm'\nelm.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern:\n        /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|exposing|import)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","// @ts-nocheck\nimport refractorLua from './lua.js'\nimport refractorMarkupTemplating from './markup-templating.js'\netlua.displayName = 'etlua'\netlua.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nimport refractorRuby from './ruby.js'\nerb.displayName = 'erb'\nerb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function erb(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.erb = {\n      delimiter: {\n        pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      ruby: {\n        pattern: /\\s*\\S[\\s\\S]*/,\n        alias: 'language-ruby',\n        inside: Prism.languages.ruby\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nerlang.displayName = 'erlang'\nerlang.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","// @ts-nocheck\nexcelFormula.displayName = 'excel-formula'\nexcelFormula.aliases = ['xls', 'xlsx']\n\n/** @type {import('../core.js').Syntax} */\nexport default function excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'builtin'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'selector',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'selector'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function fsharp(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n      /\\b0b[01]+(?:uy|y)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      greedy: true,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    }\n  })\n}\n","// @ts-nocheck\nfactor.displayName = 'factor'\nfactor.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        } /* from basis/multiline: */,\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable',\n        // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ]\n      // that's all for now\n    }\n\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@',\n      // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index',\n      // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?',\n      // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative',\n      // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot',\n      // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&',\n      // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence'\n      // tafn\n    ]\n\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","// @ts-nocheck\n$false.displayName = 'false'\n$false.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nfirestoreSecurityRules.displayName = 'firestore-security-rules'\nfirestoreSecurityRules.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function firestoreSecurityRules(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nflow.displayName = 'flow'\nflow.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function flow(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","// @ts-nocheck\nfortran.displayName = 'fortran'\nfortran.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i,\n      // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n      // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n      // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nftl.displayName = 'ftl'\nftl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngml.displayName = 'gml'\ngml.aliases = ['gamemakerlanguage']\n\n/** @type {import('../core.js').Syntax} */\nexport default function gml(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n      constant:\n        /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n      variable:\n        /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    })\n}\n","// @ts-nocheck\ngap.displayName = 'gap'\ngap.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","// @ts-nocheck\ngcode.displayName = 'gcode'\ngcode.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /(\\*)\\d+/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    // T0:0:0\n    punctuation: /[:*]/\n  }\n}\n","// @ts-nocheck\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","// @ts-nocheck\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    record: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'tag'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","// @ts-nocheck\ngettext.displayName = 'gettext'\ngettext.aliases = ['po']\n\n/** @type {import('../core.js').Syntax} */\nexport default function gettext(Prism) {\n  Prism.languages.gettext = {\n    comment: [\n      {\n        pattern: /# .*/,\n        greedy: true,\n        alias: 'translator-comment'\n      },\n      {\n        pattern: /#\\..*/,\n        greedy: true,\n        alias: 'extracted-comment'\n      },\n      {\n        pattern: /#:.*/,\n        greedy: true,\n        alias: 'reference-comment'\n      },\n      {\n        pattern: /#,.*/,\n        greedy: true,\n        alias: 'flag-comment'\n      },\n      {\n        pattern: /#\\|.*/,\n        greedy: true,\n        alias: 'previously-untranslated-comment'\n      },\n      {\n        pattern: /#.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n    number: /\\b\\d+\\b/,\n    punctuation: /[\\[\\]]/\n  }\n  Prism.languages.po = Prism.languages.gettext\n}\n","// @ts-nocheck\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ngit.displayName = 'git'\ngit.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nglsl.displayName = 'glsl'\nglsl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n  })\n}\n","// @ts-nocheck\ngn.displayName = 'gn'\ngn.aliases = ['gni']\n\n/** @type {import('../core.js').Syntax} */\nexport default function gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","// @ts-nocheck\nlinkerScript.displayName = 'linker-script'\nlinkerScript.aliases = ['ld']\n\n/** @type {import('../core.js').Syntax} */\nexport default function linkerScript(Prism) {\n  Prism.languages['linker-script'] = {\n    comment: {\n      pattern: /(^|\\s)\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    identifier: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    'location-counter': {\n      pattern: /\\B\\.\\B/,\n      alias: 'important'\n    },\n    section: {\n      pattern: /(^|[^\\w*])\\.\\w+\\b/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b[A-Z][A-Z_]*(?=\\s*\\()/,\n    number: /\\b(?:0[xX][a-fA-F0-9]+|\\d+)[KM]?\\b/,\n    operator: />>=?|<<=?|->|\\+\\+|--|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?/,\n    punctuation: /[(){},;]/\n  }\n  Prism.languages['ld'] = Prism.languages['linker-script']\n}\n","// @ts-nocheck\ngoModule.displayName = 'go-module'\ngoModule.aliases = ['go-mod']\n\n/** @type {import('../core.js').Syntax} */\nexport default function goModule(Prism) {\n  // https://go.dev/ref/mod#go-mod-file-module\n\n  Prism.languages['go-mod'] = Prism.languages['go-module'] = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    version: {\n      pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    'go-version': {\n      pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    keyword: {\n      pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n      lookbehind: true\n    },\n    operator: /=>/,\n    punctuation: /[()[\\],]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngradle.displayName = 'gradle'\ngradle.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gradle(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null\n        }\n      }\n    }\n    Prism.languages.gradle = Prism.languages.extend('clike', {\n      string: {\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:apply|def|dependencies|else|if|implementation|import|plugin|plugins|project|repositories|repository|sourceSets|tasks|val)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('gradle', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('gradle', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('gradle', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.gradle\n  })(Prism)\n}\n","// @ts-nocheck\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /\\b[A-Z]\\w*Input\\b/,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++]\n\n      // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          }\n\n          // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            }\n\n            // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function groovy(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    }\n\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.groovy\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\ntextile.displayName = 'textile'\ntextile.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function textile(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source\n    // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:C|R|TM)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    }\n\n    // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern =\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i\n\n    // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns\n\n    // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorRuby from './ruby.js'\nhaml.displayName = 'haml'\nhaml.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'symbol'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          ruby: {\n            pattern: /[\\s\\S]+/,\n            inside: Prism.languages.ruby\n          }\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'\n\n    // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'symbol'\n            },\n            text: {\n              pattern: /[\\s\\S]+/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs', 'mustache']\n\n/** @type {import('../core.js').Syntax} */\nexport default function handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:false|true)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n    Prism.languages.mustache = Prism.languages.handlebars\n  })(Prism)\n}\n","// @ts-nocheck\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\n\n/** @type {import('../core.js').Syntax} */\nexport default function haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      },\n      // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function haxe(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    string: {\n      // Strings can be multi-line\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern:\n          /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n        lookbehind: true\n      },\n      // based on naming convention\n      /\\b[A-Z]\\w*/\n    ],\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n      greedy: true\n    },\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n  })\n  Prism.languages.insertBefore('haxe', 'string', {\n    'string-interpolation': {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{?|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.haxe\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n      greedy: true,\n      inside: {\n        'regex-flags': /\\b[a-z]+$/,\n        'regex-source': {\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^~\\/|\\/$/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /@:?[\\w.]+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'important'\n    }\n  })\n}\n","// @ts-nocheck\nhcl.displayName = 'hcl'\nhcl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/,\n      // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","// @ts-nocheck\nhoon.displayName = 'hoon'\nhoon.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","// @ts-nocheck\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","// @ts-nocheck\nhsts.displayName = 'hsts'\nhsts.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","// @ts-nocheck\nuri.displayName = 'uri'\nuri.aliases = ['url']\n\n/** @type {import('../core.js').Syntax} */\nexport default function uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source +\n          // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source +\n          // host\n          ('(?:' +\n            // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' +\n            // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') +\n          // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n","// @ts-nocheck\nhttp.displayName = 'http'\nhttp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    }\n\n    // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    }\n\n    // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    }\n\n    // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' +\n              // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","// @ts-nocheck\nicon.displayName = 'icon'\nicon.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","// @ts-nocheck\nicuMessageFormat.displayName = 'icu-message-format'\nicuMessageFormat.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorHaskell from './haskell.js'\nidris.displayName = 'idris'\nidris.aliases = ['idr']\n\n/** @type {import('../core.js').Syntax} */\nexport default function idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","// @ts-nocheck\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\n\n/** @type {import('../core.js').Syntax} */\nexport default function ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","// @ts-nocheck\ninform7.displayName = 'inform7'\ninform7.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            }\n            // See rest below\n          }\n        }\n      }\n    },\n\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7\n  // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","// @ts-nocheck\nio.displayName = 'io'\nio.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function io(Prism) {\n  Prism.languages.io = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\nj.displayName = 'j'\nj.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function j(Prism) {\n  Prism.languages.j = {\n    comment: {\n      pattern: /\\bNB\\..*/,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","// @ts-nocheck\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJava from './java.js'\nscala.displayName = 'scala'\nscala.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|derives|do|else|enum|extends|extension|final|finally|for|forSome|given|if|implicit|import|infix|inline|lazy|match|new|null|object|opaque|open|override|package|private|protected|return|sealed|self|super|this|throw|trait|transparent|try|type|using|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern:\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n  delete Prism.languages.scala['constant']\n}\n","// @ts-nocheck\nimport refractorJava from './java.js'\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorMarkup from './markup.js'\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","// @ts-nocheck\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern:\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+$/,\n            namespace: /\\b[a-z]\\w*\\b/,\n            punctuation: /\\./\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\b\\d+\\b/,\n                alias: 'number'\n              }\n            }\n          },\n          // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Native Method|Unknown Source)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","// @ts-nocheck\njexl.displayName = 'jexl'\njexl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njolie.displayName = 'jolie'\njolie.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jolie(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n    punctuation: /[()[\\]{},;.:]/,\n    builtin:\n      /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n  })\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        keyword: /\\bwith\\b/,\n        'class-name': /\\w+/,\n        punctuation: /,/\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /,/,\n        'class-name': /\\w+/,\n        operator: /=>/\n      }\n    },\n    property: {\n      pattern:\n        /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n    }\n  })\n}\n","// @ts-nocheck\njq.displayName = 'jq'\njq.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\njsTemplates.displayName = 'js-templates'\njsTemplates.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsTemplates(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string']\n\n    // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ),\n      // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n      // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source),\n      // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:markdown|md)/.source),\n      // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ),\n      // sql`...`\n      createTemplate('sql', /\\bsql/.source),\n      // vanilla template string\n      templateString\n    ].filter(Boolean)\n\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      })\n\n      // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('')\n\n      // 2. Tokenize the embedded code\n\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language)\n\n      // 3. Re-insert the interpolation\n\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */ token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorJavascript from './javascript.js'\nimport refractorTypescript from './typescript.js'\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorJavascript)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\n\n/** @type {import('../core.js').Syntax} */\nexport default function n4js(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\njsExtras.displayName = 'js-extras'\njsExtras.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsExtras(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    })\n\n    // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token]\n\n      // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      }\n\n      // keep in mind that we don't support arrays\n\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJson from './json.js'\njson5.displayName = 'json5'\njson5.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJson from './json.js'\njsonp.displayName = 'jsonp'\njsonp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","// @ts-nocheck\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","// @ts-nocheck\njulia.displayName = 'julia'\njulia.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      greedy: true\n    },\n    char: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","// @ts-nocheck\nkeepalived.displayName = 'keepalived'\nkeepalived.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function keepalived(Prism) {\n  Prism.languages.keepalived = {\n    comment: {\n      pattern: /[#!].*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n      lookbehind: true,\n      greedy: true\n    },\n    // support IPv4, IPv6, subnet mask\n    ip: {\n      pattern: RegExp(\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\n          /<ipv4>/g,\n          function () {\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\n              .source\n          }\n        ),\n        'i'\n      ),\n      alias: 'number'\n    },\n    // support *nix / Windows, directory / file\n    path: {\n      pattern:\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    variable: /\\$\\{?\\w+\\}?/,\n    email: {\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n      alias: 'string'\n    },\n    'conditional-configuration': {\n      pattern: /@\\^?[\\w-]+/,\n      alias: 'variable'\n    },\n    operator: /=/,\n    property:\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n    constant:\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n    number: {\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n    punctuation: /[\\{\\}]/\n  }\n}\n","// @ts-nocheck\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern:\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n    },\n\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n    },\n\n    'header-statement': {\n      pattern:\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n    },\n\n    'rule-keyword': {\n      pattern:\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern:\n        /\\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  }\n}\n","// @ts-nocheck\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\n\n/** @type {import('../core.js').Syntax} */\nexport default function kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","// @ts-nocheck\nkusto.displayName = 'kusto'\nkusto.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","// @ts-nocheck\nlatex.displayName = 'latex'\nlatex.aliases = ['context', 'tex']\n\n/** @type {import('../core.js').Syntax} */\nexport default function latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nimport refractorMarkupTemplating from './markup-templating.js'\nimport refractorPhp from './php.js'\nlatte.displayName = 'latte'\nlatte.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function latte(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      'latte-tag': {\n        // https://latte.nette.org/en/tags\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n        lookbehind: true,\n        alias: 'important'\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        alias: 'punctuation'\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nscheme.displayName = 'scheme'\nscheme.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function scheme(Prism) {\n  ;(function (Prism) {\n    Prism.languages.scheme = {\n      // this supports \"normal\" single-line comments:\n      //   ; comment\n      // and (potentially nested) multiline comments:\n      //   #| comment #| nested |# still comment |#\n      // (only 1 level of nesting is supported)\n      comment:\n        /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      symbol: {\n        pattern: /'[^()\\[\\]#'\\s]+/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n        greedy: true\n      },\n      'lambda-parameter': [\n        // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n        {\n          pattern:\n            /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n          lookbehind: true\n        },\n        {\n          pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n          lookbehind: true\n        }\n      ],\n      keyword: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      builtin: {\n        // all functions of the base library of R7RS plus some of built-ins of R5Rs\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      number: {\n        // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n        //\n        // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n        // <num R>       := <prefix R><complex R>\n        // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n        // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n        // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n        // <ureal R>     := <uint R>(?:\\/<uint R>)?\n        //                | <decimal R>\n        //\n        // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n        // <uint R>      := <digit R>+\n        // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n        // <radix 2>     := #b\n        // <radix 8>     := #o\n        // <radix 10>    := (?:#d)?\n        // <radix 16>    := #x\n        // <digit 2>     := [01]\n        // <digit 8>     := [0-7]\n        // <digit 10>    := \\d\n        // <digit 16>    := [0-9a-f]\n        //\n        // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n        // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n        // pattern:\n        pattern: RegExp(\n          SortedBNF({\n            '<ureal dec>':\n              /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\n            '<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n            '<complex dec>':\n              /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/\n                .source,\n            '<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n            '<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n            '<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n            '<complex box>':\n              /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/\n                .source,\n            '<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/\n              .source,\n            '<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/\n              .source\n          }),\n          'i'\n        ),\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      function: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      identifier: {\n        pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      punctuation: /[()\\[\\]']/\n    }\n\n    /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */\n    function SortedBNF(grammar) {\n      for (var key in grammar) {\n        grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\n          return '(?:' + grammar[key].trim() + ')'\n        })\n      }\n      // return the last item\n      return grammar[key]\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorScheme from './scheme.js'\nlilypond.displayName = 'lilypond'\nlilypond.aliases = ['ly']\n\n/** @type {import('../core.js').Syntax} */\nexport default function lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source\n    // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nliquid.displayName = 'liquid'\nliquid.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:false|nil|true)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","// @ts-nocheck\nlisp.displayName = 'lisp'\nlisp.aliases = ['elisp', 'emacs', 'emacs-lisp']\n\n/** @type {import('../core.js').Syntax} */\nexport default function lisp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function simple_form(name) {\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\n    }\n    /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function primitive(pattern) {\n      return RegExp(\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\n      )\n    }\n\n    // Patterns in regular expressions\n\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source\n    // symbol starting with & used in function arguments\n    var marker = '&' + symbol\n    // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))'\n    // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var nestedPar =\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\n        .source\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form(/declare/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form(/interactive/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive(/nil|t/.source),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\n            symbol +\n            /\\s+\\(/.source +\n            nestedPar +\n            /\\)/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/,\n        // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      varform: {\n        pattern: RegExp(\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\n        ),\n        inside: language\n      },\n      argument: {\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\n        lookbehind: true,\n        alias: 'variable'\n      },\n      rest: language\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + nestedPar + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","// @ts-nocheck\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            }\n            // See rest below\n          }\n        },\n\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      },\n      // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","// @ts-nocheck\nllvm.displayName = 'llvm'\nllvm.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:false|true)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nlog.displayName = 'log'\nlog.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","// @ts-nocheck\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","// @ts-nocheck\nmagma.displayName = 'magma'\nmagma.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","// @ts-nocheck\nmata.displayName = 'mata'\nmata.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mata(Prism) {\n  // https://www.stata.com/manuals/m.pdf\n\n  ;(function (Prism) {\n    var orgType = /\\b(?:(?:col|row)?vector|matrix|scalar)\\b/.source\n    var type =\n      /\\bvoid\\b|<org>|\\b(?:complex|numeric|pointer(?:\\s*\\([^()]*\\))?|real|string|(?:class|struct)\\s+\\w+|transmorphic)(?:\\s*<org>)?/.source.replace(\n        /<org>/g,\n        orgType\n      )\n    Prism.languages.mata = {\n      comment: {\n        pattern:\n          /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\b(?:class|extends|struct)\\s+)\\w+(?=\\s*(?:\\{|\\bextends\\b))/,\n        lookbehind: true\n      },\n      type: {\n        pattern: RegExp(type),\n        alias: 'class-name',\n        inside: {\n          punctuation: /[()]/,\n          keyword: /\\b(?:class|function|struct|void)\\b/\n        }\n      },\n      keyword:\n        /\\b(?:break|class|continue|do|else|end|extends|external|final|for|function|goto|if|pragma|private|protected|public|return|static|struct|unset|unused|version|virtual|while)\\b/,\n      constant: /\\bNULL\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w.])(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|\\d[a-f0-9]*(?:\\.[a-f0-9]+)?x[+-]?\\d+)i?(?![\\w.])/i,\n        lookbehind: true\n      },\n      missing: {\n        pattern: /(^|[^\\w.])(?:\\.[a-z]?)(?![\\w.])/,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      operator: /\\.\\.|\\+\\+|--|&&|\\|\\||:?(?:[!=<>]=|[+\\-*/^<>&|:])|[!?=\\\\#’`']/,\n      punctuation: /[()[\\]{},;.]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","// @ts-nocheck\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function maxscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp(\n          '((?:' +\n            // start of line\n            (/^/.source +\n              '|' +\n              // operators and other language constructs\n              /[;=<>+\\-*/^({\\[]/.source +\n              '|' +\n              // keywords as part of statements\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\n                .source) +\n            ')[ \\t]*)' +\n            '(?!' +\n            keywords.source +\n            ')' +\n            /[a-z_]\\w*\\b/.source +\n            '(?=[ \\t]*(?:' +\n            // variable\n            ('(?!' +\n              keywords.source +\n              ')' +\n              /[a-z_]/.source +\n              '|' +\n              // number\n              /\\d|-\\.?\\d/.source +\n              '|' +\n              // other expressions or literals\n              /[({'\"$@#?]/.source) +\n            '))',\n          'im'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern:\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [\n        {\n          pattern:\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n          lookbehind: true\n        },\n        /\\b(?:e|pi)\\b/\n      ],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nmel.displayName = 'mel'\nmel.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mel(Prism) {\n  Prism.languages.mel = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        statement: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function: {\n      pattern:\n        /((?:^|[{;])[ \\t]*)[a-z_]\\w*\\b(?!\\s*(?:\\.(?!\\.)|[[{=]))|\\b[a-z_]\\w*(?=[ \\t]*\\()/im,\n      lookbehind: true,\n      greedy: true\n    },\n    'tensor-punctuation': {\n      pattern: /<<|>>/,\n      alias: 'punctuation'\n    },\n    operator: /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=?|[*\\/!=]=?|[%^]/,\n    punctuation: /[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside['statement'].inside = Prism.languages.mel\n}\n","// @ts-nocheck\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","// @ts-nocheck\nmetafont.displayName = 'metafont'\nmetafont.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function metafont(Prism) {\n  Prism.languages.metafont = {\n    // Syntax of METAFONT with the added (public) elements of PlainMETAFONT. Except for internal quantities they are expected to be rarely redefined. Freely inspired by the syntax of Christophe Grandsire for the Crimson Editor.\n    comment: {\n      pattern: /%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"/,\n      greedy: true\n    },\n    number: /\\d*\\.?\\d+/,\n    boolean: /\\b(?:false|true)\\b/,\n    punctuation: [\n      /[,;()]/,\n      {\n        pattern: /(^|[^{}])(?:\\{|\\})(?![{}])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^[])\\[(?!\\[)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\]])\\](?!\\])/,\n        lookbehind: true\n      }\n    ],\n    constant: [\n      {\n        pattern: /(^|[^!?])\\?\\?\\?(?![!?])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^/*\\\\])(?:\\\\|\\\\\\\\)(?![/*\\\\])/,\n        lookbehind: true\n      },\n      /\\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\\b/\n    ],\n    quantity: {\n      pattern:\n        /\\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\\b/,\n      alias: 'keyword'\n    },\n    command: {\n      pattern:\n        /\\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\\b/,\n      alias: 'builtin'\n    },\n    operator: [\n      {\n        pattern:\n          /(^|[^>=<:|])(?:<|<=|=|=:|\\|=:|\\|=:>|=:\\|>|=:\\||\\|=:\\||\\|=:\\|>|\\|=:\\|>>|>|>=|:|:=|<>|::|\\|\\|:)(?![>=<:|])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^+-])(?:\\+|\\+\\+|-{1,3}|\\+-\\+)(?![+-])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^/*\\\\])(?:\\*|\\*\\*|\\/)(?![/*\\\\])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^.])(?:\\.{2,3})(?!\\.)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^@#&$])&(?![@#&$])/,\n        lookbehind: true\n      },\n      /\\b(?:and|not|or)\\b/\n    ],\n    macro: {\n      pattern:\n        /\\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\\.(?:bot|lft|rt|top)(?:\\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\\b/,\n      alias: 'function'\n    },\n    builtin:\n      /\\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\\b/,\n    keyword:\n      /\\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\\b/,\n    type: {\n      pattern:\n        /\\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\\b/,\n      alias: 'property'\n    },\n    variable: {\n      pattern:\n        /(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\\b/,\n      lookbehind: true\n    }\n  }\n}\n","// @ts-nocheck\nmizar.displayName = 'mizar'\nmizar.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mongodb(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice',\n      // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit',\n      // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind',\n      '$setWindowFields',\n      // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip',\n      '$count',\n      '$dateAdd',\n      '$dateDiff',\n      '$dateSubtract',\n      '$dateTrunc',\n      '$getField',\n      '$rand',\n      '$sampleRate',\n      '$setField',\n      '$unsetField',\n      // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function monkey(Prism) {\n  Prism.languages.monkey = {\n    comment: {\n      pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /\\b[?%#$]/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","// @ts-nocheck\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\n\n/** @type {import('../core.js').Syntax} */\nexport default function moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","// @ts-nocheck\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function n1ql(Prism) {\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n\n  Prism.languages.n1ql = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    parameter: /\\$[\\w.]+/,\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n    keyword:\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","// @ts-nocheck\nnand2tetrisHdl.displayName = 'nand2tetris-hdl'\nnand2tetrisHdl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","// @ts-nocheck\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = ['nani']\n\n/** @type {import('../core.js').Syntax} */\nexport default function naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nnasm.displayName = 'nasm'\nnasm.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|DEFAULT|FLOAT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","// @ts-nocheck\nneon.displayName = 'neon'\nneon.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n","// @ts-nocheck\nnevod.displayName = 'nevod'\nnevod.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","// @ts-nocheck\nnginx.displayName = 'nginx'\nnginx.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nnim.displayName = 'nim'\nnim.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function nim(Prism) {\n  Prism.languages.nim = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      pattern:\n        /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n      greedy: true\n    },\n    char: {\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators (and anything really) inside backticks\n    identifier: {\n      pattern: /`[^`\\r\\n]+`/,\n      greedy: true,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number:\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword:\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern:\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","// @ts-nocheck\nnix.displayName = 'nix'\nnix.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function nix(Prism) {\n  Prism.languages.nix = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: null // see below\n        }\n      }\n    },\n\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern:\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'important'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function:\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix\n}\n","// @ts-nocheck\nnsis.displayName = 'nsis'\nnsis.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|KnownFolderPath|LabelAddress|TempFileName|WinVer)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|RtlLanguage|ShellVarContextAll|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Target|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n      lookbehind: true\n    },\n    property:\n      /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n    constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n    variable: /\\$\\w[\\w\\.]*/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern:\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","// @ts-nocheck\nocaml.displayName = 'ocaml'\nocaml.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ocaml(Prism) {\n  // https://ocaml.org/manual/lex.html\n\n  Prism.languages.ocaml = {\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      {\n        pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n        greedy: true\n      }\n    ],\n    number: [\n      // binary and octal\n      /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i,\n      // hexadecimal\n      /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i,\n      // decimal\n      /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n    ],\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'property'\n    },\n    label: {\n      pattern: /\\B~\\w+/,\n      alias: 'property'\n    },\n    'type-variable': {\n      pattern: /\\B'\\w+/,\n      alias: 'function'\n    },\n    variant: {\n      pattern: /`\\w+/,\n      alias: 'symbol'\n    },\n    // For the list of keywords and operators,\n    // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n    keyword:\n      /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'operator-like-punctuation': {\n      pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n      alias: 'punctuation'\n    },\n    // Custom operators are allowed\n    operator:\n      /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n    punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n  }\n}\n","// @ts-nocheck\nodin.displayName = 'odin'\nodin.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function odin(Prism) {\n  ;(function (Prism) {\n    var escapes =\n      /\\\\(?:[\"'\\\\abefnrtv]|0[0-7]{2}|U[\\dA-Fa-f]{6}|u[\\dA-Fa-f]{4}|x[\\dA-Fa-f]{2})/\n    Prism.languages.odin = {\n      /**\n       * The current implementation supports only 1 level of nesting.\n       *\n       * @author Michael Schmidt\n       * @author edukisto\n       */\n      comment: [\n        {\n          pattern:\n            /\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:\\*(?!\\/)|[^*])*(?:\\*\\/|$))*(?:\\*\\/|$)/,\n          greedy: true\n        },\n        {\n          pattern: /#![^\\n\\r]*/,\n          greedy: true\n        },\n        {\n          pattern: /\\/\\/[^\\n\\r]*/,\n          greedy: true\n        }\n      ],\n      /**\n       * Should be found before strings because of '\"'\"- and '`'`-like sequences.\n       */\n      char: {\n        pattern: /'(?:\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\n\\r'\\\\])'/,\n        greedy: true,\n        inside: {\n          symbol: escapes\n        }\n      },\n      string: [\n        {\n          pattern: /`[^`]*`/,\n          greedy: true\n        },\n        {\n          pattern: /\"(?:\\\\.|[^\\n\\r\"\\\\])*\"/,\n          greedy: true,\n          inside: {\n            symbol: escapes\n          }\n        }\n      ],\n      directive: {\n        pattern: /#\\w+/,\n        alias: 'property'\n      },\n      number:\n        /\\b0(?:b[01_]+|d[\\d_]+|h_*(?:(?:(?:[\\dA-Fa-f]_*){8}){1,2}|(?:[\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\dA-F_a-f]+|z[\\dAB_ab]+)\\b|(?:\\b\\d+(?:\\.(?!\\.)\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d*)?[ijk]?(?!\\w)/,\n      discard: {\n        pattern: /\\b_\\b/,\n        alias: 'keyword'\n      },\n      'procedure-definition': {\n        pattern: /\\b\\w+(?=[ \\t]*(?::\\s*){2}proc\\b)/,\n        alias: 'function'\n      },\n      keyword:\n        /\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\b/,\n      /**\n       * false, nil, true can be used as procedure names. \"_\" and keywords can't.\n       */\n      'procedure-name': {\n        pattern: /\\b\\w+(?=[ \\t]*\\()/,\n        alias: 'function'\n      },\n      boolean: /\\b(?:false|nil|true)\\b/,\n      'constant-parameter-sign': {\n        pattern: /\\$/,\n        alias: 'important'\n      },\n      undefined: {\n        pattern: /---/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /->/,\n        alias: 'punctuation'\n      },\n      operator: /\\+\\+|--|\\.\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,\n      punctuation: /[(),.:;@\\[\\]{}]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nopencl.displayName = 'opencl'\nopencl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function opencl(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword:\n        /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n      // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n      number:\n        /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n      boolean: /\\b(?:false|true)\\b/,\n      'constant-opencl-kernel': {\n        pattern:\n          /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\n        alias: 'constant'\n      }\n    })\n    Prism.languages.insertBefore('opencl', 'class-name', {\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n      'builtin-type': {\n        pattern:\n          /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n        alias: 'keyword'\n      }\n    })\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern:\n          /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern:\n          /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern:\n          /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n    }\n\n    /* OpenCL host API */\n    Prism.languages.insertBefore('c', 'keyword', attributes)\n\n    // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n    if (Prism.languages.cpp) {\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-cpp'] = {\n        pattern:\n          /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\n        alias: 'keyword'\n      }\n      Prism.languages.insertBefore('cpp', 'keyword', attributes)\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nopenqasm.displayName = 'openqasm'\nopenqasm.aliases = ['qasm']\n\n/** @type {import('../core.js').Syntax} */\nexport default function openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n    'class-name':\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern:\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  }\n  Prism.languages.qasm = Prism.languages.openqasm\n}\n","// @ts-nocheck\noz.displayName = 'oz'\noz.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function oz(Prism) {\n  Prism.languages.oz = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n        lookbehind: true\n      }\n    ],\n    number:\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=[ \\t]*:(?![:=]))/,\n    operator:\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n","// @ts-nocheck\nparigp.displayName = 'parigp'\nparigp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nparser.displayName = 'parser'\nparser.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function parser(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern:\n          /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    }))\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: parser.keyword,\n          variable: parser.variable,\n          function: parser.function,\n          boolean: /\\b(?:false|true)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n          escape: parser.escape,\n          operator:\n            /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: parser.punctuation\n        }\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        expression: parser.expression,\n        keyword: parser.keyword,\n        variable: parser.variable,\n        function: parser.function,\n        escape: parser.escape,\n        'parser-punctuation': {\n          pattern: parser.punctuation,\n          alias: 'punctuation'\n        }\n      },\n      parser['tag'].inside['attr-value']\n    )\n  })(Prism)\n}\n","// @ts-nocheck\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\n\n/** @type {import('../core.js').Syntax} */\nexport default function pascal(Prism) {\n  // Based on Free Pascal\n\n  /* TODO\nSupport inline asm ?\n*/\n\n  Prism.languages.pascal = {\n    directive: {\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\n      greedy: true,\n      alias: ['marco', 'property']\n    },\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    asm: {\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern:\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern:\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern:\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n      // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n      {\n        pattern:\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n    asm: undefined,\n    keyword: undefined,\n    operator: undefined\n  })\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n","// @ts-nocheck\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i,\n        // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n","// @ts-nocheck\npsl.displayName = 'psl'\npsl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function psl(Prism) {\n  Prism.languages.psl = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        symbol: /\\\\[ntrbA-Z\"\\\\]/\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n      alias: 'string',\n      greedy: true\n    },\n    keyword:\n      /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n    constant:\n      /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\n    boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\n    variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\n    builtin: {\n      pattern:\n        /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\n      alias: 'builtin-function'\n    },\n    'foreach-variable': {\n      pattern:\n        /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n      lookbehind: true,\n      greedy: true\n    },\n    function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\n    number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n    punctuation: /[(){}\\[\\];,]/\n  }\n}\n","// @ts-nocheck\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\n\n/** @type {import('../core.js').Syntax} */\nexport default function pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern:\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern:\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /NO|YES/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n","// @ts-nocheck\npeoplecode.displayName = 'peoplecode'\npeoplecode.aliases = ['pcode']\n\n/** @type {import('../core.js').Syntax} */\nexport default function peoplecode(Prism) {\n  Prism.languages.peoplecode = {\n    comment: RegExp(\n      [\n        // C-style multiline comments\n        /\\/\\*[\\s\\S]*?\\*\\//.source,\n        // REM comments\n        /\\bREM[^;]*;/.source,\n        // Nested <* *> comments\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source,\n        // /+ +/ comments\n        /\\/\\+[\\s\\S]*?\\+\\//.source\n      ].join('|')\n    ),\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    variable: /%\\w+/,\n    'function-definition': {\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'class-name': {\n      pattern:\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /:/\n      }\n    },\n    keyword:\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n    'operator-keyword': {\n      pattern: /\\b(?:and|not|or)\\b/i,\n      alias: 'operator'\n    },\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n    punctuation: /[:.;,()[\\]]/\n  }\n  Prism.languages.pcode = Prism.languages.peoplecode\n}\n","// @ts-nocheck\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorPhp from './php.js'\nphpdoc.displayName = 'phpdoc'\nphpdoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function phpdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source\n    Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        pattern: RegExp(\n          '(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' +\n            typeExpression +\n            '\\\\s+)?)\\\\$\\\\w+'\n        ),\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('phpdoc', 'keyword', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            '(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' +\n              typeExpression\n          ),\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\n            punctuation: /[|\\\\[\\]()]/\n          }\n        }\n      ]\n    })\n    Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc)\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorPhp from './php.js'\nphpExtras.displayName = 'php-extras'\nphpExtras.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function phpExtras(Prism) {\n  Prism.register(refractorPhp)\n  Prism.languages.insertBefore('php', 'variable', {\n    this: {\n      pattern: /\\$this\\b/,\n      alias: 'keyword'\n    },\n    global:\n      /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /\\b(?:parent|self|static)\\b/,\n        punctuation: /::|\\\\/\n      }\n    }\n  })\n}\n","// @ts-nocheck\nplantUml.displayName = 'plant-uml'\nplantUml.aliases = ['plantuml']\n\n/** @type {import('../core.js').Syntax} */\nexport default function plantUml(Prism) {\n  ;(function (Prism) {\n    var variable = /\\$\\w+|%[a-z]+%/\n    var arrowAttr = /\\[[^[\\]]*\\]/.source\n    var arrowDirection = /(?:[drlu]|do|down|le|left|ri|right|up)/.source\n    var arrowBody =\n      '(?:-+' +\n      arrowDirection +\n      '-+|\\\\.+' +\n      arrowDirection +\n      '\\\\.+|-+(?:' +\n      arrowAttr +\n      '-*)?|' +\n      arrowAttr +\n      '-+|\\\\.+(?:' +\n      arrowAttr +\n      '\\\\.*)?|' +\n      arrowAttr +\n      '\\\\.+)'\n    var arrowLeft = /(?:<{1,2}|\\/{1,2}|\\\\{1,2}|<\\||[#*^+}xo])/.source\n    var arrowRight = /(?:>{1,2}|\\/{1,2}|\\\\{1,2}|\\|>|[#*^+{xo])/.source\n    var arrowPrefix = /[[?]?[ox]?/.source\n    var arrowSuffix = /[ox]?[\\]?]?/.source\n    var arrow =\n      arrowPrefix +\n      '(?:' +\n      arrowBody +\n      arrowRight +\n      '|' +\n      arrowLeft +\n      arrowBody +\n      '(?:' +\n      arrowRight +\n      ')?' +\n      ')' +\n      arrowSuffix\n    Prism.languages['plant-uml'] = {\n      comment: {\n        pattern: /(^[ \\t]*)(?:'.*|\\/'[\\s\\S]*?'\\/)/m,\n        lookbehind: true,\n        greedy: true\n      },\n      preprocessor: {\n        pattern: /(^[ \\t]*)!.*/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'property',\n        inside: {\n          variable: variable\n        }\n      },\n      delimiter: {\n        pattern: /(^[ \\t]*)@(?:end|start)uml\\b/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      arrow: {\n        pattern: RegExp(\n          /(^|[^-.<>?|\\\\[\\]ox])/.source + arrow + /(?![-.<>?|\\\\\\]ox])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'operator',\n        inside: {\n          expression: {\n            pattern: /(\\[)[^[\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: null // see below\n          },\n\n          punctuation: /\\[(?=$|\\])|^\\]/\n        }\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      text: {\n        pattern: /(\\[[ \\t]*[\\r\\n]+(?![\\r\\n]))[^\\]]*(?=\\])/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string'\n      },\n      keyword: [\n        {\n          pattern:\n            /^([ \\t]*)(?:abstract\\s+class|end\\s+(?:box|fork|group|merge|note|ref|split|title)|(?:fork|split)(?:\\s+again)?|activate|actor|agent|alt|annotation|artifact|autoactivate|autonumber|backward|binary|boundary|box|break|caption|card|case|circle|class|clock|cloud|collections|component|concise|control|create|critical|database|deactivate|destroy|detach|diamond|else|elseif|end|end[hr]note|endif|endswitch|endwhile|entity|enum|file|folder|footer|frame|group|[hr]?note|header|hexagon|hide|if|interface|label|legend|loop|map|namespace|network|newpage|node|nwdiag|object|opt|package|page|par|participant|person|queue|rectangle|ref|remove|repeat|restore|return|robust|scale|set|show|skinparam|stack|start|state|stop|storage|switch|title|together|usecase|usecase\\/|while)(?=\\s|$)/m,\n          lookbehind: true,\n          greedy: true\n        },\n        /\\b(?:elseif|equals|not|while)(?=\\s*\\()/,\n        /\\b(?:as|is|then)\\b/\n      ],\n      divider: {\n        pattern: /^==.+==$/m,\n        greedy: true,\n        alias: 'important'\n      },\n      time: {\n        pattern: /@(?:\\d+(?:[:/]\\d+){2}|[+-]?\\d+|:[a-z]\\w*(?:[+-]\\d+)?)\\b/i,\n        greedy: true,\n        alias: 'number'\n      },\n      color: {\n        pattern: /#(?:[a-z_]+|[a-fA-F0-9]+)\\b/,\n        alias: 'symbol'\n      },\n      variable: variable,\n      punctuation: /[:,;()[\\]{}]|\\.{3}/\n    }\n    Prism.languages['plant-uml'].arrow.inside.expression.inside =\n      Prism.languages['plant-uml']\n    Prism.languages['plantuml'] = Prism.languages['plant-uml']\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorSql from './sql.js'\nplsql.displayName = 'plsql'\nplsql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function plsql(Prism) {\n  Prism.register(refractorSql)\n  Prism.languages.plsql = Prism.languages.extend('sql', {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\n      greedy: true\n    },\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\n    keyword:\n      /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\n    operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\n  })\n  Prism.languages.insertBefore('plsql', 'operator', {\n    label: {\n      pattern: /<<\\s*\\w+\\s*>>/,\n      alias: 'symbol'\n    }\n  })\n}\n","// @ts-nocheck\npowerquery.displayName = 'powerquery'\npowerquery.aliases = ['mscript', 'pq']\n\n/** @type {import('../core.js').Syntax} */\nexport default function powerquery(Prism) {\n  // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n\n  Prism.languages.powerquery = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'quoted-identifier': {\n      pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    constant: [\n      /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\n      /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n      /\\bOccurrence\\.(?:All|First|Last)\\b/,\n      /\\bOrder\\.(?:Ascending|Descending)\\b/,\n      /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n      /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n      /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n      /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\n      /\\bGroupKind\\.(?:Global|Local)\\b/,\n      /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\n      /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\n      /\\bJoinSide\\.(?:Left|Right)\\b/,\n      /\\bPrecision\\.(?:Decimal|Double)\\b/,\n      /\\bRelativePosition\\.From(?:End|Start)\\b/,\n      /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\n      /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n      /\\bnull\\b/\n    ],\n    boolean: /\\b(?:false|true)\\b/,\n    keyword:\n      /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n    function: {\n      pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    'data-type': {\n      pattern:\n        /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n      lookbehind: true\n    },\n    operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n    punctuation: /[,;\\[\\](){}]/\n  }\n  Prism.languages.pq = Prism.languages['powerquery']\n  Prism.languages.mscript = Prism.languages['powerquery']\n}\n","// @ts-nocheck\npowershell.displayName = 'powershell'\npowershell.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function powershell(Prism) {\n  ;(function (Prism) {\n    var powershell = (Prism.languages.powershell = {\n      comment: [\n        {\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^`])#.*/,\n          lookbehind: true\n        }\n      ],\n      string: [\n        {\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern: /'(?:[^']|'')*'/,\n          greedy: true\n        }\n      ],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n      boolean: /\\$(?:false|true)\\b/i,\n      variable: /\\$\\w+\\b/,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n      ],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword:\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern:\n          /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n    })\n\n    // Variable interpolation inside strings, and nested expressions\n    powershell.string[0].inside = {\n      function: {\n        // Allow for one level of nesting\n        pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n        lookbehind: true,\n        inside: powershell\n      },\n      boolean: powershell.boolean,\n      variable: powershell.variable\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nprocessing.displayName = 'processing'\nprocessing.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function processing(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  })\n}\n","// @ts-nocheck\nprolog.displayName = 'prolog'\nprolog.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+(?:\\.\\d*)?/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n","// @ts-nocheck\npromql.displayName = 'promql'\npromql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function promql(Prism) {\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n\n  ;(function (Prism) {\n    // PromQL Aggregation Operators\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n    var aggregations = [\n      'sum',\n      'min',\n      'max',\n      'avg',\n      'group',\n      'stddev',\n      'stdvar',\n      'count',\n      'count_values',\n      'bottomk',\n      'topk',\n      'quantile'\n    ]\n\n    // PromQL vector matching + the by and without clauses\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n    var vectorMatching = [\n      'on',\n      'ignoring',\n      'group_right',\n      'group_left',\n      'by',\n      'without'\n    ]\n\n    // PromQL offset modifier\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n    var offsetModifier = ['offset']\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\n    Prism.languages.promql = {\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      'vector-match': {\n        // Match the comma-separated label lists inside vector matching:\n        pattern: new RegExp(\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          'label-key': {\n            pattern: /\\b[^,]+\\b/,\n            alias: 'attr-name'\n          },\n          punctuation: /[(),]/\n        }\n      },\n      'context-labels': {\n        pattern: /\\{[^{}]*\\}/,\n        inside: {\n          'label-key': {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n            alias: 'attr-name'\n          },\n          'label-value': {\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\{|\\}|=~?|![=~]|,/\n        }\n      },\n      'context-range': [\n        {\n          pattern: /\\[[\\w\\s:]+\\]/,\n          // [1m]\n          inside: {\n            punctuation: /\\[|\\]|:/,\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        },\n        {\n          pattern: /(\\boffset\\s+)\\w+/,\n          // offset 1m\n          lookbehind: true,\n          inside: {\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        }\n      ],\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      number:\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n      punctuation: /[{};()`,.[\\]]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nproperties.displayName = 'properties'\nproperties.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    value: {\n      pattern:\n        /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    key: {\n      pattern: /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n      alias: 'attr-name'\n    },\n    punctuation: /[=:]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function protobuf(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var builtinTypes =\n      /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n          lookbehind: true\n        }\n      ],\n      keyword:\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    })\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nstylus.displayName = 'stylus'\nstylus.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function stylus(Prism) {\n  ;(function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    }\n    // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern:\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern:\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\ntwig.displayName = 'twig'\ntwig.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function twig(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.twig = {\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      }\n    },\n    keyword: /\\b(?:even|if|odd)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'twig') {\n      return\n    }\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern)\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig')\n  })\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nimport refractorMarkup from './markup.js'\npug.displayName = 'pug'\npug.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function pug(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern:\n          /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          text: /\\S[\\s\\S]*/\n        }\n      },\n      'multiline-plain-text': {\n        pattern:\n          /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern:\n          /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        },\n        // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      'plain-text': {\n        pattern:\n          /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: Prism.languages.javascript\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }\n          ],\n          punctuation: /:/,\n          'attr-id': /#[\\w\\-]+/,\n          'attr-class': /\\.[\\w\\-]+/\n        }\n      },\n      code: [\n        {\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: Prism.languages.javascript\n        }\n      ],\n      punctuation: /[.\\-!=|]+/\n    }\n    var filter_pattern =\n      /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/\n        .source\n\n    // Non exhaustive list of available filters and associated languages\n    var filters = [\n      {\n        filter: 'atpl',\n        language: 'twig'\n      },\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'ejs',\n      'handlebars',\n      'less',\n      'livescript',\n      'markdown',\n      {\n        filter: 'sass',\n        language: 'scss'\n      },\n      'stylus'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('<filter_name>', function () {\n              return filter.filter\n            }),\n            'm'\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            text: {\n              pattern: /\\S[\\s\\S]*/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\n  })(Prism)\n}\n","// @ts-nocheck\npuppet.displayName = 'puppet'\npuppet.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function puppet(Prism) {\n  ;(function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern:\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n            // See interpolation below\n          }\n        },\n        // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern:\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        },\n        // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern:\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern:\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:false|true)\\b/,\n      // Includes words reserved for future use\n      keyword:\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern:\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator:\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern:\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n","// @ts-nocheck\npure.displayName = 'pure'\npure.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function pure(Prism) {\n  ;(function (Prism) {\n    // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n\n    Prism.languages.pure = {\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        },\n        /#!.+/\n      ],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern:\n          /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function:\n        /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      // eslint-disable-next-line no-misleading-character-class\n      operator:\n        /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    }\n    var inlineLanguages = [\n      'c',\n      {\n        lang: 'c++',\n        alias: 'cpp'\n      },\n      'fortran'\n    ]\n    var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source\n    inlineLanguages.forEach(function (lang) {\n      var alias = lang\n      if (typeof lang !== 'string') {\n        alias = lang.alias\n        lang = lang.lang\n      }\n      if (Prism.languages[alias]) {\n        var o = {}\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(\n            inlineLanguageRe.replace(\n              '<lang>',\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\n            ),\n            'i'\n          ),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        }\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\n          Prism.languages[alias]\n        )\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\n      }\n    })\n\n    // C is the default inline language\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\n        Prism.languages.c\n      )\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\npurebasic.displayName = 'purebasic'\npurebasic.aliases = ['pbfasm']\n\n/** @type {import('../core.js').Syntax} */\nexport default function purebasic(Prism) {\n  Prism.register(refractorClike)\n  /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n\n  // PureBasic support, steal stuff from ansi-c\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword:\n      /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n    operator:\n      /(?:@\\*?|\\?|\\*)\\w+\\$?|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  })\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+\\$?/,\n    asm: {\n      pattern: /(^[\\t ]*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n          /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n        ],\n        function: {\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        register:\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n        number:\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  })\n  delete Prism.languages.purebasic['class-name']\n  delete Prism.languages.purebasic['boolean']\n  Prism.languages.pbfasm = Prism.languages['purebasic']\n}\n","// @ts-nocheck\nimport refractorHaskell from './haskell.js'\npurescript.displayName = 'purescript'\npurescript.aliases = ['purs']\n\n/** @type {import('../core.js').Syntax} */\nexport default function purescript(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.purescript = Prism.languages.extend('haskell', {\n    keyword:\n      /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin functions only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n    operator: [\n      // Infix operators\n      Prism.languages.haskell.operator[0],\n      // ASCII operators\n      Prism.languages.haskell.operator[2],\n      // All UTF16 Unicode operator symbols\n      // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n      // See https://github.com/PrismJS/prism/issues/3006 for more details.\n      /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n    ]\n  })\n  Prism.languages.purs = Prism.languages.purescript\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nqsharp.displayName = 'qsharp'\nqsharp.aliases = ['qs']\n\n/** @type {import('../core.js').Syntax} */\nexport default function qsharp(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    }\n\n    // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\n      // all other keywords\n      other:\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\n    }\n    // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var keywords = RegExp(\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\n    )\n\n    // types\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    }\n\n    // strings\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\n      comment: /\\/\\/.*/,\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // open Microsoft.Quantum.Canon;\n          // open Microsoft.Quantum.Canon as CN;\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n            qualifiedName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // namespace Quantum.App1;\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\n          lookbehind: true,\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      number:\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n      operator:\n        /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n      punctuation: /::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('qsharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n\n    // single line\n    var interpolationExpr = nested(\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\n      2\n    )\n    Prism.languages.insertBefore('qsharp', 'string', {\n      'interpolation-string': {\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n              interpolationExpr\n            ]),\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\{|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                alias: 'language-qsharp',\n                inside: Prism.languages.qsharp\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n  })(Prism)\n  Prism.languages.qs = Prism.languages.qsharp\n}\n","// @ts-nocheck\nq.displayName = 'q'\nq.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nqml.displayName = 'qml'\nqml.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function qml(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        })\n\n    // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nqore.displayName = 'qore'\nqore.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function qore(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n    number:\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/\n  })\n}\n","// @ts-nocheck\nimport refractorScheme from './scheme.js'\nracket.displayName = 'racket'\nracket.aliases = ['rkt']\n\n/** @type {import('../core.js').Syntax} */\nexport default function racket(Prism) {\n  Prism.register(refractorScheme)\n  Prism.languages.racket = Prism.languages.extend('scheme', {\n    'lambda-parameter': {\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n      // this will just prevent false positives of the `function` pattern\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('racket', 'string', {\n    lang: {\n      pattern: /^#lang.+/m,\n      greedy: true,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.rkt = Prism.languages.racket\n}\n","// @ts-nocheck\nimport refractorCsharp from './csharp.js'\nimport refractorMarkup from './markup.js'\ncshtml.displayName = 'cshtml'\ncshtml.aliases = ['razor']\n\n/** @type {import('../core.js').Syntax} */\nexport default function cshtml(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.register(refractorMarkup)\n  // Docs:\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\n\n  ;(function (Prism) {\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\n      .source\n    var stringLike =\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\n      '|' +\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\n\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<self>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\n        .replace(/<str>/g, '(?:' + stringLike + ')')\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\n    }\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 1)\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\n    var angle = nested(/<(?:[^<>'\"@/]|<comment>|<self>)*>/.source, 1)\n    var inlineCs =\n      /@/.source +\n      /(?:await\\b\\s*)?/.source +\n      '(?:' +\n      /(?!await\\b)\\w+\\b/.source +\n      '|' +\n      round +\n      ')' +\n      '(?:' +\n      /[?!]?\\.\\w+\\b/.source +\n      '|' +\n      '(?:' +\n      angle +\n      ')?' +\n      round +\n      '|' +\n      square +\n      ')*' +\n      /(?![?!\\.(\\[]|<(?!\\/))/.source\n\n    // Note about the above bracket patterns:\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n    // messes up the bracket and string counting implemented by the above patterns.\n    //\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n    // complexity of an HTML expression.\n    //\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n\n    var tagAttrInlineCs = /@(?![\\w()])/.source + '|' + inlineCs\n    var tagAttrValue =\n      '(?:' +\n      /\"[^\"@]*\"|'[^'@]*'|[^\\s'\"@>=]+(?=[\\s>])/.source +\n      '|' +\n      '[\"\\'][^\"\\'@]*(?:(?:' +\n      tagAttrInlineCs +\n      ')[^\"\\'@]*)+[\"\\']' +\n      ')'\n    var tagAttrs =\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*<tagAttrValue>|(?=[\\s/>])))+)?/.source.replace(\n        /<tagAttrValue>/,\n        tagAttrValue\n      )\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\n    var tagRegion =\n      /\\B@?/.source +\n      '(?:' +\n      /<([a-zA-Z][\\w:]*)/.source +\n      tagAttrs +\n      /\\s*>/.source +\n      '(?:' +\n      (/[^<]/.source +\n        '|' +\n        // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source +\n        tagContent +\n        '|' +\n        // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source +\n            tagAttrs +\n            /\\s*>/.source +\n            '(?:' +\n            (/[^<]/.source +\n              '|' +\n              // all tags that are not the start tag\n              // eslint-disable-next-line regexp/strict\n              /<\\/?(?!\\1\\b)/.source +\n              tagContent +\n              '|' +\n              '<self>') +\n            ')*' +\n            // eslint-disable-next-line regexp/strict\n            /<\\/\\1\\s*>/.source,\n          2\n        )) +\n      ')*' +\n      // eslint-disable-next-line regexp/strict\n      /<\\/\\1\\s*>/.source +\n      '|' +\n      /</.source +\n      tagContent +\n      ')'\n\n    // Now for the actual language definition(s):\n    //\n    // Razor as a language has 2 parts:\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n    //\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n    // other. However, only CSHTML will be exported via `Prism.languages`.\n\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\n    var csharpWithHtml = Prism.languages.insertBefore(\n      'csharp',\n      'string',\n      {\n        html: {\n          pattern: RegExp(tagRegion),\n          greedy: true,\n          inside: Prism.languages.cshtml\n        }\n      },\n      {\n        csharp: Prism.languages.extend('csharp', {})\n      }\n    )\n    var cs = {\n      pattern: /\\S[\\s\\S]*/,\n      alias: 'language-csharp',\n      inside: csharpWithHtml\n    }\n    var inlineValue = {\n      pattern: RegExp(/(^|[^@])/.source + inlineCs),\n      lookbehind: true,\n      greedy: true,\n      alias: 'variable',\n      inside: {\n        keyword: /^@/,\n        csharp: cs\n      }\n    }\n    Prism.languages.cshtml.tag.pattern = RegExp(/<\\/?/.source + tagContent)\n    Prism.languages.cshtml.tag.inside['attr-value'].pattern = RegExp(\n      /=\\s*/.source + tagAttrValue\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        value: inlineValue\n      },\n      Prism.languages.cshtml.tag.inside['attr-value']\n    )\n    Prism.languages.insertBefore('cshtml', 'prolog', {\n      'razor-comment': {\n        pattern: /@\\*[\\s\\S]*?\\*@/,\n        greedy: true,\n        alias: 'comment'\n      },\n      block: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            '(?:' +\n            [\n              // @{ ... }\n              curly,\n              // @code{ ... }\n              /(?:code|functions)\\s*/.source + curly,\n              // @for (...) { ... }\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly,\n              // @do { ... } while (...);\n              /do\\s*/.source +\n                curly +\n                /\\s*while\\s*/.source +\n                round +\n                /(?:\\s*;)?/.source,\n              // @try { ... } catch (...) { ... } finally { ... }\n              /try\\s*/.source +\n                curly +\n                /\\s*catch\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                /\\s*finally\\s*/.source +\n                curly,\n              // @if (...) {...} else if (...) {...} else {...}\n              /if\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                '(?:' +\n                /\\s*else/.source +\n                '(?:' +\n                /\\s+if\\s*/.source +\n                round +\n                ')?' +\n                /\\s*/.source +\n                curly +\n                ')*',\n              // @helper Ident(params) { ... }\n              /helper\\s+\\w+\\s*/.source + round + /\\s*/.source + curly\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w*/,\n          csharp: cs\n        }\n      },\n      directive: {\n        pattern:\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w+/,\n          csharp: cs\n        }\n      },\n      value: inlineValue,\n      'delegate-operator': {\n        pattern: /(^|[^@])@(?=<)/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.razor = Prism.languages.cshtml\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nimport refractorMarkup from './markup.js'\njsx.displayName = 'jsx'\njsx.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function jsx(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          alias: 'language-javascript',\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          }\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n\n    // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token)\n\n            // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJsx from './jsx.js'\nimport refractorTypescript from './typescript.js'\ntsx.displayName = 'tsx'\ntsx.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript)\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript)\n\n    // doesn't work with TS because TS is too complex\n    delete Prism.languages.tsx['parameter']\n    delete Prism.languages.tsx['literal-property']\n\n    // This will prevent collisions between TSX tags and TS generic types.\n    // Idea by https://github.com/karlhorky\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n    var tag = Prism.languages.tsx.tag\n    tag.pattern = RegExp(\n      /(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')',\n      tag.pattern.flags\n    )\n    tag.lookbehind = true\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nreason.displayName = 'reason'\nreason.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function reason(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  })\n\n  // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","// @ts-nocheck\nrego.displayName = 'rego'\nrego.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function rego(Prism) {\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\n\n  Prism.languages.rego = {\n    comment: /#.*/,\n    property: {\n      pattern:\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n      inside: {\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n        punctuation: /\\./\n      }\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n    punctuation: /[,;.\\[\\]{}()]/\n  }\n}\n","// @ts-nocheck\nrenpy.displayName = 'renpy'\nrenpy.aliases = ['rpy']\n\n/** @type {import('../core.js').Syntax} */\nexport default function renpy(Prism) {\n  Prism.languages.renpy = {\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern:\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n      greedy: true\n    },\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    property:\n      /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n    tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n    keyword:\n      /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n    boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n    number:\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator:\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.rpy = Prism.languages.renpy\n}\n","// @ts-nocheck\nrescript.displayName = 'rescript'\nrescript.aliases = ['res']\n\n/** @type {import('../core.js').Syntax} */\nexport default function rescript(Prism) {\n  Prism.languages.rescript = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\r\\n\\\\]|\\\\(?:.|\\w+))'/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    'class-name': /\\b[A-Z]\\w*|@[a-z.]*|#[A-Za-z]\\w*|#\\d/,\n    function: {\n      pattern: /[a-zA-Z]\\w*(?=\\()|(\\.)[a-z]\\w*/,\n      lookbehind: true\n    },\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    boolean: /\\b(?:false|true)\\b/,\n    'attr-value': /[A-Za-z]\\w*(?==)/,\n    constant: {\n      pattern: /(\\btype\\s+)[a-z]\\w*/,\n      lookbehind: true\n    },\n    tag: {\n      pattern: /(<)[a-z]\\w*|(?:<\\/)[a-z]\\w*/,\n      lookbehind: true,\n      inside: {\n        operator: /<|>|\\//\n      }\n    },\n    keyword:\n      /\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]?|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/,\n    punctuation: /[(){}[\\],;.]/\n  }\n  Prism.languages.insertBefore('rescript', 'string', {\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.rescript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.res = Prism.languages.rescript\n}\n","// @ts-nocheck\nrest.displayName = 'rest'\nrest.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern:\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern:\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern:\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation:\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      },\n      // Underlined only\n      {\n        pattern:\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern:\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern:\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern:\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern:\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern:\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern:\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","// @ts-nocheck\nrip.displayName = 'rip'\nrip.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function rip(Prism) {\n  Prism.languages.rip = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","// @ts-nocheck\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern:\n        /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n","// @ts-nocheck\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = ['robot']\n\n/** @type {import('../core.js').Syntax} */\nexport default function robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      }\n\n      // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n","// @ts-nocheck\nsas.displayName = 'sas'\nsas.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function sas(Prism) {\n  ;(function (Prism) {\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i\n    var numericConstant = {\n      pattern: RegExp(stringPattern + '[bx]'),\n      alias: 'number'\n    }\n    var macroVariable = {\n      pattern: /&[a-z_]\\w*/i\n    }\n    var macroKeyword = {\n      pattern:\n        /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var step = {\n      pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n      alias: 'keyword',\n      lookbehind: true\n    }\n    var comment = [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n        lookbehind: true\n      }\n    ]\n    var string = {\n      pattern: RegExp(stringPattern),\n      greedy: true\n    }\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/\n    var func = {\n      pattern: /%?\\b\\w+(?=\\()/,\n      alias: 'keyword'\n    }\n    var args = {\n      function: func,\n      'arg-value': {\n        pattern: /(=\\s*)[A-Z\\.]+/i,\n        lookbehind: true\n      },\n      operator: /=/,\n      'macro-variable': macroVariable,\n      arg: {\n        pattern: /[A-Z]+/i,\n        alias: 'keyword'\n      },\n      number: number,\n      'numeric-constant': numericConstant,\n      punctuation: punctuation,\n      string: string\n    }\n    var format = {\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n      inside: {\n        keyword: /^(?:format|put)(?==)/i,\n        equals: /=/,\n        format: {\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var altformat = {\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n      inside: {\n        keyword: /^(?:format|put)/i,\n        format: {\n          pattern: /[\\w$]+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var globalStatements = {\n      pattern:\n        /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var submitStatement = {\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var actionSets =\n      /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/\n        .source\n    var casActions = {\n      pattern: RegExp(\n        /(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(\n          /<act>/g,\n          function () {\n            return actionSets\n          }\n        ),\n        'i'\n      ),\n      lookbehind: true,\n      inside: {\n        keyword: RegExp(\n          /(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n            return actionSets\n          }),\n          'i'\n        ),\n        action: {\n          pattern: /(?:action)/i,\n          alias: 'keyword'\n        },\n        comment: comment,\n        function: func,\n        'arg-value': args['arg-value'],\n        operator: args.operator,\n        argument: args.arg,\n        number: number,\n        'numeric-constant': numericConstant,\n        punctuation: punctuation,\n        string: string\n      }\n    }\n    var keywords = {\n      pattern:\n        /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n      lookbehind: true\n    }\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(?:cards|(?:data)?lines)/i\n          },\n          punctuation: /;/\n        }\n      },\n      'proc-sql': {\n        pattern:\n          /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          sql: {\n            pattern: RegExp(\n              /^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            alias: 'language-sql',\n            inside: Prism.languages.sql\n          },\n          'global-statements': globalStatements,\n          'sql-statements': {\n            pattern:\n              /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-groovy': {\n        pattern:\n          /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          groovy: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-groovy',\n            inside: Prism.languages.groovy\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-lua': {\n        pattern:\n          /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          lua: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-lua',\n            inside: Prism.languages.lua\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-cas': {\n        pattern:\n          /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          'statement-var': {\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n            lookbehind: true,\n            inside: {\n              statement: {\n                pattern: /^saveresult\\s+\\S+/i,\n                inside: {\n                  keyword: /^(?:saveresult)/i\n                }\n              },\n              rest: args\n            }\n          },\n          'cas-actions': casActions,\n          statement: {\n            pattern:\n              /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n            lookbehind: true,\n            inside: args\n          },\n          step: step,\n          keyword: keywords,\n          function: func,\n          format: format,\n          altformat: altformat,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-args': {\n        pattern: RegExp(\n          /(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(\n            /<str>/g,\n            function () {\n              return stringPattern\n            }\n          ),\n          'im'\n        ),\n        lookbehind: true,\n        inside: args\n      },\n      /*Special keywords within macros*/\n      'macro-keyword': macroKeyword,\n      'macro-variable': macroVariable,\n      'macro-string-functions': {\n        pattern:\n          /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n            alias: 'keyword'\n          },\n          'macro-keyword': macroKeyword,\n          'macro-variable': macroVariable,\n          'escaped-char': {\n            pattern: /%['\"()<>=¬^~;,#]/\n          },\n          punctuation: punctuation\n        }\n      },\n      'macro-declaration': {\n        pattern: /^%macro[^;]+(?=;)/im,\n        inside: {\n          keyword: /%macro/i\n        }\n      },\n      'macro-end': {\n        pattern: /^%mend[^;]+(?=;)/im,\n        inside: {\n          keyword: /%mend/i\n        }\n      },\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n      macro: {\n        pattern: /%_\\w+(?=\\()/,\n        alias: 'keyword'\n      },\n      input: {\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n        inside: {\n          input: {\n            alias: 'keyword',\n            pattern: /^input/i\n          },\n          comment: comment,\n          number: number,\n          'numeric-constant': numericConstant\n        }\n      },\n      'options-args': {\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n        lookbehind: true,\n        inside: args\n      },\n      'cas-actions': casActions,\n      comment: comment,\n      function: func,\n      format: format,\n      altformat: altformat,\n      'numeric-constant': numericConstant,\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\n        alias: 'number'\n      },\n      string: string,\n      step: step,\n      keyword: keywords,\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\n      'operator-keyword': {\n        pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n        alias: 'operator'\n      },\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: number,\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n      punctuation: punctuation\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorBash from './bash.js'\nshellSession.displayName = 'shell-session'\nshellSession.aliases = ['sh-session', 'shellsession']\n\n/** @type {import('../core.js').Syntax} */\nexport default function shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source,\n      // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^/.source +\n            '(?:' +\n            // <user> \":\" ( <path> )?\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\n              .source +\n              '|' +\n              // <path>\n              // Since the path pattern is quite general, we will require it to start with a special character to\n              // prevent false positives.\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\n            ')?' +\n            // shell symbol\n            /[$#%](?=\\s)/.source +\n            // bash command\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n","// @ts-nocheck\nsmali.displayName = 'smali'\nsmali.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n","// @ts-nocheck\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.smarty = {\n      comment: {\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n        greedy: true\n      },\n      'embedded-php': {\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n        greedy: true,\n        inside: {\n          smarty: {\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\n            inside: null // see below\n          },\n\n          php: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-php',\n            inside: Prism.languages.php\n          }\n        }\n      },\n      string: [\n        {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /\\{[^{}]*\\}|`[^`]*`/,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^[{`]|[`}]$/,\n                  alias: 'punctuation'\n                },\n                expression: {\n                  pattern: /[\\s\\S]+/,\n                  inside: null // see below\n                }\n              }\n            },\n\n            variable: /\\$\\w+/\n          }\n        },\n        {\n          pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n          greedy: true\n        }\n      ],\n      keyword: {\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n        lookbehind: true,\n        greedy: true\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n        lookbehind: true\n      },\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n      punctuation: /[\\[\\](){}.,:`]|->/,\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n      ]\n    }\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside =\n      Prism.languages.smarty\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside =\n      Prism.languages.smarty\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/\n    var smartyPattern = RegExp(\n      // comments\n      /\\{\\*[\\s\\S]*?\\*\\}/.source +\n        '|' +\n        // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n        '|' +\n        // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\n          /<str>/g,\n          function () {\n            return string.source\n          }\n        ),\n      'g'\n    )\n\n    // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyLiteralStart = '{literal}'\n      var smartyLiteralEnd = '{/literal}'\n      var smartyLiteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLiteralEnd) {\n            smartyLiteralMode = false\n          }\n          if (!smartyLiteralMode) {\n            if (match === smartyLiteralStart) {\n              smartyLiteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    })\n\n    // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nsml.displayName = 'sml'\nsml.aliases = ['smlnj']\n\n/** @type {import('../core.js').Syntax} */\nexport default function sml(Prism) {\n  // https://smlfamily.github.io/sml97-defn.pdf\n  // https://people.mpi-sws.org/~rossberg/sml.html\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i\n    Prism.languages.sml = {\n      // allow one level of nesting\n      comment:\n        /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n      string: {\n        pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': [\n        {\n          // This is only an approximation since the real grammar is context-free\n          //\n          // Why the main loop so complex?\n          // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n          // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n          // followed by a long identifier.\n          pattern: RegExp(\n            /((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\n              .replace(/<NOT-LAST>/g, function () {\n                return /\\s*(?:[*,]|->)/.source\n              })\n              .replace(/<TERMINAL>/g, function () {\n                return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/\n                  .source\n              })\n              .replace(/<LONG-ID>/g, function () {\n                return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source\n              })\n              .replace(/<KEYWORD>/g, function () {\n                return keywords.source\n              }),\n            'i'\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern:\n            /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n        lookbehind: true\n      },\n      keyword: keywords,\n      variable: {\n        pattern: /(^|[^\\w'])'[\\w']*/,\n        lookbehind: true\n      },\n      number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n      word: {\n        pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n        alias: 'constant'\n      },\n      boolean: /\\b(?:false|true)\\b/i,\n      operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n      punctuation: /[(){}\\[\\].:,;]/\n    }\n    Prism.languages.sml['class-name'][0].inside = Prism.languages.sml\n    Prism.languages.smlnj = Prism.languages.sml\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nsolidity.displayName = 'solidity'\nsolidity.aliases = ['sol']\n\n/** @type {import('../core.js').Syntax} */\nexport default function solidity(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern:\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  })\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin:\n      /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  })\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  })\n  Prism.languages.sol = Prism.languages.solidity\n}\n","// @ts-nocheck\nsolutionFile.displayName = 'solution-file'\nsolutionFile.aliases = ['sln']\n\n/** @type {import('../core.js').Syntax} */\nexport default function solutionFile(Prism) {\n  ;(function (Prism) {\n    var guid = {\n      // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n      pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n      alias: 'constant',\n      inside: {\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages['solution-file'] = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n        greedy: true,\n        inside: {\n          guid: guid\n        }\n      },\n      object: {\n        // Foo\n        //   Bar(\"abs\") = 9\n        //   EndBar\n        //   Prop = TRUE\n        // EndFoo\n        pattern:\n          /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'keyword'\n      },\n      property: {\n        pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n        lookbehind: true,\n        inside: {\n          guid: guid\n        }\n      },\n      guid: guid,\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\n      boolean: /\\b(?:FALSE|TRUE)\\b/,\n      operator: /=/,\n      punctuation: /[(),]/\n    }\n    Prism.languages['sln'] = Prism.languages['solution-file']\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nsoy.displayName = 'soy'\nsoy.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern:\n          /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^\\{+\\/?|\\/?\\}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    }\n\n    // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    })\n\n    // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nturtle.displayName = 'turtle'\nturtle.aliases = ['trig']\n\n/** @type {import('../core.js').Syntax} */\nexport default function turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern:\n        /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern:\n        /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern:\n        /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:base|graph|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  }\n  Prism.languages.trig = Prism.languages['turtle']\n}\n","// @ts-nocheck\nimport refractorTurtle from './turtle.js'\nsparql.displayName = 'sparql'\nsparql.aliases = ['rq']\n\n/** @type {import('../core.js').Syntax} */\nexport default function sparql(Prism) {\n  Prism.register(refractorTurtle)\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: {\n      pattern: /[?$]\\w+/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('sparql', 'punctuation', {\n    keyword: [\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n    ]\n  })\n  Prism.languages.rq = Prism.languages.sparql\n}\n","// @ts-nocheck\nsplunkSpl.displayName = 'splunk-spl'\nsplunkSpl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function splunkSpl(Prism) {\n  Prism.languages['splunk-spl'] = {\n    comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true\n    },\n    // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n    keyword:\n      /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n    'operator-word': {\n      pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n      alias: 'operator'\n    },\n    function: /\\b\\w+(?=\\s*\\()/,\n    property: /\\b\\w+(?=\\s*=(?!=))/,\n    date: {\n      // MM/DD/YYYY(:HH:MM:SS)?\n      pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n      alias: 'number'\n    },\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    boolean: /\\b(?:f|false|t|true)\\b/i,\n    operator: /[<>=]=?|[-+*/%|]/,\n    punctuation: /[()[\\],]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nsqf.displayName = 'sqf'\nsqf.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function sqf(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.sqf = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function:\n      /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n    number:\n      /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n    operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n    'magic-variable': {\n      pattern:\n        /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\n      alias: 'keyword'\n    },\n    constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n  })\n  Prism.languages.insertBefore('sqf', 'string', {\n    macro: {\n      pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /#[a-z]+\\b/i,\n          alias: 'keyword'\n        },\n        comment: Prism.languages.sqf.comment\n      }\n    }\n  })\n  delete Prism.languages.sqf['class-name']\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nsquirrel.displayName = 'squirrel'\nsquirrel.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function squirrel(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [\n      Prism.languages.clike['comment'][0],\n      {\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  })\n  Prism.languages.insertBefore('squirrel', 'string', {\n    char: {\n      pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n      lookbehind: true,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  })\n}\n","// @ts-nocheck\nstan.displayName = 'stan'\nstan.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function stan(Prism) {\n  ;(function (Prism) {\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n\n    var higherOrderFunctions =\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\n    Prism.languages.stan = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n      string: {\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n        greedy: true\n      },\n      directive: {\n        pattern: /^([ \\t]*)#include\\b.*/m,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'function-arg': {\n        pattern: RegExp(\n          '(' +\n            higherOrderFunctions.source +\n            /\\s*\\(\\s*/.source +\n            ')' +\n            /[a-zA-Z]\\w*/.source\n        ),\n        lookbehind: true,\n        alias: 'function'\n      },\n      constraint: {\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\n          operator: /=/,\n          punctuation: /^<|>$|,/\n        }\n      },\n      keyword: [\n        {\n          pattern:\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n          alias: 'program-block'\n        },\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/,\n        // these are functions that are known to take another function as their first argument.\n        higherOrderFunctions\n      ],\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n      number:\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n      punctuation: /[()\\[\\]{},;]/\n    }\n    Prism.languages.stan.constraint.inside.expression.inside =\n      Prism.languages.stan\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorJava from './java.js'\nimport refractorMata from './mata.js'\nimport refractorPython from './python.js'\nstata.displayName = 'stata'\nstata.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function stata(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorMata)\n  Prism.register(refractorPython)\n  // https://www.stata.com/manuals/u.pdf\n  // https://www.stata.com/manuals/p.pdf\n\n  Prism.languages.stata = {\n    comment: [\n      {\n        pattern: /(^[ \\t]*)\\*.*/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|\\s)\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'string-literal': {\n      pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n          inside: {\n            punctuation: /^\\$\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n\n        string: /[\\s\\S]+/\n      }\n    },\n    mata: {\n      pattern: /(^[ \\t]*mata[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-mata',\n      inside: Prism.languages.mata\n    },\n    java: {\n      pattern: /(^[ \\t]*java[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-java',\n      inside: Prism.languages.java\n    },\n    python: {\n      pattern: /(^[ \\t]*python[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-python',\n      inside: Prism.languages.python\n    },\n    command: {\n      pattern:\n        /(^[ \\t]*(?:\\.[ \\t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\\b[^:\\r\\n]*:[ \\t]*|(?:capture|noisily|quietly|version)[ \\t]+)?)[a-zA-Z]\\w*/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n    keyword:\n      /\\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \\t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\\b/,\n    boolean: /\\b(?:off|on)\\b/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+/,\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    operator: /\\+\\+|--|##?|[<>!=~]=?|[+\\-*^&|/]/,\n    punctuation: /[(){}[\\],:]/\n  }\n  Prism.languages.stata[\n    'string-literal'\n  ].inside.interpolation.inside.expression.inside = Prism.languages.stata\n}\n","// @ts-nocheck\niecst.displayName = 'iecst'\niecst.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: [\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n    ],\n    'class-name':\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n    address: {\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n      alias: 'symbol'\n    },\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n    operator:\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    punctuation: /[()[\\].,;]/\n  }\n}\n","// @ts-nocheck\nsupercollider.displayName = 'supercollider'\nsupercollider.aliases = ['sclang']\n\n/** @type {import('../core.js').Syntax} */\nexport default function supercollider(Prism) {\n  Prism.languages.supercollider = {\n    comment: {\n      pattern:\n        /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$(?:[^\\\\\\r\\n]|\\\\.)/,\n      greedy: true\n    },\n    symbol: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'|\\\\\\w+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /\\b(?:_|arg|classvar|const|nil|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    label: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*:)/,\n      alias: 'property'\n    },\n    number:\n      /\\b(?:inf|pi|0x[0-9a-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?:pi)?|\\d+r[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)?|\\d+[sb]{1,4}\\d*)\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    operator:\n      /\\.{2,3}|#(?![[{])|&&|[!=]==?|\\+>>|\\+{1,3}|-[->]|=>|>>|\\?\\?|@\\|?@|\\|(?:@|[!=]=)?\\||!\\?|<[!=>]|\\*{1,2}|<{2,3}\\*?|[-!%&/<>?@|=`]/,\n    punctuation: /[{}()[\\].:,;]|#[[{]/\n  }\n  Prism.languages.sclang = Prism.languages.supercollider\n}\n","// @ts-nocheck\nsystemd.displayName = 'systemd'\nsystemd.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function systemd(Prism) {\n  // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n\n  ;(function (Prism) {\n    var comment = {\n      pattern: /^[;#].*/m,\n      greedy: true\n    }\n    var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source\n    Prism.languages.systemd = {\n      comment: comment,\n      section: {\n        pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'section-name': {\n            pattern: /[\\s\\S]+/,\n            alias: 'selector'\n          }\n        }\n      },\n      key: {\n        pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n        greedy: true,\n        alias: 'attr-name'\n      },\n      value: {\n        // This pattern is quite complex because of two properties:\n        //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n        //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n        //  2) Line continuations.\n        //     After line continuations, empty lines and comments are ignored so we have to consume them.\n        pattern: RegExp(\n          /(=[ \\t]*(?!\\s))/.source +\n            // the value either starts with quotes or not\n            '(?:' +\n            quotesSource +\n            '|(?=[^\"\\r\\n]))' +\n            // main loop\n            '(?:' +\n            (/[^\\s\\\\]/.source +\n              // handle spaces separately because of quotes\n              '|' +\n              '[ \\t]+(?:(?![ \\t\"])|' +\n              quotesSource +\n              ')' +\n              // line continuation\n              '|' +\n              /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'attr-value',\n        inside: {\n          comment: comment,\n          quoted: {\n            pattern: RegExp(/(^|\\s)/.source + quotesSource),\n            lookbehind: true,\n            greedy: true\n          },\n          punctuation: /\\\\$/m,\n          boolean: {\n            pattern: /^(?:false|no|off|on|true|yes)$/,\n            greedy: true\n          }\n        }\n      },\n      punctuation: /=/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nt4Templating.displayName = 't4-templating'\nt4Templating.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCsharp from './csharp.js'\nimport refractorT4Templating from './t4-templating.js'\nt4Cs.displayName = 't4-cs'\nt4Cs.aliases = ['t4']\n\n/** @type {import('../core.js').Syntax} */\nexport default function t4Cs(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.register(refractorT4Templating)\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\n    Prism.languages['t4-templating'].createT4('csharp')\n}\n","// @ts-nocheck\nimport refractorT4Templating from './t4-templating.js'\nimport refractorVbnet from './vbnet.js'\nt4Vb.displayName = 't4-vb'\nt4Vb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function t4Vb(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorVbnet)\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\n}\n","// @ts-nocheck\nimport refractorYaml from './yaml.js'\ntap.displayName = 'tap'\ntap.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","// @ts-nocheck\ntcl.displayName = 'tcl'\ntcl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$)\\{[^}]+\\}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:else|elseif)\\b/\n    ],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator:\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nimport refractorMarkupTemplating from './markup-templating.js'\ntt2.displayName = 'tt2'\ntt2.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function tt2(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword:\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    })\n\n    // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\ntoml.displayName = 'toml'\ntoml.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n\n    /**\n     * @param {string} pattern\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ntremor.displayName = 'tremor'\ntremor.aliases = ['trickle', 'troy']\n\n/** @type {import('../core.js').Syntax} */\nexport default function tremor(Prism) {\n  ;(function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword:\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number:\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator:\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    }\n    var interpolationPattern =\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(\n        /(^|[^\\\\])/.source +\n          '(?:' +\n          '\"\"\"(?:' +\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"\"\"' +\n          '|' +\n          '\"(?:' +\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"' +\n          ')'\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.troy = Prism.languages['tremor']\n    Prism.languages.trickle = Prism.languages['tremor']\n  })(Prism)\n}\n","// @ts-nocheck\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\n\n/** @type {import('../core.js').Syntax} */\nexport default function typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n","// @ts-nocheck\nunrealscript.displayName = 'unrealscript'\nunrealscript.aliases = ['uc', 'uscript']\n\n/** @type {import('../core.js').Syntax} */\nexport default function unrealscript(Prism) {\n  Prism.languages.unrealscript = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    category: {\n      pattern:\n        /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        property: /\\b\\w+(?=\\s*=)/,\n        operator: /=/,\n        punctuation: /[<>|]/\n      }\n    },\n    macro: {\n      pattern: /`\\w+/,\n      alias: 'property'\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n    operator:\n      />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\n    punctuation: /[()[\\]{};,.]/\n  }\n  Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript\n}\n","// @ts-nocheck\nuorazor.displayName = 'uorazor'\nuorazor.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function uorazor(Prism) {\n  Prism.languages.uorazor = {\n    'comment-hash': {\n      pattern: /#.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    'comment-slash': {\n      pattern: /\\/\\/.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      },\n      greedy: true\n    },\n    'source-layers': {\n      pattern:\n        /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\n      alias: 'function'\n    },\n    'source-commands': {\n      pattern:\n        /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\n      alias: 'function'\n    },\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    function:\n      /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\n    keyword:\n      /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nv.displayName = 'v'\nv.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function v(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolationExpr = {\n      pattern: /[\\s\\S]+/,\n      inside: null\n    }\n    Prism.languages.v = Prism.languages.extend('clike', {\n      string: {\n        pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        alias: 'quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n            lookbehind: true,\n            inside: {\n              'interpolation-variable': {\n                pattern: /^\\$\\w[\\s\\S]*$/,\n                alias: 'variable'\n              },\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              'interpolation-expression': interpolationExpr\n            }\n          }\n        }\n      },\n      'class-name': {\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n      number:\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n      operator:\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n      builtin:\n        /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n    })\n    interpolationExpr.inside = Prism.languages.v\n    Prism.languages.insertBefore('v', 'string', {\n      char: {\n        pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n        // using {1,2} instead of `u` flag for compatibility\n        alias: 'rune'\n      }\n    })\n    Prism.languages.insertBefore('v', 'operator', {\n      attribute: {\n        pattern:\n          /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n        lookbehind: true,\n        alias: 'annotation',\n        inside: {\n          punctuation: /[\\[\\]]/,\n          keyword: /\\w+/\n        }\n      },\n      generic: {\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n        inside: {\n          punctuation: /[<>]/,\n          'class-name': /\\w+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('v', 'function', {\n      'generic-function': {\n        // e.g. foo<T>( ...\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<\\w+>/,\n            inside: Prism.languages.v.generic.inside\n          }\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nvala.displayName = 'vala'\nvala.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function vala(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function velocity(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","// @ts-nocheck\nverilog.displayName = 'verilog'\nverilog.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'kernel-function': {\n      // support for any kernel function (ex: $display())\n      pattern: /\\B\\$\\w+\\b/,\n      alias: 'property'\n    },\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\b\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword:\n      /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\n    // support for time ticks, vectors, and real numbers\n    number:\n      /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\nvhdl.displayName = 'vhdl'\nvhdl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    attribute: {\n      pattern: /\\b'\\w+/,\n      alias: 'attr-name'\n    },\n    // support for predefined attributes included\n    keyword:\n      /\\b(?:access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|private|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|view|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator:\n      /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\nvim.displayName = 'vim'\nvim.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\b\\w+(?=\\()/,\n    keyword:\n      /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin:\n      /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator:\n      /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  }\n}\n","// @ts-nocheck\nvisualBasic.displayName = 'visual-basic'\nvisualBasic.aliases = ['vb', 'vba']\n\n/** @type {import('../core.js').Syntax} */\nexport default function visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern:\n        /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'property',\n      greedy: true\n    },\n    string: {\n      pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern:\n        /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\n      alias: 'number'\n    },\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\n    boolean: /\\b(?:False|Nothing|True)\\b/i,\n    keyword:\n      /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n    operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\n    punctuation: /[{}().,:?]/\n  }\n  Prism.languages.vb = Prism.languages['visual-basic']\n  Prism.languages.vba = Prism.languages['visual-basic']\n}\n","// @ts-nocheck\nwarpscript.displayName = 'warpscript'\nwarpscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function warpscript(Prism) {\n  Prism.languages.warpscript = {\n    comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern:\n        /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n      greedy: true\n    },\n    variable: /\\$\\S+/,\n    macro: {\n      pattern: /@\\S+/,\n      alias: 'property'\n    },\n    // WarpScript doesn't have any keywords, these are all functions under the control category\n    // https://www.warp10.io/tags/control\n    keyword:\n      /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n    number:\n      /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n    boolean: /\\b(?:F|T|false|true)\\b/,\n    punctuation: /<%|%>|[{}[\\]()]/,\n    // Some operators from the \"operators\" category\n    // https://www.warp10.io/tags/operators\n    operator:\n      /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n  }\n}\n","// @ts-nocheck\nwasm.displayName = 'wasm'\nwasm.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern:\n          /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n    number:\n      /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n","// @ts-nocheck\nwebIdl.displayName = 'web-idl'\nwebIdl.aliases = ['webidl']\n\n/** @type {import('../core.js').Syntax} */\nexport default function webIdl(Prism) {\n  ;(function (Prism) {\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source\n    var type =\n      '(?:' +\n      /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source +\n      '|' +\n      /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source +\n      '|' +\n      /(?!(?:unrestricted|unsigned)\\b)/.source +\n      id +\n      /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +\n      ')' +\n      /(?:\\s*\\?)?/.source\n    var typeInside = {}\n    Prism.languages['web-idl'] = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      namespace: {\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source +\n              type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // callback return type\n          pattern: RegExp(\n            '(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // typedef\n          pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/\n              .source + id\n          ),\n          lookbehind: true\n        },\n        {\n          // inheritance\n          pattern: RegExp(/(:\\s*)/.source + id),\n          lookbehind: true\n        },\n        // includes and implements\n        RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n        {\n          pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n          lookbehind: true\n        },\n        {\n          // function return type, parameter types, and dictionary members\n          pattern: RegExp(\n            type +\n              '(?=' +\n              /\\s*(?:\\.{3}\\s*)?/.source +\n              id +\n              /\\s*[(),;=]/.source +\n              ')'\n          ),\n          inside: typeInside\n        }\n      ],\n      builtin:\n        /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n      keyword: [\n        /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/,\n        // type keywords\n        /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n        lookbehind: true\n      },\n      operator: /\\.{3}|[=:?<>-]/,\n      punctuation: /[(){}[\\].,;]/\n    }\n    for (var key in Prism.languages['web-idl']) {\n      if (key !== 'class-name') {\n        typeInside[key] = Prism.languages['web-idl'][key]\n      }\n    }\n    Prism.languages['webidl'] = Prism.languages['web-idl']\n  })(Prism)\n}\n","// @ts-nocheck\nwgsl.displayName = 'wgsl'\nwgsl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function wgsl(Prism) {\n  Prism.languages.wgsl = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    'builtin-attribute': {\n      pattern: /(@)builtin\\(.*?\\)/,\n      lookbehind: true,\n      inside: {\n        attribute: {\n          pattern: /^builtin/,\n          alias: 'attr-name'\n        },\n        punctuation: /[(),]/,\n        'built-in-values': {\n          pattern:\n            /\\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\\b/,\n          alias: 'attr-value'\n        }\n      }\n    },\n    attributes: {\n      pattern:\n        /(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    functions: {\n      pattern: /\\b(fn\\s+)[_a-zA-Z]\\w*(?=[(<])/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\\b/,\n    builtin:\n      /\\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\\b/,\n    'function-calls': {\n      pattern: /\\b[_a-z]\\w*(?=\\()/i,\n      alias: 'function'\n    },\n    'class-name': /\\b(?:[A-Z][A-Za-z0-9]*)\\b/,\n    'bool-literal': {\n      pattern: /\\b(?:false|true)\\b/,\n      alias: 'boolean'\n    },\n    'hex-int-literal': {\n      pattern: /\\b0[xX][0-9a-fA-F]+[iu]?\\b(?![.pP])/,\n      alias: 'number'\n    },\n    'hex-float-literal': {\n      pattern: /\\b0[xX][0-9a-fA-F]*(?:\\.[0-9a-fA-F]*)?(?:[pP][+-]?\\d+[fh]?)?/,\n      alias: 'number'\n    },\n    'decimal-float-literal': [\n      {\n        pattern: /\\d*\\.\\d+(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\n        alias: 'number'\n      },\n      {\n        pattern: /\\d+\\.\\d*(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\n        alias: 'number'\n      },\n      {\n        pattern: /\\d+[eE](?:\\+|-)?\\d+[fh]?/,\n        alias: 'number'\n      },\n      {\n        pattern: /\\b\\d+[fh]\\b/,\n        alias: 'number'\n      }\n    ],\n    'int-literal': {\n      pattern: /\\b\\d+[iu]?\\b/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /(?:\\^|~|\\|(?!\\|)|\\|\\||&&|<<|>>|!)(?!=)/\n      },\n      {\n        pattern: /&(?![&=])/\n      },\n      {\n        pattern: /(?:\\+=|-=|\\*=|\\/=|%=|\\^=|&=|\\|=|<<=|>>=)/\n      },\n      {\n        pattern: /(^|[^<>=!])=(?![=>])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(?:==|!=|<=|\\+\\+|--|(^|[^=])>=)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(?:(?:[+%]|(?:\\*(?!\\w)))(?!=))|(?:-(?!>))|(?:\\/(?!\\/))/\n      },\n      {\n        pattern: /->/\n      }\n    ],\n    punctuation: /[@(){}[\\],;<>:.]/\n  }\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nwiki.displayName = 'wiki'\nwiki.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function wiki(Prism) {\n  Prism.register(refractorMarkup)\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold-italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true,\n          alias: ['bold', 'italic']\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\n    ],\n    variable: [\n      /__[A-Z]+__/,\n      // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/,\n      /\\{\\{.+?\\}\\}/\n    ],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  })\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  })\n}\n","// @ts-nocheck\nwolfram.displayName = 'wolfram'\nwolfram.aliases = ['mathematica', 'nb', 'wl']\n\n/** @type {import('../core.js').Syntax} */\nexport default function wolfram(Prism) {\n  Prism.languages.wolfram = {\n    comment:\n      // Allow one level of nesting - note: regex taken from applescipt\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n    context: {\n      pattern: /\\b\\w+`+\\w*/,\n      alias: 'class-name'\n    },\n    blank: {\n      pattern: /\\b\\w+_\\b/,\n      alias: 'regex'\n    },\n    'global-variable': {\n      pattern: /\\$\\w+/,\n      alias: 'variable'\n    },\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator:\n      /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.mathematica = Prism.languages.wolfram\n  Prism.languages.wl = Prism.languages.wolfram\n  Prism.languages.nb = Prism.languages.wolfram\n}\n","// @ts-nocheck\nwren.displayName = 'wren'\nwren.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function wren(Prism) {\n  // https://wren.io/\n\n  Prism.languages.wren = {\n    // Multiline comments in Wren can have nested multiline comments\n    // Comments: // and /* */\n    comment: [\n      {\n        // support 3 levels of nesting\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n        pattern:\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n    // Based on prism-python.js\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    // see below\n    'string-literal': null,\n    // #!/usr/bin/env wren on the first line\n    hashbang: {\n      pattern: /^#!\\/.+/,\n      greedy: true,\n      alias: 'comment'\n    },\n    // Attributes are special keywords to add meta data to classes\n    attribute: {\n      // #! attributes are stored in class properties\n      // #!myvar = true\n      // #attributes are not stored and dismissed at compilation\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\n      alias: 'keyword'\n    },\n    'class-name': [\n      {\n        // class definition\n        // class Meta {}\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      // A class must always start with an uppercase.\n      // File.read\n      /\\b[A-Z][a-z\\d_]*\\b/\n    ],\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    keyword:\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    // Functions can be Class.method()\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n    punctuation: /[\\[\\](){}.,;]/\n  }\n  Prism.languages.wren['string-literal'] = {\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n    pattern:\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        // \"%(interpolation)\"\n        pattern:\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: Prism.languages.wren\n          },\n          'interpolation-punctuation': {\n            pattern: /^%\\(|\\)$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\n\n/** @type {import('../core.js').Syntax} */\nexport default function xeora(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nxmlDoc.displayName = 'xml-doc'\nxmlDoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function xmlDoc(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n","// @ts-nocheck\nxojo.displayName = 'xojo'\nxojo.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    directive: {\n      pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\n      alias: 'property'\n    },\n    keyword:\n      /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n    operator:\n      /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nxquery.displayName = 'xquery'\nxquery.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function xquery(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[-\\w:]+/,\n      axis: {\n        pattern:\n          /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern:\n          /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern:\n          /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern:\n          /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n        {\n          pattern: /(\\s)-(?=\\s)/,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[[\\](){},;:/]/\n    })\n    Prism.languages.xquery.tag.pattern =\n      /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern =\n      /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] =\n      /^=\"|\"$/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n      inside: Prism.languages.xquery,\n      alias: 'language-xquery'\n    }\n\n    // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{' &&\n            // Ignore `{{`\n            (!tokens[i + 1] ||\n              tokens[i + 1].type !== 'punctuation' ||\n              tokens[i + 1].content !== '{') &&\n            (!tokens[i - 1] ||\n              tokens[i - 1].type !== 'plain-text' ||\n              tokens[i - 1].content !== '{')\n          ) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token)\n\n            // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText\n            } else {\n              tokens[i] = new Prism.Token(\n                'plain-text',\n                plainText,\n                null,\n                plainText\n              )\n            }\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'xquery') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nyang.displayName = 'yang'\nyang.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  }\n}\n","// @ts-nocheck\nzig.displayName = 'zig'\nzig.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function zig(Prism) {\n  ;(function (Prism) {\n    function literal(str) {\n      return function () {\n        return str\n      }\n    }\n    var keyword =\n      /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/\n    var IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b'\n    var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var PREFIX_TYPE_OP =\n      /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(\n        /<ALIGN>/g,\n        literal(ALIGN)\n      )\n    var SUFFIX_EXPR =\n      /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(\n        /<ID>/g,\n        literal(IDENTIFIER)\n      )\n    var TYPE =\n      '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+'\n\n    /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */\n\n    Prism.languages.zig = {\n      comment: [\n        {\n          pattern: /\\/\\/[/!].*/,\n          alias: 'doc-comment'\n        },\n        /\\/{2}.*/\n      ],\n      string: [\n        {\n          // \"string\" and c\"string\"\n          pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // multiline strings and c-strings\n          pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      char: {\n        // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n        pattern:\n          /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n        lookbehind: true,\n        greedy: true\n      },\n      builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n      label: {\n        pattern:\n          /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n        lookbehind: true\n      },\n      'class-name': [\n        // const Foo = struct {};\n        /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n        {\n          // const x: i32 = 9;\n          // var x: Bar;\n          // fn foo(x: bool, y: f32) void {}\n          pattern: RegExp(\n            /(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          // extern fn foo(x: f64) f64; (optional alignment)\n          pattern: RegExp(\n            /(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n\n      'builtin-type': {\n        pattern:\n          /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\n        alias: 'keyword'\n      },\n      keyword: keyword,\n      function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n      number:\n        /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n      punctuation: /[.:,;(){}[\\]]/\n    }\n    Prism.languages.zig['class-name'].forEach(function (obj) {\n      if (obj.inside === null) {\n        obj.inside = Prism.languages.zig\n      }\n    })\n  })(Prism)\n}\n","/**\n * @typedef {import('./core.js').RefractorRoot} RefractorRoot\n * @typedef {import('./core.js').RefractorElement} RefractorElement\n * @typedef {import('./core.js').Text} Text\n * @typedef {import('./core.js').Grammar} Grammar\n * @typedef {import('./core.js').Syntax} Syntax\n */\nimport markup from '../lang/markup.js'\nimport css from '../lang/css.js'\nimport clike from '../lang/clike.js'\nimport regex from '../lang/regex.js'\nimport javascript from '../lang/javascript.js'\nimport abap from '../lang/abap.js'\nimport abnf from '../lang/abnf.js'\nimport actionscript from '../lang/actionscript.js'\nimport ada from '../lang/ada.js'\nimport agda from '../lang/agda.js'\nimport al from '../lang/al.js'\nimport antlr4 from '../lang/antlr4.js'\nimport apacheconf from '../lang/apacheconf.js'\nimport sql from '../lang/sql.js'\nimport apex from '../lang/apex.js'\nimport apl from '../lang/apl.js'\nimport applescript from '../lang/applescript.js'\nimport aql from '../lang/aql.js'\nimport c from '../lang/c.js'\nimport cpp from '../lang/cpp.js'\nimport arduino from '../lang/arduino.js'\nimport arff from '../lang/arff.js'\nimport armasm from '../lang/armasm.js'\nimport bash from '../lang/bash.js'\nimport yaml from '../lang/yaml.js'\nimport markdown from '../lang/markdown.js'\nimport arturo from '../lang/arturo.js'\nimport asciidoc from '../lang/asciidoc.js'\nimport csharp from '../lang/csharp.js'\nimport aspnet from '../lang/aspnet.js'\nimport asm6502 from '../lang/asm6502.js'\nimport asmatmel from '../lang/asmatmel.js'\nimport autohotkey from '../lang/autohotkey.js'\nimport autoit from '../lang/autoit.js'\nimport avisynth from '../lang/avisynth.js'\nimport avroIdl from '../lang/avro-idl.js'\nimport awk from '../lang/awk.js'\nimport basic from '../lang/basic.js'\nimport batch from '../lang/batch.js'\nimport bbcode from '../lang/bbcode.js'\nimport bbj from '../lang/bbj.js'\nimport bicep from '../lang/bicep.js'\nimport birb from '../lang/birb.js'\nimport bison from '../lang/bison.js'\nimport bnf from '../lang/bnf.js'\nimport bqn from '../lang/bqn.js'\nimport brainfuck from '../lang/brainfuck.js'\nimport brightscript from '../lang/brightscript.js'\nimport bro from '../lang/bro.js'\nimport bsl from '../lang/bsl.js'\nimport cfscript from '../lang/cfscript.js'\nimport chaiscript from '../lang/chaiscript.js'\nimport cil from '../lang/cil.js'\nimport cilkc from '../lang/cilkc.js'\nimport cilkcpp from '../lang/cilkcpp.js'\nimport clojure from '../lang/clojure.js'\nimport cmake from '../lang/cmake.js'\nimport cobol from '../lang/cobol.js'\nimport coffeescript from '../lang/coffeescript.js'\nimport concurnas from '../lang/concurnas.js'\nimport csp from '../lang/csp.js'\nimport cooklang from '../lang/cooklang.js'\nimport coq from '../lang/coq.js'\nimport ruby from '../lang/ruby.js'\nimport crystal from '../lang/crystal.js'\nimport cssExtras from '../lang/css-extras.js'\nimport csv from '../lang/csv.js'\nimport cue from '../lang/cue.js'\nimport cypher from '../lang/cypher.js'\nimport d from '../lang/d.js'\nimport dart from '../lang/dart.js'\nimport dataweave from '../lang/dataweave.js'\nimport dax from '../lang/dax.js'\nimport dhall from '../lang/dhall.js'\nimport diff from '../lang/diff.js'\nimport markupTemplating from '../lang/markup-templating.js'\nimport django from '../lang/django.js'\nimport dnsZoneFile from '../lang/dns-zone-file.js'\nimport docker from '../lang/docker.js'\nimport dot from '../lang/dot.js'\nimport ebnf from '../lang/ebnf.js'\nimport editorconfig from '../lang/editorconfig.js'\nimport eiffel from '../lang/eiffel.js'\nimport ejs from '../lang/ejs.js'\nimport elixir from '../lang/elixir.js'\nimport elm from '../lang/elm.js'\nimport lua from '../lang/lua.js'\nimport etlua from '../lang/etlua.js'\nimport erb from '../lang/erb.js'\nimport erlang from '../lang/erlang.js'\nimport excelFormula from '../lang/excel-formula.js'\nimport fsharp from '../lang/fsharp.js'\nimport factor from '../lang/factor.js'\nimport $false from '../lang/false.js'\nimport firestoreSecurityRules from '../lang/firestore-security-rules.js'\nimport flow from '../lang/flow.js'\nimport fortran from '../lang/fortran.js'\nimport ftl from '../lang/ftl.js'\nimport gml from '../lang/gml.js'\nimport gap from '../lang/gap.js'\nimport gcode from '../lang/gcode.js'\nimport gdscript from '../lang/gdscript.js'\nimport gedcom from '../lang/gedcom.js'\nimport gettext from '../lang/gettext.js'\nimport gherkin from '../lang/gherkin.js'\nimport git from '../lang/git.js'\nimport glsl from '../lang/glsl.js'\nimport gn from '../lang/gn.js'\nimport linkerScript from '../lang/linker-script.js'\nimport go from '../lang/go.js'\nimport goModule from '../lang/go-module.js'\nimport gradle from '../lang/gradle.js'\nimport graphql from '../lang/graphql.js'\nimport groovy from '../lang/groovy.js'\nimport less from '../lang/less.js'\nimport scss from '../lang/scss.js'\nimport textile from '../lang/textile.js'\nimport haml from '../lang/haml.js'\nimport handlebars from '../lang/handlebars.js'\nimport haskell from '../lang/haskell.js'\nimport haxe from '../lang/haxe.js'\nimport hcl from '../lang/hcl.js'\nimport hlsl from '../lang/hlsl.js'\nimport hoon from '../lang/hoon.js'\nimport hpkp from '../lang/hpkp.js'\nimport hsts from '../lang/hsts.js'\nimport json from '../lang/json.js'\nimport uri from '../lang/uri.js'\nimport http from '../lang/http.js'\nimport ichigojam from '../lang/ichigojam.js'\nimport icon from '../lang/icon.js'\nimport icuMessageFormat from '../lang/icu-message-format.js'\nimport idris from '../lang/idris.js'\nimport ignore from '../lang/ignore.js'\nimport inform7 from '../lang/inform7.js'\nimport ini from '../lang/ini.js'\nimport io from '../lang/io.js'\nimport j from '../lang/j.js'\nimport java from '../lang/java.js'\nimport php from '../lang/php.js'\nimport javadoclike from '../lang/javadoclike.js'\nimport scala from '../lang/scala.js'\nimport javadoc from '../lang/javadoc.js'\nimport javastacktrace from '../lang/javastacktrace.js'\nimport jexl from '../lang/jexl.js'\nimport jolie from '../lang/jolie.js'\nimport jq from '../lang/jq.js'\nimport jsTemplates from '../lang/js-templates.js'\nimport typescript from '../lang/typescript.js'\nimport jsdoc from '../lang/jsdoc.js'\nimport n4js from '../lang/n4js.js'\nimport jsExtras from '../lang/js-extras.js'\nimport json5 from '../lang/json5.js'\nimport jsonp from '../lang/jsonp.js'\nimport jsstacktrace from '../lang/jsstacktrace.js'\nimport julia from '../lang/julia.js'\nimport keepalived from '../lang/keepalived.js'\nimport keyman from '../lang/keyman.js'\nimport kotlin from '../lang/kotlin.js'\nimport kumir from '../lang/kumir.js'\nimport kusto from '../lang/kusto.js'\nimport latex from '../lang/latex.js'\nimport latte from '../lang/latte.js'\nimport scheme from '../lang/scheme.js'\nimport lilypond from '../lang/lilypond.js'\nimport liquid from '../lang/liquid.js'\nimport lisp from '../lang/lisp.js'\nimport livescript from '../lang/livescript.js'\nimport llvm from '../lang/llvm.js'\nimport log from '../lang/log.js'\nimport lolcode from '../lang/lolcode.js'\nimport magma from '../lang/magma.js'\nimport makefile from '../lang/makefile.js'\nimport mata from '../lang/mata.js'\nimport matlab from '../lang/matlab.js'\nimport maxscript from '../lang/maxscript.js'\nimport mel from '../lang/mel.js'\nimport mermaid from '../lang/mermaid.js'\nimport metafont from '../lang/metafont.js'\nimport mizar from '../lang/mizar.js'\nimport mongodb from '../lang/mongodb.js'\nimport monkey from '../lang/monkey.js'\nimport moonscript from '../lang/moonscript.js'\nimport n1ql from '../lang/n1ql.js'\nimport nand2tetrisHdl from '../lang/nand2tetris-hdl.js'\nimport naniscript from '../lang/naniscript.js'\nimport nasm from '../lang/nasm.js'\nimport neon from '../lang/neon.js'\nimport nevod from '../lang/nevod.js'\nimport nginx from '../lang/nginx.js'\nimport nim from '../lang/nim.js'\nimport nix from '../lang/nix.js'\nimport nsis from '../lang/nsis.js'\nimport objectivec from '../lang/objectivec.js'\nimport ocaml from '../lang/ocaml.js'\nimport odin from '../lang/odin.js'\nimport opencl from '../lang/opencl.js'\nimport openqasm from '../lang/openqasm.js'\nimport oz from '../lang/oz.js'\nimport parigp from '../lang/parigp.js'\nimport parser from '../lang/parser.js'\nimport pascal from '../lang/pascal.js'\nimport pascaligo from '../lang/pascaligo.js'\nimport psl from '../lang/psl.js'\nimport pcaxis from '../lang/pcaxis.js'\nimport peoplecode from '../lang/peoplecode.js'\nimport perl from '../lang/perl.js'\nimport phpdoc from '../lang/phpdoc.js'\nimport phpExtras from '../lang/php-extras.js'\nimport plantUml from '../lang/plant-uml.js'\nimport plsql from '../lang/plsql.js'\nimport powerquery from '../lang/powerquery.js'\nimport powershell from '../lang/powershell.js'\nimport processing from '../lang/processing.js'\nimport prolog from '../lang/prolog.js'\nimport promql from '../lang/promql.js'\nimport properties from '../lang/properties.js'\nimport protobuf from '../lang/protobuf.js'\nimport stylus from '../lang/stylus.js'\nimport twig from '../lang/twig.js'\nimport pug from '../lang/pug.js'\nimport puppet from '../lang/puppet.js'\nimport pure from '../lang/pure.js'\nimport purebasic from '../lang/purebasic.js'\nimport purescript from '../lang/purescript.js'\nimport python from '../lang/python.js'\nimport qsharp from '../lang/qsharp.js'\nimport q from '../lang/q.js'\nimport qml from '../lang/qml.js'\nimport qore from '../lang/qore.js'\nimport r from '../lang/r.js'\nimport racket from '../lang/racket.js'\nimport cshtml from '../lang/cshtml.js'\nimport jsx from '../lang/jsx.js'\nimport tsx from '../lang/tsx.js'\nimport reason from '../lang/reason.js'\nimport rego from '../lang/rego.js'\nimport renpy from '../lang/renpy.js'\nimport rescript from '../lang/rescript.js'\nimport rest from '../lang/rest.js'\nimport rip from '../lang/rip.js'\nimport roboconf from '../lang/roboconf.js'\nimport robotframework from '../lang/robotframework.js'\nimport rust from '../lang/rust.js'\nimport sas from '../lang/sas.js'\nimport sass from '../lang/sass.js'\nimport shellSession from '../lang/shell-session.js'\nimport smali from '../lang/smali.js'\nimport smalltalk from '../lang/smalltalk.js'\nimport smarty from '../lang/smarty.js'\nimport sml from '../lang/sml.js'\nimport solidity from '../lang/solidity.js'\nimport solutionFile from '../lang/solution-file.js'\nimport soy from '../lang/soy.js'\nimport turtle from '../lang/turtle.js'\nimport sparql from '../lang/sparql.js'\nimport splunkSpl from '../lang/splunk-spl.js'\nimport sqf from '../lang/sqf.js'\nimport squirrel from '../lang/squirrel.js'\nimport stan from '../lang/stan.js'\nimport stata from '../lang/stata.js'\nimport iecst from '../lang/iecst.js'\nimport supercollider from '../lang/supercollider.js'\nimport swift from '../lang/swift.js'\nimport systemd from '../lang/systemd.js'\nimport t4Templating from '../lang/t4-templating.js'\nimport t4Cs from '../lang/t4-cs.js'\nimport vbnet from '../lang/vbnet.js'\nimport t4Vb from '../lang/t4-vb.js'\nimport tap from '../lang/tap.js'\nimport tcl from '../lang/tcl.js'\nimport tt2 from '../lang/tt2.js'\nimport toml from '../lang/toml.js'\nimport tremor from '../lang/tremor.js'\nimport typoscript from '../lang/typoscript.js'\nimport unrealscript from '../lang/unrealscript.js'\nimport uorazor from '../lang/uorazor.js'\nimport v from '../lang/v.js'\nimport vala from '../lang/vala.js'\nimport velocity from '../lang/velocity.js'\nimport verilog from '../lang/verilog.js'\nimport vhdl from '../lang/vhdl.js'\nimport vim from '../lang/vim.js'\nimport visualBasic from '../lang/visual-basic.js'\nimport warpscript from '../lang/warpscript.js'\nimport wasm from '../lang/wasm.js'\nimport webIdl from '../lang/web-idl.js'\nimport wgsl from '../lang/wgsl.js'\nimport wiki from '../lang/wiki.js'\nimport wolfram from '../lang/wolfram.js'\nimport wren from '../lang/wren.js'\nimport xeora from '../lang/xeora.js'\nimport xmlDoc from '../lang/xml-doc.js'\nimport xojo from '../lang/xojo.js'\nimport xquery from '../lang/xquery.js'\nimport yang from '../lang/yang.js'\nimport zig from '../lang/zig.js'\nimport {refractor} from './core.js'\n\nrefractor.register(markup)\nrefractor.register(css)\nrefractor.register(clike)\nrefractor.register(regex)\nrefractor.register(javascript)\nrefractor.register(abap)\nrefractor.register(abnf)\nrefractor.register(actionscript)\nrefractor.register(ada)\nrefractor.register(agda)\nrefractor.register(al)\nrefractor.register(antlr4)\nrefractor.register(apacheconf)\nrefractor.register(sql)\nrefractor.register(apex)\nrefractor.register(apl)\nrefractor.register(applescript)\nrefractor.register(aql)\nrefractor.register(c)\nrefractor.register(cpp)\nrefractor.register(arduino)\nrefractor.register(arff)\nrefractor.register(armasm)\nrefractor.register(bash)\nrefractor.register(yaml)\nrefractor.register(markdown)\nrefractor.register(arturo)\nrefractor.register(asciidoc)\nrefractor.register(csharp)\nrefractor.register(aspnet)\nrefractor.register(asm6502)\nrefractor.register(asmatmel)\nrefractor.register(autohotkey)\nrefractor.register(autoit)\nrefractor.register(avisynth)\nrefractor.register(avroIdl)\nrefractor.register(awk)\nrefractor.register(basic)\nrefractor.register(batch)\nrefractor.register(bbcode)\nrefractor.register(bbj)\nrefractor.register(bicep)\nrefractor.register(birb)\nrefractor.register(bison)\nrefractor.register(bnf)\nrefractor.register(bqn)\nrefractor.register(brainfuck)\nrefractor.register(brightscript)\nrefractor.register(bro)\nrefractor.register(bsl)\nrefractor.register(cfscript)\nrefractor.register(chaiscript)\nrefractor.register(cil)\nrefractor.register(cilkc)\nrefractor.register(cilkcpp)\nrefractor.register(clojure)\nrefractor.register(cmake)\nrefractor.register(cobol)\nrefractor.register(coffeescript)\nrefractor.register(concurnas)\nrefractor.register(csp)\nrefractor.register(cooklang)\nrefractor.register(coq)\nrefractor.register(ruby)\nrefractor.register(crystal)\nrefractor.register(cssExtras)\nrefractor.register(csv)\nrefractor.register(cue)\nrefractor.register(cypher)\nrefractor.register(d)\nrefractor.register(dart)\nrefractor.register(dataweave)\nrefractor.register(dax)\nrefractor.register(dhall)\nrefractor.register(diff)\nrefractor.register(markupTemplating)\nrefractor.register(django)\nrefractor.register(dnsZoneFile)\nrefractor.register(docker)\nrefractor.register(dot)\nrefractor.register(ebnf)\nrefractor.register(editorconfig)\nrefractor.register(eiffel)\nrefractor.register(ejs)\nrefractor.register(elixir)\nrefractor.register(elm)\nrefractor.register(lua)\nrefractor.register(etlua)\nrefractor.register(erb)\nrefractor.register(erlang)\nrefractor.register(excelFormula)\nrefractor.register(fsharp)\nrefractor.register(factor)\nrefractor.register($false)\nrefractor.register(firestoreSecurityRules)\nrefractor.register(flow)\nrefractor.register(fortran)\nrefractor.register(ftl)\nrefractor.register(gml)\nrefractor.register(gap)\nrefractor.register(gcode)\nrefractor.register(gdscript)\nrefractor.register(gedcom)\nrefractor.register(gettext)\nrefractor.register(gherkin)\nrefractor.register(git)\nrefractor.register(glsl)\nrefractor.register(gn)\nrefractor.register(linkerScript)\nrefractor.register(go)\nrefractor.register(goModule)\nrefractor.register(gradle)\nrefractor.register(graphql)\nrefractor.register(groovy)\nrefractor.register(less)\nrefractor.register(scss)\nrefractor.register(textile)\nrefractor.register(haml)\nrefractor.register(handlebars)\nrefractor.register(haskell)\nrefractor.register(haxe)\nrefractor.register(hcl)\nrefractor.register(hlsl)\nrefractor.register(hoon)\nrefractor.register(hpkp)\nrefractor.register(hsts)\nrefractor.register(json)\nrefractor.register(uri)\nrefractor.register(http)\nrefractor.register(ichigojam)\nrefractor.register(icon)\nrefractor.register(icuMessageFormat)\nrefractor.register(idris)\nrefractor.register(ignore)\nrefractor.register(inform7)\nrefractor.register(ini)\nrefractor.register(io)\nrefractor.register(j)\nrefractor.register(java)\nrefractor.register(php)\nrefractor.register(javadoclike)\nrefractor.register(scala)\nrefractor.register(javadoc)\nrefractor.register(javastacktrace)\nrefractor.register(jexl)\nrefractor.register(jolie)\nrefractor.register(jq)\nrefractor.register(jsTemplates)\nrefractor.register(typescript)\nrefractor.register(jsdoc)\nrefractor.register(n4js)\nrefractor.register(jsExtras)\nrefractor.register(json5)\nrefractor.register(jsonp)\nrefractor.register(jsstacktrace)\nrefractor.register(julia)\nrefractor.register(keepalived)\nrefractor.register(keyman)\nrefractor.register(kotlin)\nrefractor.register(kumir)\nrefractor.register(kusto)\nrefractor.register(latex)\nrefractor.register(latte)\nrefractor.register(scheme)\nrefractor.register(lilypond)\nrefractor.register(liquid)\nrefractor.register(lisp)\nrefractor.register(livescript)\nrefractor.register(llvm)\nrefractor.register(log)\nrefractor.register(lolcode)\nrefractor.register(magma)\nrefractor.register(makefile)\nrefractor.register(mata)\nrefractor.register(matlab)\nrefractor.register(maxscript)\nrefractor.register(mel)\nrefractor.register(mermaid)\nrefractor.register(metafont)\nrefractor.register(mizar)\nrefractor.register(mongodb)\nrefractor.register(monkey)\nrefractor.register(moonscript)\nrefractor.register(n1ql)\nrefractor.register(nand2tetrisHdl)\nrefractor.register(naniscript)\nrefractor.register(nasm)\nrefractor.register(neon)\nrefractor.register(nevod)\nrefractor.register(nginx)\nrefractor.register(nim)\nrefractor.register(nix)\nrefractor.register(nsis)\nrefractor.register(objectivec)\nrefractor.register(ocaml)\nrefractor.register(odin)\nrefractor.register(opencl)\nrefractor.register(openqasm)\nrefractor.register(oz)\nrefractor.register(parigp)\nrefractor.register(parser)\nrefractor.register(pascal)\nrefractor.register(pascaligo)\nrefractor.register(psl)\nrefractor.register(pcaxis)\nrefractor.register(peoplecode)\nrefractor.register(perl)\nrefractor.register(phpdoc)\nrefractor.register(phpExtras)\nrefractor.register(plantUml)\nrefractor.register(plsql)\nrefractor.register(powerquery)\nrefractor.register(powershell)\nrefractor.register(processing)\nrefractor.register(prolog)\nrefractor.register(promql)\nrefractor.register(properties)\nrefractor.register(protobuf)\nrefractor.register(stylus)\nrefractor.register(twig)\nrefractor.register(pug)\nrefractor.register(puppet)\nrefractor.register(pure)\nrefractor.register(purebasic)\nrefractor.register(purescript)\nrefractor.register(python)\nrefractor.register(qsharp)\nrefractor.register(q)\nrefractor.register(qml)\nrefractor.register(qore)\nrefractor.register(r)\nrefractor.register(racket)\nrefractor.register(cshtml)\nrefractor.register(jsx)\nrefractor.register(tsx)\nrefractor.register(reason)\nrefractor.register(rego)\nrefractor.register(renpy)\nrefractor.register(rescript)\nrefractor.register(rest)\nrefractor.register(rip)\nrefractor.register(roboconf)\nrefractor.register(robotframework)\nrefractor.register(rust)\nrefractor.register(sas)\nrefractor.register(sass)\nrefractor.register(shellSession)\nrefractor.register(smali)\nrefractor.register(smalltalk)\nrefractor.register(smarty)\nrefractor.register(sml)\nrefractor.register(solidity)\nrefractor.register(solutionFile)\nrefractor.register(soy)\nrefractor.register(turtle)\nrefractor.register(sparql)\nrefractor.register(splunkSpl)\nrefractor.register(sqf)\nrefractor.register(squirrel)\nrefractor.register(stan)\nrefractor.register(stata)\nrefractor.register(iecst)\nrefractor.register(supercollider)\nrefractor.register(swift)\nrefractor.register(systemd)\nrefractor.register(t4Templating)\nrefractor.register(t4Cs)\nrefractor.register(vbnet)\nrefractor.register(t4Vb)\nrefractor.register(tap)\nrefractor.register(tcl)\nrefractor.register(tt2)\nrefractor.register(toml)\nrefractor.register(tremor)\nrefractor.register(typoscript)\nrefractor.register(unrealscript)\nrefractor.register(uorazor)\nrefractor.register(v)\nrefractor.register(vala)\nrefractor.register(velocity)\nrefractor.register(verilog)\nrefractor.register(vhdl)\nrefractor.register(vim)\nrefractor.register(visualBasic)\nrefractor.register(warpscript)\nrefractor.register(wasm)\nrefractor.register(webIdl)\nrefractor.register(wgsl)\nrefractor.register(wiki)\nrefractor.register(wolfram)\nrefractor.register(wren)\nrefractor.register(xeora)\nrefractor.register(xmlDoc)\nrefractor.register(xojo)\nrefractor.register(xquery)\nrefractor.register(yang)\nrefractor.register(zig)\n\nexport {refractor} from './core.js'\n","/**\n * @typedef {import('./core.js').RefractorRoot} RefractorRoot\n * @typedef {import('./core.js').RefractorElement} RefractorElement\n * @typedef {import('./core.js').Text} Text\n * @typedef {import('./core.js').Grammar} Grammar\n * @typedef {import('./core.js').Syntax} Syntax\n */\nimport clike from '../lang/clike.js'\nimport c from '../lang/c.js'\nimport cpp from '../lang/cpp.js'\nimport arduino from '../lang/arduino.js'\nimport bash from '../lang/bash.js'\nimport csharp from '../lang/csharp.js'\nimport markup from '../lang/markup.js'\nimport css from '../lang/css.js'\nimport diff from '../lang/diff.js'\nimport go from '../lang/go.js'\nimport ini from '../lang/ini.js'\nimport java from '../lang/java.js'\nimport regex from '../lang/regex.js'\nimport javascript from '../lang/javascript.js'\nimport json from '../lang/json.js'\nimport kotlin from '../lang/kotlin.js'\nimport less from '../lang/less.js'\nimport lua from '../lang/lua.js'\nimport makefile from '../lang/makefile.js'\nimport yaml from '../lang/yaml.js'\nimport markdown from '../lang/markdown.js'\nimport objectivec from '../lang/objectivec.js'\nimport perl from '../lang/perl.js'\nimport markupTemplating from '../lang/markup-templating.js'\nimport php from '../lang/php.js'\nimport python from '../lang/python.js'\nimport r from '../lang/r.js'\nimport ruby from '../lang/ruby.js'\nimport rust from '../lang/rust.js'\nimport sass from '../lang/sass.js'\nimport scss from '../lang/scss.js'\nimport sql from '../lang/sql.js'\nimport swift from '../lang/swift.js'\nimport typescript from '../lang/typescript.js'\nimport basic from '../lang/basic.js'\nimport vbnet from '../lang/vbnet.js'\nimport {refractor} from './core.js'\n\nrefractor.register(clike)\nrefractor.register(c)\nrefractor.register(cpp)\nrefractor.register(arduino)\nrefractor.register(bash)\nrefractor.register(csharp)\nrefractor.register(markup)\nrefractor.register(css)\nrefractor.register(diff)\nrefractor.register(go)\nrefractor.register(ini)\nrefractor.register(java)\nrefractor.register(regex)\nrefractor.register(javascript)\nrefractor.register(json)\nrefractor.register(kotlin)\nrefractor.register(less)\nrefractor.register(lua)\nrefractor.register(makefile)\nrefractor.register(yaml)\nrefractor.register(markdown)\nrefractor.register(objectivec)\nrefractor.register(perl)\nrefractor.register(markupTemplating)\nrefractor.register(php)\nrefractor.register(python)\nrefractor.register(r)\nrefractor.register(ruby)\nrefractor.register(rust)\nrefractor.register(sass)\nrefractor.register(scss)\nrefractor.register(sql)\nrefractor.register(swift)\nrefractor.register(typescript)\nrefractor.register(basic)\nrefractor.register(vbnet)\n\nexport {refractor} from './core.js'\n","// @ts-nocheck\n\n// This is a slimmed down version of `prism-core.js`, to remove globals,\n// document, workers, `util.encode`, `Token.stringify`\n\n// Private helper vars\nvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i\nvar uniqueId = 0\n\n// The grammar object for plaintext\nvar plainTextGrammar = {}\n\nvar _ = {\n  /**\n   * A namespace for utility methods.\n   *\n   * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n   * change or disappear at any time.\n   *\n   * @namespace\n   * @memberof Prism\n   */\n  util: {\n    /**\n     * Returns the name of the type of the given value.\n     *\n     * @param {any} o\n     * @returns {string}\n     * @example\n     * type(null)      === 'Null'\n     * type(undefined) === 'Undefined'\n     * type(123)       === 'Number'\n     * type('foo')     === 'String'\n     * type(true)      === 'Boolean'\n     * type([1, 2])    === 'Array'\n     * type({})        === 'Object'\n     * type(String)    === 'Function'\n     * type(/abc+/)    === 'RegExp'\n     */\n    type: function (o) {\n      return Object.prototype.toString.call(o).slice(8, -1)\n    },\n\n    /**\n     * Returns a unique number for the given object. Later calls will still return the same number.\n     *\n     * @param {Object} obj\n     * @returns {number}\n     */\n    objId: function (obj) {\n      if (!obj['__id']) {\n        Object.defineProperty(obj, '__id', {value: ++uniqueId})\n      }\n      return obj['__id']\n    },\n\n    /**\n     * Creates a deep clone of the given object.\n     *\n     * The main intended use of this function is to clone language definitions.\n     *\n     * @param {T} o\n     * @param {Record<number, any>} [visited]\n     * @returns {T}\n     * @template T\n     */\n    clone: function deepClone(o, visited) {\n      visited = visited || {}\n\n      var clone\n      var id\n      switch (_.util.type(o)) {\n        case 'Object':\n          id = _.util.objId(o)\n          if (visited[id]) {\n            return visited[id]\n          }\n          clone = /** @type {Record<string, any>} */ ({})\n          visited[id] = clone\n\n          for (var key in o) {\n            if (o.hasOwnProperty(key)) {\n              clone[key] = deepClone(o[key], visited)\n            }\n          }\n\n          return /** @type {any} */ (clone)\n\n        case 'Array':\n          id = _.util.objId(o)\n          if (visited[id]) {\n            return visited[id]\n          }\n          clone = []\n          visited[id] = clone\n\n          o.forEach(function (v, i) {\n            clone[i] = deepClone(v, visited)\n          })\n\n          return /** @type {any} */ (clone)\n\n        default:\n          return o\n      }\n    }\n  },\n\n  /**\n   * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n   *\n   * @namespace\n   * @memberof Prism\n   * @public\n   */\n  languages: {\n    /**\n     * The grammar for plain, unformatted text.\n     */\n    plain: plainTextGrammar,\n    plaintext: plainTextGrammar,\n    text: plainTextGrammar,\n    txt: plainTextGrammar,\n\n    /**\n     * Creates a deep copy of the language with the given id and appends the given tokens.\n     *\n     * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n     * will be overwritten at its original position.\n     *\n     * ## Best practices\n     *\n     * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n     * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n     * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n     *\n     * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n     * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n     *\n     * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n     * @param {Grammar} redef The new tokens to append.\n     * @returns {Grammar} The new language created.\n     * @public\n     * @example\n     * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n     *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n     *     // at its original position\n     *     'comment': { ... },\n     *     // CSS doesn't have a 'color' token, so this token will be appended\n     *     'color': /\\b(?:red|green|blue)\\b/\n     * });\n     */\n    extend: function (id, redef) {\n      var lang = _.util.clone(_.languages[id])\n\n      for (var key in redef) {\n        lang[key] = redef[key]\n      }\n\n      return lang\n    },\n\n    /**\n     * Inserts tokens _before_ another token in a language definition or any other grammar.\n     *\n     * ## Usage\n     *\n     * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n     * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n     * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n     * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n     * this:\n     *\n     * ```js\n     * Prism.languages.markup.style = {\n     *     // token\n     * };\n     * ```\n     *\n     * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n     * before existing tokens. For the CSS example above, you would use it like this:\n     *\n     * ```js\n     * Prism.languages.insertBefore('markup', 'cdata', {\n     *     'style': {\n     *         // token\n     *     }\n     * });\n     * ```\n     *\n     * ## Special cases\n     *\n     * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n     * will be ignored.\n     *\n     * This behavior can be used to insert tokens after `before`:\n     *\n     * ```js\n     * Prism.languages.insertBefore('markup', 'comment', {\n     *     'comment': Prism.languages.markup.comment,\n     *     // tokens after 'comment'\n     * });\n     * ```\n     *\n     * ## Limitations\n     *\n     * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n     * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n     * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n     * deleting properties which is necessary to insert at arbitrary positions.\n     *\n     * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n     * Instead, it will create a new object and replace all references to the target object with the new one. This\n     * can be done without temporarily deleting properties, so the iteration order is well-defined.\n     *\n     * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n     * you hold the target object in a variable, then the value of the variable will not change.\n     *\n     * ```js\n     * var oldMarkup = Prism.languages.markup;\n     * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n     *\n     * assert(oldMarkup !== Prism.languages.markup);\n     * assert(newMarkup === Prism.languages.markup);\n     * ```\n     *\n     * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n     * object to be modified.\n     * @param {string} before The key to insert before.\n     * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n     * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n     * object to be modified.\n     *\n     * Defaults to `Prism.languages`.\n     * @returns {Grammar} The new grammar object.\n     * @public\n     */\n    insertBefore: function (inside, before, insert, root) {\n      root = root || /** @type {any} */ (_.languages)\n      var grammar = root[inside]\n      /** @type {Grammar} */\n      var ret = {}\n\n      for (var token in grammar) {\n        if (grammar.hasOwnProperty(token)) {\n          if (token == before) {\n            for (var newToken in insert) {\n              if (insert.hasOwnProperty(newToken)) {\n                ret[newToken] = insert[newToken]\n              }\n            }\n          }\n\n          // Do not insert token which also occur in insert. See #1525\n          if (!insert.hasOwnProperty(token)) {\n            ret[token] = grammar[token]\n          }\n        }\n      }\n\n      var old = root[inside]\n      root[inside] = ret\n\n      // Update references in other language definitions\n      _.languages.DFS(_.languages, function (key, value) {\n        if (value === old && key != inside) {\n          this[key] = ret\n        }\n      })\n\n      return ret\n    },\n\n    // Traverse a language definition with Depth First Search\n    DFS: function DFS(o, callback, type, visited) {\n      visited = visited || {}\n\n      var objId = _.util.objId\n\n      for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n          callback.call(o, i, o[i], type || i)\n\n          var property = o[i]\n          var propertyType = _.util.type(property)\n\n          if (propertyType === 'Object' && !visited[objId(property)]) {\n            visited[objId(property)] = true\n            DFS(property, callback, null, visited)\n          } else if (propertyType === 'Array' && !visited[objId(property)]) {\n            visited[objId(property)] = true\n            DFS(property, callback, i, visited)\n          }\n        }\n      }\n    }\n  },\n\n  plugins: {},\n\n  /**\n   * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n   * and the language definitions to use, and returns a string with the HTML produced.\n   *\n   * The following hooks will be run:\n   * 1. `before-tokenize`\n   * 2. `after-tokenize`\n   * 3. `wrap`: On each {@link Token}.\n   *\n   * @param {string} text A string with the code to be highlighted.\n   * @param {Grammar} grammar An object containing the tokens to use.\n   *\n   * Usually a language definition like `Prism.languages.markup`.\n   * @param {string} language The name of the language definition passed to `grammar`.\n   * @returns {string} The highlighted HTML.\n   * @memberof Prism\n   * @public\n   * @example\n   * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n   */\n  highlight: function (text, grammar, language) {\n    var env = {\n      code: text,\n      grammar: grammar,\n      language: language\n    }\n    _.hooks.run('before-tokenize', env)\n    if (!env.grammar) {\n      throw new Error('The language \"' + env.language + '\" has no grammar.')\n    }\n    env.tokens = _.tokenize(env.code, env.grammar)\n    _.hooks.run('after-tokenize', env)\n    return Token.stringify(_.util.encode(env.tokens), env.language)\n  },\n\n  /**\n   * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n   * and the language definitions to use, and returns an array with the tokenized code.\n   *\n   * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n   *\n   * This method could be useful in other contexts as well, as a very crude parser.\n   *\n   * @param {string} text A string with the code to be highlighted.\n   * @param {Grammar} grammar An object containing the tokens to use.\n   *\n   * Usually a language definition like `Prism.languages.markup`.\n   * @returns {TokenStream} An array of strings and tokens, a token stream.\n   * @memberof Prism\n   * @public\n   * @example\n   * let code = `var foo = 0;`;\n   * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n   * tokens.forEach(token => {\n   *     if (token instanceof Prism.Token && token.type === 'number') {\n   *         console.log(`Found numeric literal: ${token.content}`);\n   *     }\n   * });\n   */\n  tokenize: function (text, grammar) {\n    var rest = grammar.rest\n    if (rest) {\n      for (var token in rest) {\n        grammar[token] = rest[token]\n      }\n\n      delete grammar.rest\n    }\n\n    var tokenList = new LinkedList()\n    addAfter(tokenList, tokenList.head, text)\n\n    matchGrammar(text, tokenList, grammar, tokenList.head, 0)\n\n    return toArray(tokenList)\n  },\n\n  /**\n   * @namespace\n   * @memberof Prism\n   * @public\n   */\n  hooks: {\n    all: {},\n\n    /**\n     * Adds the given callback to the list of callbacks for the given hook.\n     *\n     * The callback will be invoked when the hook it is registered for is run.\n     * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n     *\n     * One callback function can be registered to multiple hooks and the same hook multiple times.\n     *\n     * @param {string} name The name of the hook.\n     * @param {HookCallback} callback The callback function which is given environment variables.\n     * @public\n     */\n    add: function (name, callback) {\n      var hooks = _.hooks.all\n\n      hooks[name] = hooks[name] || []\n\n      hooks[name].push(callback)\n    },\n\n    /**\n     * Runs a hook invoking all registered callbacks with the given environment variables.\n     *\n     * Callbacks will be invoked synchronously and in the order in which they were registered.\n     *\n     * @param {string} name The name of the hook.\n     * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n     * @public\n     */\n    run: function (name, env) {\n      var callbacks = _.hooks.all[name]\n\n      if (!callbacks || !callbacks.length) {\n        return\n      }\n\n      for (var i = 0, callback; (callback = callbacks[i++]); ) {\n        callback(env)\n      }\n    }\n  },\n\n  Token: Token\n}\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n  /**\n   * The type of the token.\n   *\n   * This is usually the key of a pattern in a {@link Grammar}.\n   *\n   * @type {string}\n   * @see GrammarToken\n   * @public\n   */\n  this.type = type\n  /**\n   * The strings or tokens contained by this token.\n   *\n   * This will be a token stream if the pattern matched also defined an `inside` grammar.\n   *\n   * @type {string | TokenStream}\n   * @public\n   */\n  this.content = content\n  /**\n   * The alias(es) of the token.\n   *\n   * @type {string|string[]}\n   * @see GrammarToken\n   * @public\n   */\n  this.alias = alias\n  // Copy of the full string this token was created from\n  this.length = (matchedStr || '').length | 0\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n  pattern.lastIndex = pos\n  var match = pattern.exec(text)\n  if (match && lookbehind && match[1]) {\n    // change the match to remove the text matched by the Prism lookbehind group\n    var lookbehindLength = match[1].length\n    match.index += lookbehindLength\n    match[0] = match[0].slice(lookbehindLength)\n  }\n  return match\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n  for (var token in grammar) {\n    if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n      continue\n    }\n\n    var patterns = grammar[token]\n    patterns = Array.isArray(patterns) ? patterns : [patterns]\n\n    for (var j = 0; j < patterns.length; ++j) {\n      if (rematch && rematch.cause == token + ',' + j) {\n        return\n      }\n\n      var patternObj = patterns[j]\n      var inside = patternObj.inside\n      var lookbehind = !!patternObj.lookbehind\n      var greedy = !!patternObj.greedy\n      var alias = patternObj.alias\n\n      if (greedy && !patternObj.pattern.global) {\n        // Without the global flag, lastIndex won't work\n        var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0]\n        patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g')\n      }\n\n      /** @type {RegExp} */\n      var pattern = patternObj.pattern || patternObj\n\n      for (\n        // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos;\n        currentNode !== tokenList.tail;\n        pos += currentNode.value.length, currentNode = currentNode.next\n      ) {\n        if (rematch && pos >= rematch.reach) {\n          break\n        }\n\n        var str = currentNode.value\n\n        if (tokenList.length > text.length) {\n          // Something went terribly wrong, ABORT, ABORT!\n          return\n        }\n\n        if (str instanceof Token) {\n          continue\n        }\n\n        var removeCount = 1 // this is the to parameter of removeBetween\n        var match\n\n        if (greedy) {\n          match = matchPattern(pattern, pos, text, lookbehind)\n          if (!match || match.index >= text.length) {\n            break\n          }\n\n          var from = match.index\n          var to = match.index + match[0].length\n          var p = pos\n\n          // find the node that contains the match\n          p += currentNode.value.length\n          while (from >= p) {\n            currentNode = currentNode.next\n            p += currentNode.value.length\n          }\n          // adjust pos (and p)\n          p -= currentNode.value.length\n          pos = p\n\n          // the current node is a Token, then the match starts inside another Token, which is invalid\n          if (currentNode.value instanceof Token) {\n            continue\n          }\n\n          // find the last node which is affected by this match\n          for (\n            var k = currentNode;\n            k !== tokenList.tail && (p < to || typeof k.value === 'string');\n            k = k.next\n          ) {\n            removeCount++\n            p += k.value.length\n          }\n          removeCount--\n\n          // replace with the new match\n          str = text.slice(pos, p)\n          match.index -= pos\n        } else {\n          match = matchPattern(pattern, 0, str, lookbehind)\n          if (!match) {\n            continue\n          }\n        }\n\n        // eslint-disable-next-line no-redeclare\n        var from = match.index\n        var matchStr = match[0]\n        var before = str.slice(0, from)\n        var after = str.slice(from + matchStr.length)\n\n        var reach = pos + str.length\n        if (rematch && reach > rematch.reach) {\n          rematch.reach = reach\n        }\n\n        var removeFrom = currentNode.prev\n\n        if (before) {\n          removeFrom = addAfter(tokenList, removeFrom, before)\n          pos += before.length\n        }\n\n        removeRange(tokenList, removeFrom, removeCount)\n\n        var wrapped = new Token(\n          token,\n          inside ? _.tokenize(matchStr, inside) : matchStr,\n          alias,\n          matchStr\n        )\n        currentNode = addAfter(tokenList, removeFrom, wrapped)\n\n        if (after) {\n          addAfter(tokenList, currentNode, after)\n        }\n\n        if (removeCount > 1) {\n          // at least one Token object was removed, so we have to do some rematching\n          // this can only happen if the current pattern is greedy\n\n          /** @type {RematchOptions} */\n          var nestedRematch = {\n            cause: token + ',' + j,\n            reach: reach\n          }\n          matchGrammar(\n            text,\n            tokenList,\n            grammar,\n            currentNode.prev,\n            pos,\n            nestedRematch\n          )\n\n          // the reach might have been extended because of the rematching\n          if (rematch && nestedRematch.reach > rematch.reach) {\n            rematch.reach = nestedRematch.reach\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n  /** @type {LinkedListNode<T>} */\n  var head = {value: null, prev: null, next: null}\n  /** @type {LinkedListNode<T>} */\n  var tail = {value: null, prev: head, next: null}\n  head.next = tail\n\n  /** @type {LinkedListNode<T>} */\n  this.head = head\n  /** @type {LinkedListNode<T>} */\n  this.tail = tail\n  this.length = 0\n}\n\n/**\n * Adds a new node with the given value to the list.\n *\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n  // assumes that node != list.tail && values.length >= 0\n  var next = node.next\n\n  var newNode = {value: value, prev: node, next: next}\n  node.next = newNode\n  next.prev = newNode\n  list.length++\n\n  return newNode\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n *\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n  var next = node.next\n  for (var i = 0; i < count && next !== list.tail; i++) {\n    next = next.next\n  }\n  node.next = next\n  next.prev = node\n  list.length -= i\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n  var array = []\n  var node = list.head.next\n  while (node !== list.tail) {\n    array.push(node.value)\n    node = node.next\n  }\n  return array\n}\n\nexport const Prism = _\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","/**\n * @typedef _Token A hidden Prism token\n * @property {string} type\n * @property {string} content\n * @property {string} alias\n * @property {number} length\n *\n * @typedef _Env A hidden Prism environment\n * @property {string} type\n * @property {string} tag\n * @property {Text|RefractorElement|Array<Text|RefractorElement>} content\n * @property {Array<string>} classes\n * @property {Record<string, string>} attributes\n * @property {string} language\n *\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Omit<Element, 'children'> & {children: Array<RefractorElement|Text>}} RefractorElement\n * @typedef {Omit<Root, 'children'> & {children: Array<RefractorElement|Text>}} RefractorRoot\n *\n * @typedef {import('prismjs').Languages} Languages\n * @typedef {import('prismjs').Grammar} Grammar Whatever this is, Prism handles it.\n * @typedef {((prism: unknown) => void) & {displayName: string, aliases?: Array<string>}} Syntax A refractor syntax function\n *\n * @typedef Refractor Virtual syntax highlighting\n * @property {highlight} highlight\n * @property {alias} alias\n * @property {register} register\n * @property {registered} registered\n * @property {listLanguages} listLanguages\n * @property {Languages} languages\n */\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nimport {h} from 'hastscript'\nimport {parseEntities} from 'parse-entities'\nimport {Prism} from './prism-core.js'\n\nconst own = {}.hasOwnProperty\n\n// Inherit.\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n/** @type {Refractor} */\n// @ts-expect-error: TS is wrong.\nexport const refractor = new Refractor()\n\n// Create.\nrefractor.highlight = highlight\nrefractor.register = register\nrefractor.alias = alias\nrefractor.registered = registered\nrefractor.listLanguages = listLanguages\n\n// @ts-expect-error Overwrite Prism.\nrefractor.util.encode = encode\n// @ts-expect-error Overwrite Prism.\nrefractor.Token.stringify = stringify\n\n/**\n * Highlight `value` (code) as `language` (programming language).\n *\n * @param {string} value\n *   Code to highlight.\n * @param {string|Grammar} language\n *   Programming language name, alias, or grammar.\n * @returns {RefractorRoot}\n *   Node representing highlighted code.\n */\nfunction highlight(value, language) {\n  if (typeof value !== 'string') {\n    throw new TypeError('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  /** @type {Grammar} */\n  let grammar\n  /** @type {string|undefined} */\n  let name\n\n  // `name` is a grammar object.\n  // This was called internally by Prism.js before 1.28.0.\n  /* c8 ignore next 2 */\n  if (language && typeof language === 'object') {\n    grammar = language\n  } else {\n    name = language\n\n    if (typeof name !== 'string') {\n      throw new TypeError('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refractor.languages, name)) {\n      grammar = refractor.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return {\n    type: 'root',\n    // @ts-expect-error: we hacked Prism to accept and return the things we want.\n    children: Prism.highlight.call(refractor, value, grammar, name)\n  }\n}\n\n/**\n * Register a syntax.\n *\n * @param {Syntax} syntax\n *   Language function made for refractor, as in, the files in\n *   `refractor/lang/*.js`.\n * @returns {void}\n */\nfunction register(syntax) {\n  if (typeof syntax !== 'function' || !syntax.displayName) {\n    throw new Error('Expected `function` for `syntax`, got `' + syntax + '`')\n  }\n\n  // Do not duplicate registrations.\n  if (!own.call(refractor.languages, syntax.displayName)) {\n    syntax(refractor)\n  }\n}\n\n/**\n * Register aliases for already registered languages.\n *\n * @param {Record<string, string|Array<string>>|string} language\n * @param {string|Array<string>} [alias]\n * @returns {void}\n */\nfunction alias(language, alias) {\n  const languages = refractor.languages\n  /** @type {Record<string, string|Array<string>>} */\n  let map = {}\n\n  if (typeof language === 'string') {\n    if (alias) {\n      map[language] = alias\n    }\n  } else {\n    map = language\n  }\n\n  /** @type {string} */\n  let key\n\n  for (key in map) {\n    if (own.call(map, key)) {\n      const value = map[key]\n      const list = typeof value === 'string' ? [value] : value\n      let index = -1\n\n      while (++index < list.length) {\n        languages[list[index]] = languages[key]\n      }\n    }\n  }\n}\n\n/**\n * Check whether an `alias` or `language` is registered.\n *\n * @param {string} aliasOrLanguage\n * @returns {boolean}\n */\nfunction registered(aliasOrLanguage) {\n  if (typeof aliasOrLanguage !== 'string') {\n    throw new TypeError(\n      'Expected `string` for `aliasOrLanguage`, got `' + aliasOrLanguage + '`'\n    )\n  }\n\n  return own.call(refractor.languages, aliasOrLanguage)\n}\n\n/**\n * List all registered languages (names and aliases).\n *\n * @returns {Array<string>}\n */\nfunction listLanguages() {\n  const languages = refractor.languages\n  /** @type {Array<string>} */\n  const list = []\n  /** @type {string} */\n  let language\n\n  for (language in languages) {\n    if (\n      own.call(languages, language) &&\n      typeof languages[language] === 'object'\n    ) {\n      list.push(language)\n    }\n  }\n\n  return list\n}\n\n/**\n * @param {string|_Token|Array<string|_Token>} value\n * @param {string} language\n * @returns {Text|RefractorElement|Array<Text|RefractorElement>}\n */\nfunction stringify(value, language) {\n  if (typeof value === 'string') {\n    return {type: 'text', value}\n  }\n\n  if (Array.isArray(value)) {\n    /** @type {Array<Text|RefractorElement>} */\n    const result = []\n    let index = -1\n\n    while (++index < value.length) {\n      if (\n        value[index] !== '' &&\n        value[index] !== null &&\n        value[index] !== undefined\n      ) {\n        // @ts-expect-error Assume no sub-arrays.\n        result.push(stringify(value[index], language))\n      }\n    }\n\n    return result\n  }\n\n  /** @type {_Env} */\n  const env = {\n    type: value.type,\n    content: stringify(value.content, language),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language\n  }\n\n  if (value.alias) {\n    env.classes.push(\n      ...(typeof value.alias === 'string' ? [value.alias] : value.alias)\n    )\n  }\n\n  // @ts-expect-error Prism.\n  refractor.hooks.run('wrap', env)\n\n  // @ts-expect-error Hush, it’s fine.\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\n/**\n * @template {unknown} T\n * @param {T} tokens\n * @returns {T}\n */\nfunction encode(tokens) {\n  return tokens\n}\n\n/**\n * @param {Record<string, string>} attrs\n * @returns {Record<string, string>}\n */\nfunction attributes(attrs) {\n  /** @type {string} */\n  let key\n\n  for (key in attrs) {\n    if (own.call(attrs, key)) {\n      attrs[key] = parseEntities(attrs[key])\n    }\n  }\n\n  return attrs\n}\n"],"names":["arduino","Prism","register","refractorCpp","languages","extend","keyword","constant","builtin","ino","displayName","aliases","bash","envVars","commandAfterHeredoc","pattern","lookbehind","alias","inside","insideString","environment","RegExp","variable","greedy","number","operator","punctuation","entity","shebang","comment","parameter","string","function","boolean","toBeCopied","i","length","sh","shell","basic","c","refractorClike","insertBefore","char","macro","directive","expression","clike","cpp","refractorC","modName","source","replace","module","generic","csharp","replacements","m","index","re","flags","nested","depthLog2","keywordKinds","keywordsToPattern","words","trim","typeDeclarationKeywords","keywords","nonTypeKeywords","nonContextualKeywords","nestedRound","name","genericName","identifier","array","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","character","regularString","verbatimString","range","namespace","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","attribute","target","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolation","interpolationRound","dotnet","cs","css","atrule","rule","url","selector","property","important","rest","markup","tag","addInlined","addAttribute","diff","coord","PREFIXES","unchanged","Object","keys","forEach","prefix","test","push","exec","line","defineProperty","value","go","ini","section","key","java","classNamePrefix","className","annotation","generics","import","static","javascript","regex","hashbang","js","json","null","webmanifest","kotlin","interpolationInside","label","kt","kts","less","refractorCss","lua","makefile","markdown","refractorMarkup","inner","createInline","tableCell","tableRow","tableLine","yaml","blockquote","table","code","title","hr","list","bold","content","italic","strike","token","hooks","add","env","language","walkTokens","tokens","l","type","codeLang","codeBlock","lang","toLowerCase","classes","cls","match","grammar","highlight","plugins","autoloader","id","Date","valueOf","Math","floor","random","attributes","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCodePoint","fromCharCode","md","markupTemplating","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","indexOf","tokenizePlaceholders","j","k","t","s","before","substring","middle","Token","tokenize","after","replacement","apply","splice","concat","prolog","doctype","cdata","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","objectivec","objc","perl","brackets","join","filehandle","php","refractorMarkupTemplating","delimiter","package","string_interpolation","python","decorator","py","r","ellipsis","specialEscape","escape","rangeChar","groupName","backreference","anchor","group","quantifier","alternation","ruby","percentExpression","symbolName","symbol","command","rb","rust","multilineComment","sass","scss","parent","statement","sql","swift","literal","nil","omit","typescript","refractorJavascript","at","ts","vbnet","refractorBasic","anchorOrAlias","properties","plainKey","createValuePattern","scalar","datetime","yml","abap","abnf","coreRules","terminal","repetition","definition","actionscript","ada","agda","al","antlr4","action","g4","apacheconf","apex","refractorSql","insertClassName","classNameInside","trigger","apl","assignment","dfn","applescript","aql","arff","armasm","instruction","arturo","createLanguageString","embedded","multistring","color","predicate","sugar","art","asciidoc","quoted","interpreted","specifiers","admonition","callout","inline","copyFromAsciiDoc","o","split","adoc","aspnet","refractorCsharp","asm6502","asmatmel","autohotkey","autoit","avisynth","types","allinternals","argument","avs","avroIdl","avdl","awk","gawk","batch","bbcode","shortcode","bbj","bicep","datatype","birb","metadata","bison","bnf","rbnf","bqn","brainfuck","pointer","increment","decrement","branching","brightscript","bro","bsl","oscript","cfscript","scope","cfc","chaiscript","cil","cilkc","cilkcpp","clojure","cmake","inserted","cobol","level","coffeescript","script","coffee","concurnas","langext","conc","csp","scheme","none","nonce","hash","host","cooklang","single_token_suffix","multi_token_infix","multi_token","timer_units","meta","cookware","quantity","ingredient","amount","unit","timer","duration","coq","commentSource","punct","crystal","refractorRuby","args","expansion","cssExtras","selectorInside","class","combinator","hexcode","csv","cue","stringLiteral","cypher","relationship","d","dart","packagePrefix","undefined","dataweave","date","dax","measure","dhall","django","filter","jinja2","dnsZoneFile","docker","spaceAfterBackSlash","space","option","stringRule","commentRule","options","dockerfile","dot","ID","IDInside","withID","node","gv","ebnf","special","editorconfig","eiffel","ejs","eta","elixir","doc","elm","hvariable","etlua","refractorLua","erb","erlang","excelFormula","reference","sheet","file","path","cell","column","row","fsharp","factor","comment_inside","string_inside","regexp","combinators","str","arrToWordsRegExp","arr","map","builtins","$false","firestoreSecurityRules","method","flow","Array","isArray","unshift","fortran","ftl","FTL_EXPR","gml","gamemakerlanguage","gap","continuation","gcode","checksum","gdscript","gedcom","record","gettext","po","gherkin","pystring","feature","scenario","outline","td","th","git","deleted","glsl","gn","gni","linkerScript","goModule","version","gradle","graphql","description","fragment","object","validTokens","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","addAlias","mutationEnd","varToken","offset","open","close","stackHeight","groovy","textile","modifierRegex","parenthesesRegex","withModifier","modifierTokens","phrase","modifier","cite","span","link","text","image","footnote","acronym","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","haml","filters","all_filters","handlebars","block","hbs","mustache","haskell","hs","haxe","reification","hcl","heredoc","hlsl","hoon","hpkp","hsts","uri","query","pair","authority","port","http","headerValueOf","header","langs","httpLanguages","plain","suffixTypes","getSuffixPattern","contentType","suffix","ichigojam","icon","icuMessageFormat","stringPattern","argumentSource","nestedMessage","message","idris","refractorHaskell","idr","ignore","entry","gitignore","hgignore","npmignore","inform7","substitution","verb","position","io","adverb","conjunction","javadoclike","javaDocLike","docLanguage","callback","tokenName","docCommentSupport","addSupport","scala","refractorJava","javadoc","refractorJavadoclike","codeLinePattern","memberReference","field","javastacktrace","summary","exceptions","more","jexl","transform","jolie","aggregates","redirects","jq","stringInterpolation","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","counter","tokenizeWithHooks","run","tokenizeInterpolationExpression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","afterTokens","Boolean","supportedLanguages","jsx","tsx","stringContent","findTemplateStrings","jsdoc","refractorTypescript","parameterPrefix","example","n4js","n4jsd","jsExtras","withId","imports","exports","spread","arrow","dom","console","maybeClassNameTokens","util","json5","refractorJson","jsonp","jsstacktrace","filename","julia","keepalived","ip","email","keyman","kumir","nonId","wrapId","kum","kusto","latex","funcPattern","insideEqu","equation","headline","tex","context","latte","refractorPhp","markupLatte","SortedBNF","lilypond","refractorScheme","schemeExpression","ly","liquid","empty","insideRaw","tagMatch","lisp","simple_form","primitive","marker","par","nestedPar","heading","declare","interactive","defvar","defun","arguments","lambda","car","arg","varform","forms","arglist","clone","sublist","elisp","emacs","livescript","llvm","log","exception","separator","domain","uuid","time","lolcode","magma","output","generator","mata","orgType","missing","matlab","maxscript","mel","flag","mermaid","style","metafont","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","nand2tetrisHdl","naniscript","expressionDef","params","getTextContent","define","nani","input","stack","bracket","bracketsIndex","pop","isBracketsBalanced","nasm","neon","nevod","fields","search","colon","nginx","nim","nix","antiquotation","nsis","ocaml","variant","odin","escapes","discard","opencl","openqasm","qasm","oz","parigp","parser","pascal","asm","objectpascal","pascaligo","braces","reduce","accum","p","psl","pcaxis","tlist","px","peoplecode","pcode","phpdoc","phpExtras","this","global","plantUml","arrowAttr","arrowDirection","arrowBody","arrowRight","arrowPrefix","divider","plsql","powerquery","pq","mscript","powershell","processing","promql","vectorMatching","protobuf","builtinTypes","stylus","func","twig","pug","each","branch","mixin","filter_pattern","puppet","pure","inlineLanguageRe","purebasic","pbfasm","purescript","purs","qsharp","qualifiedName","interpolationExpr","qs","q","qml","jsString","jsComment","jsExpr","qore","racket","rkt","cshtml","commentLike","stringLike","round","square","curly","angle","inlineCs","tagAttrValue","tagAttrs","tagContent","tagRegion","inlineValue","razor","stringifyToken","openedTags","notTagNorBrace","openedBraces","plainText","refractorJsx","reason","constructor","rego","renpy","rpy","rescript","res","role","rip","roboconf","component","optional","wildcard","robotframework","createSection","extendecInside","docTag","testNameLike","testPropertyLike","settings","documentation","variables","tasks","robot","sas","numericConstant","macroVariable","macroKeyword","step","format","equals","altformat","globalStatements","submitStatement","actionSets","casActions","datalines","shellSession","refractorBash","strings","info","user","smali","smalltalk","smarty","smartyPattern","smartyLiteralMode","sml","word","smlnj","solidity","sol","solutionFile","guid","soy","numberPattern","soyLitteralMode","turtle","trig","sparql","refractorTurtle","rq","splunkSpl","sqf","squirrel","stan","higherOrderFunctions","constraint","stata","refractorMata","refractorPython","iecst","address","supercollider","sclang","systemd","quotesSource","t4Templating","createBlock","contentAlias","insideLang","standard","t4Cs","refractorT4Templating","t4","createT4","t4Vb","refractorVbnet","tap","refractorYaml","fail","pass","pragma","bailout","plan","subtest","yamlish","tcl","tt2","toml","insertKey","tremor","extractor","troy","trickle","typoscript","tsconfig","unrealscript","category","uc","uscript","uorazor","v","vala","velocity","unparsed","verilog","vhdl","vim","visualBasic","vb","vba","warpscript","wasm","webIdl","wgsl","functions","wiki","emphasis","nowiki","wolfram","blank","mathematica","wl","nb","wren","xeora","xeoracube","xmlDoc","insertDocComment","docComment","slashDocComment","tickDocComment","xojo","xquery","extension","axis","yang","zig","IDENTIFIER","ALIGN","TYPE","obj","refractor","uniqueId","plainTextGrammar","_","prototype","toString","call","slice","objId","deepClone","visited","hasOwnProperty","plaintext","txt","redef","insert","root","ret","newToken","old","DFS","propertyType","Error","stringify","encode","tokenList","LinkedList","addAfter","head","matchGrammar","next","tail","toArray","all","callbacks","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","startNode","startPos","rematch","patterns","cause","patternObj","currentNode","reach","removeCount","from","to","matchStr","removeFrom","prev","removeRange","nestedRematch","newNode","count","own","Refractor","TypeError","children","syntax","registered","aliasOrLanguage","listLanguages","result","h","attrs","parseEntities"],"sourceRoot":""}